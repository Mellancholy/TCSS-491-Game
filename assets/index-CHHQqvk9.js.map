{"version":3,"file":"index-CHHQqvk9.js","sources":["../../src/assetManager.ts","../../src/timer.ts","../../src/gameObject.ts","../../src/scenes/fillThePot/faucet.ts","../../src/gameEngine.ts","../../src/background.ts","../../src/button.ts","../../src/scene.ts","../../src/scenes/title/scene.ts","../../src/scenes/washThatRice/progressBar.ts","../../src/util.ts","../../src/scenes/washThatRice/pot.ts","../../src/scenes/washThatRice/riceGrain.ts","../../src/scenes/washThatRice/rotate.ts","../../src/scenes/washThatRice/hand.ts","../../src/scenes/washThatRice/checkmark.ts","../../src/scenes/washThatRice/scene.ts","../../src/scenes/dontBurnRice/timerBar.ts","../../src/scenes/dontBurnRice/ricecooker.ts","../../src/scenes/dontBurnRice/scene.ts","../../src/scenes/fillThePot/pot.ts","../../src/scenes/fillThePot/scene.ts","../../src/scenes/counter/food.ts","../../src/gameState.ts","../../src/scenes/counter/customer.ts","../../src/scenes/counter/scene.ts","../../src/scenes/riceStation/scene.ts","../../src/scenes/assembly/scene.ts","../../src/scenes/sides/scene.js","../../src/sceneManager.ts","../../src/hud/hud.ts","../../src/main.ts"],"sourcesContent":["export default class AssetManager {\n    successCount: number;\n    errorCount: number;\n    cache: { [key: string]: HTMLImageElement | HTMLAudioElement };\n    downloadQueue: string[];\n\n    constructor() {\n        this.successCount = 0;\n        this.errorCount = 0;\n        this.cache = {};\n        this.downloadQueue = [];\n    };\n\n    queueDownload(path: string) {\n        console.log(\"Queueing \" + path);\n        this.downloadQueue.push(path);\n    };\n\n    isDone() {\n        return this.downloadQueue.length === this.successCount + this.errorCount;\n    };\n\n    downloadAll(callback: () => void) {\n        if (this.downloadQueue.length === 0) setTimeout(callback, 10);\n        for (var i = 0; i < this.downloadQueue.length; i++) {\n            var that = this;\n\n            var path = this.downloadQueue[i];\n            console.log(path);\n            var ext = path.substring(path.length - 3).toLowerCase();\n\n            switch (ext) {\n                case 'jpg':\n                case 'png':\n                    var img = new Image();\n                    img.addEventListener(\"load\", function () {\n                        console.log(\"Loaded \" + this.src);\n                        that.successCount++;\n                        if (that.isDone()) callback();\n                    });\n\n                    img.addEventListener(\"error\", function () {\n                        console.log(\"Error loading \" + this.src);\n                        that.errorCount++;\n                        if (that.isDone()) callback();\n                    });\n\n                    img.src = path;\n                    this.cache[path] = img;\n                    break;\n                case 'wav':\n                case 'mp3':\n                case 'mp4':\n                    var aud = new Audio();\n                    aud.addEventListener(\"loadeddata\", function () {\n                        console.log(\"Loaded \" + this.src);\n                        that.successCount++;\n                        if (that.isDone()) callback();\n                    });\n\n                    aud.addEventListener(\"error\", function () {\n                        console.log(\"Error loading \" + this.src);\n                        that.errorCount++;\n                        if (that.isDone()) callback();\n                    });\n\n                    aud.addEventListener(\"ended\", function () {\n                        aud.pause();\n                        aud.currentTime = 0;\n                    });\n\n                    aud.src = path;\n                    aud.load();\n\n                    this.cache[path] = aud;\n                    break;\n            }\n        }\n    };\n\n    getAsset(path: string) {\n        return this.cache[path];\n    };\n\n    playAsset(path: string) {\n        let audio = this.cache[path] as HTMLAudioElement;\n        if (!audio) {\n            console.error(`Audio asset not found: ${path}`);\n            return;\n        }\n    \n        if (audio.loop) {\n            // If this is the background music, don't clone it, just ensure it's playing\n            if (audio.paused) {\n                audio.play().catch(err => console.warn(\"Autoplay blocked:\", err));\n            }\n            return;\n        }\n\n        // Clone sound effect for multiple overlapping plays\n        let clone = audio.cloneNode() as HTMLAudioElement;\n        clone.currentTime = 0;\n        clone.volume = audio.volume;\n        clone.play();\n    };\n\n    playBackgroundMusic(path: string) {\n        let bgm = this.cache[path] as HTMLAudioElement;\n        if (!bgm) {\n            console.error(`Background music not found: ${path}`);\n            return;\n        }\n        bgm.loop = true; // Ensure looping\n        if (bgm.paused) {\n            bgm.currentTime = 0; // Start from the beginning if it was paused\n            bgm.play().catch(err => console.warn(\"Autoplay blocked:\", err));\n        }\n    }\n    \n\n    muteAudio(mute: boolean) {\n        for (var key in this.cache) {\n            let asset = this.cache[key];\n            if (asset instanceof Audio) {\n                asset.muted = mute;\n            }\n        }\n    };\n\n    adjustVolume(volume: number) {\n        for (var key in this.cache) {\n            let asset = this.cache[key];\n            if (asset instanceof Audio) {\n                asset.volume = volume;\n            }\n        }\n    };\n\n    pauseBackgroundMusic() {\n        for (var key in this.cache) {\n            let asset = this.cache[key];\n            if (asset instanceof Audio) {\n                asset.pause();\n                asset.currentTime = 0;\n            }\n        }\n    };\n\n    autoRepeat(path: string) {\n        var aud = this.cache[path] as HTMLAudioElement;\n        aud.addEventListener(\"ended\", function () {\n            aud.play();\n        });\n    };\n};\n\n","// This game shell was happily modified from Googler Seth Ladd's \"Bad Aliens\" game and his Google IO talk in 2011\n\nexport default class Timer {\n    gameTime: number;\n    maxStep: number;\n    lastTimestamp: number;\n\n    constructor() {\n        this.gameTime = 0;\n        this.maxStep = 0.05;\n        this.lastTimestamp = 0;\n    };\n\n    tick() {\n        const current = Date.now();\n        const delta = (current - this.lastTimestamp) / 1000;\n        this.lastTimestamp = current;\n\n        const gameDelta = Math.min(delta, this.maxStep);\n        this.gameTime += gameDelta;\n        return gameDelta;\n    };\n};","import GameEngine from \"./gameEngine\";\n\nexport default class GameObject { \n    game: GameEngine;\n    id: string = \"\";\n    persistent: boolean = false;\n    removeFromWorld: boolean = false;\n    hidden: boolean | undefined = false;\n    [key: string]: any;\n\n    constructor(game: GameEngine, id: string = \"\", persistent: boolean = false) {\n        if (this.constructor == GameObject) {\n            throw new Error(\"Abstract classes can't be instantiated.\");\n        }\n\n        this.game = game;\n        this.id = id;\n        this.persistent = persistent;\n\n        if(persistent) {\n            game.registerPersistentGameObject(id, this)\n        }\n    }\n\n    init() {\n        // Initialize the game object\n        // This method should be overridden by subclasses\n        throw new Error(\"Method 'init()' must be implemented.\");\n    }\n\n    loadSharedData() {\n        const data = this.game.getSharedDataByKey(this.id)\n        for (const key in data) {\n            this[key] = data[key];\n        }\n        this.game.removeSharedDataByKey(this.id);\n    }\n\n    update() {\n        throw new Error(\"Method 'update()' must be implemented.\");\n    }\n\n    draw(ctx : CanvasRenderingContext2D) {\n        throw new Error(\"Method 'draw()' must be implemented.\");\n    }\n\n    deload() {\n        this.removeFromWorld = true;\n    }\n\n    restore() {\n        this.removeFromWorld = false;\n    }\n    \n\n    onMouseDown(e: MouseEvent) {\n\n    }\n\n    onMouseUp(e: MouseEvent) {\n\n    }\n}","import GameEngine from \"src/gameEngine\";\nimport GameObject from \"src/gameObject.js\";\nimport { ASSET_MANAGER } from \"src/main.js\";\nimport Pot from \"./pot\";\n\nexport default class Faucet extends GameObject {\n    game: GameEngine;\n    pot: Pot;\n    isOn: boolean;\n    gameWon: boolean;\n    gameOver: boolean;\n    \n    constructor(game: GameEngine, pot: Pot) {\n        super(game);\n        this.game = game;\n        this.isOn = false;\n        this.pot = pot\n        this.gameWon = false;\n        this.gameOver = false;\n    };\n\n    update() {\n        // If faucet is on, add water to pot\n        if (this.isOn) {\n            this.pot.liters++;\n            console.log(this.pot.liters);\n        }\n\n        if (!this.isOn && this.pot.liters > 0) {\n            if (this.pot.liters >= 700 && this.pot.liters < 800 && !this.gameWon) {\n                this.gameWon = true; \n                console.log(this.gameWon); // debugging\n                const currentData = this.game.getSharedDataByKey(\"riceCooker\");\n                const newAmount = currentData ? currentData.amount + 5 : 5;\n                this.game.addSharedData(\"riceCooker\", {amount: newAmount});\n                setTimeout(() => {\n                    this.game.sceneManager!.loadScene(\"rice\")\n                }\n                , 2000)\n            } else {\n                this.gameWon = false;\n            }\n            this.gameOver = true;\n        }\n\n        \n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if (this.isOn) {\n            ctx.drawImage(ASSET_MANAGER.getAsset(\"./assets/objects/Faucet_On.png\") as HTMLImageElement, 565, 248);\n        } else {\n            ctx.drawImage(ASSET_MANAGER.getAsset(\"./assets/objects/Faucet_Off.png\") as HTMLImageElement, 565, 285);\n        }\n\n        // Drawing hit box\n        ctx.beginPath();\n        ctx.strokeStyle = \"red\";\n        ctx.rect(550, 285, 50, 50);\n        ctx.stroke();\n    };\n\n    faucetManager(mouseX: number, mouseY: number) {\n        if (mouseX >= 550 && mouseX <= 550 + 50 && mouseY >= 285 && mouseY <= 285 + 45 && !this.isOn) {\n            this.isOn = true;\n            console.log(this.isOn);\n        } else if (mouseX >= 550 && mouseX <= 550 + 50 && mouseY >= 285 && mouseY <= 285 + 45 && this.isOn) {\n            this.isOn = false;\n            console.log(this.isOn);\n        }\n    }\n}","import Timer from \"./timer.js\";\nimport Faucet from \"./scenes/fillThePot/faucet.js\";\nimport SceneManager from \"./sceneManager.js\";\nimport Scene from \"./scene.js\";\nimport GameObject from \"./gameObject.js\";\nimport HUD from \"./hud/hud.js\";\n\n\n// This game shell was happily modified from Googler Seth Ladd's \"Bad Aliens\" game and his Google IO talk in 2011\n\nexport default class GameEngine {\n    ctx: CanvasRenderingContext2D | null;\n    entities: any[];\n    persistentGameObjects: {[key: string]: any};\n    click: { x: number, y: number } | null;\n    mouse: { x: number, y: number } | null;\n    move: { x: number, y: number } | null | undefined;\n    down: boolean | null;\n    previousMousePositionsDelay: number;\n    previousMousePositionsDelayCounter: number;\n    previousMousePositions: { x: number, y: number }[];\n    previousMousePositionsLatest: number;\n    wheel: WheelEvent | null;\n    keys: {[key: string]: boolean};\n    options: { debugging: boolean };\n    sceneManager: SceneManager | null;\n    currentScene: Scene | null;\n    hud: HUD | null;\n    sharedData: {[key: string]: any};\n    timer: Timer | undefined;\n    running: boolean | undefined;\n    rightclick: { x: number; y: number; } | undefined;\n    clockTick: number | undefined;\n\n\n    constructor(options: { debugging: boolean } | null) {\n        // What you will use to draw\n        // Documentation: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D\n        this.ctx = null;\n\n        // Everything that will be updated and drawn each frame\n        this.entities = [];\n        this.persistentGameObjects = {};\n\n        // Information on the input\n        this.click = null;\n        this.mouse = null;\n        this.down = null;\n        this.previousMousePositionsDelay = 3;\n        this.previousMousePositionsDelayCounter = 0;\n        this.previousMousePositions = [];\n        this.previousMousePositionsLatest = 0;\n        this.wheel = null;\n        this.keys = {};\n\n\n\n        // Options and the Details\n        this.options = options || {\n            debugging: false,\n        };\n\n        this.sceneManager = null;\n        this.currentScene = null;\n        this.hud = null;\n        this.sharedData = {};\n    };\n\n    init(ctx: CanvasRenderingContext2D) {\n        this.ctx = ctx;\n        this.startInput();\n        this.timer = new Timer();\n    };\n\n    start() {\n        this.running = true;\n        const gameLoop = () => {\n            this.loop();\n            // @ts-expect-error\n            requestAnimFrame(gameLoop, this.ctx!.canvas);\n        };\n        gameLoop();\n    };\n\n    startInput() {\n        var getXandY = (e: MouseEvent) => {\n            let bounds = this.ctx!.canvas.getBoundingClientRect();\n            let scaleX = this.ctx!.canvas.width / bounds.width;\n            let scaleY = this.ctx!.canvas.height / bounds.height;\n\n            let x = (e.clientX - bounds.left) * scaleX;\n            let y = (e.clientY - bounds.top) * scaleY;\n\n            return { x: x , y: y };\n        }\n        \n        this.ctx!.canvas.addEventListener(\"mousemove\", e => {\n            this.move = getXandY(e);\n            // if (this.options.debugging) {\n            //     console.log(\"MOUSE_MOVE\", getXandY(e));\n            // }\n            this.mouse = getXandY(e);\n            this.previousMousePositionsDelayCounter++;\n\n            if(this.previousMousePositionsDelayCounter >= this.previousMousePositionsDelay) {\n                if (this.previousMousePositions.length >= 15) {\n                    this.previousMousePositions.shift();\n                }\n                this.previousMousePositions.push(this.mouse);\n                this.previousMousePositionsDelayCounter = 0;\n                this.previousMousePositionsLatest = this.timer!.gameTime\n            }\n        });\n\n        this.ctx!.canvas.addEventListener(\"mouseup\", e => {\n            const realCoords = getXandY(e);\n            const modifiedEvent = {\n                ...e,\n                x: realCoords.x,\n                y: realCoords.y,\n            } as MouseEvent;\n            this.down = false;\n            // Stop dragging\n            this.entities.forEach(entity => {\n                if(entity.onMouseUp) entity.onMouseUp(modifiedEvent);\n            });\n\n            //console.log(\"Mouse Up\");  // Check if this is firing\n        }, false);\n\n        this.ctx!.canvas.addEventListener(\"mousedown\", (e) => {\n            const realCoords = getXandY(e);\n            const modifiedEvent = {\n                ...e,\n                x: realCoords.x,\n                y: realCoords.y,\n            } as MouseEvent;\n            this.down = true;\n            this.entities.forEach(entity => {\n                if(entity.onMouseDown) entity.onMouseDown(modifiedEvent);\n            });\n            if(this.options.debugging) {\n                this.addEntity(new Point(this, modifiedEvent.x, modifiedEvent.y));\n            }\n        }, false);\n\n        this.ctx!.canvas.addEventListener(\"click\", e => {\n            this.entities.forEach(entity => {\n                if (entity instanceof Faucet) {\n                    entity.faucetManager(getXandY(e).x, getXandY(e).y);\n                }\n            });\n            if (this.options.debugging) {\n                console.log(\"CLICK\", getXandY(e));\n                console.log(e)\n            }\n            this.click = getXandY(e);\n            // console.log(\"Mouse Clicked\");\n        });\n\n        this.ctx!.canvas.addEventListener(\"wheel\", e => {\n            if (this.options.debugging) {\n                //@ts-ignore\n                console.log(\"WHEEL\", getXandY(e), e.wheelDelta);\n            }\n            e.preventDefault(); // Prevent Scrolling\n            this.wheel = e;\n        });\n\n        this.ctx!.canvas.addEventListener(\"contextmenu\", e => {\n            if (this.options.debugging) {\n                console.log(\"RIGHT_CLICK\", getXandY(e));\n            }\n            e.preventDefault(); // Prevent Context Menu\n            this.rightclick = getXandY(e);\n        });\n\n        document.body.addEventListener(\"dndDrop\", e => {\n            this.entities.forEach(entity => {\n                if(entity.onDnDDrop) entity.onDnDDrop(e);\n            });\n        }, false);\n\n\n        this.ctx!.canvas.addEventListener(\"keydown\", event => this.keys[event.key] = true);\n        this.ctx!.canvas.addEventListener(\"keyup\", event => this.keys[event.key] = false);\n\n\n\n\n        // that.leftclick = mouseClickListener;\n        // this.ctx.canvas.addEventListener(\"click\", that.leftclick, false);\n    };\n\n    addEntity(entity: any) {\n        this.entities.push(entity);\n    };\n\n    draw() {\n        // Clear the whole canvas with transparent color (rgba(0, 0, 0, 0))\n        this.ctx!.clearRect(0, 0, this.ctx!.canvas.width, this.ctx!.canvas.height);\n\n        // Draw the entities in order\n        for (let i = 0; i < this.entities.length; i++) {\n            this.entities[i].draw(this.ctx, this);\n        }\n    };\n\n    update() {\n        // console.log(this.entities);\n        let entitiesCount = this.entities.length;\n        for (let i = 0; i < entitiesCount; i++) {\n            let entity = this.entities[i];\n\n            if (!entity.removeFromWorld) {\n                entity.update();\n            }\n            //If the size of the entity list has changed, update i\n            if(entitiesCount !== this.entities.length) {\n                let diff = entitiesCount - this.entities.length;\n                entitiesCount = this.entities.length;\n                i -= diff;\n            }\n        }\n\n        for (let i = this.entities.length - 1; i >= 0; --i) {\n            if (this.entities[i].removeFromWorld) {\n                this.entities.splice(i, 1);\n            }\n        }\n    };\n\n    loop() {\n        this.clockTick = this.timer!.tick();\n        this.update();\n        this.draw();\n    };\n\n    getSceneManager(): SceneManager {\n        if(!this.sceneManager) {\n            throw new Error(\"SceneManager is not initialized\");\n        }\n        return this.sceneManager;\n    }\n\n    getHUD(): HUD {\n        if(!this.hud) {\n            throw new Error(\"HUD is not initialized\");\n        }\n        return this.hud;\n    }\n\n    getSharedData() {\n        return this.sharedData;\n    }\n\n    getSharedDataByKey(key: string) {\n        return this.sharedData[key];\n    }\n    \n    getSharedDataByKeyAndDefault(key: string, defaultValue: object) {\n        if (this.sharedData[key] === undefined) {\n            return defaultValue;\n        }\n        return this.sharedData[key];\n    }\n    addSharedData(key: string, value: object) {\n        this.sharedData[key] = {...value};\n    }\n\n    removeSharedDataByKey(key: string) {\n        delete this.sharedData[key];\n    }\n\n    registerPersistentGameObject(id: string, gameObject: GameObject) {\n        this.persistentGameObjects[id] = gameObject;\n    }\n\n    getPersistentGameObject(id: string) {\n        return this.persistentGameObjects[id];\n    }\n\n    removePersistentGameObject(id: string) {\n        delete this.persistentGameObjects[id];\n    }\n    \n    clearPersistentGameObjects() {\n        this.persistentGameObjects = {};\n    }\n};\n\nclass Point extends GameObject {\n    x: number;\n    y: number;\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.x = x;\n        this.y = y;\n    }\n    update() {\n        \n    }\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.fillStyle = \"red\";\n        ctx.fillRect(this.x, this.y, 5, 5);\n    }\n}","import GameObject from \"./gameObject.js\";\nimport { ASSET_MANAGER } from \"./main.js\";\nimport GameEngine from \"./gameEngine.js\";\n\nexport default class Background extends GameObject {\n    game: GameEngine;\n    spritesheet: HTMLImageElement;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n\n    constructor(game: GameEngine, spritesheet: string, x = 0, y = 0, width = 0, height = 0) {\n        super(game, 'background');\n        this.game = game;\n        this.spritesheet = ASSET_MANAGER.getAsset(spritesheet) as HTMLImageElement;\n        this.x = x;\n        this.y = y;\n\n\n        if (width == 0 && height == 0) {\n            this.width = this.spritesheet.width;\n            this.height = this.spritesheet.height;\n        } else{\n            this.width = width;\n            this.height = height;\n        }\n    }\n\n    update() {\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.spritesheet, this.x, this.y, this.width, this.height);\n    }\n}","import GameObject from \"./gameObject.js\";\nimport { ASSET_MANAGER } from \"./main.js\";\nimport GameEngine from \"./gameEngine.js\";\n\nexport class Button extends GameObject {\n    image: HTMLImageElement | undefined;\n    x: number;\n    y: number;\n    width: any;\n    height: any;\n    bgColor: any;\n    text: string | undefined;\n    hidden: boolean;\n    \n\n    constructor(game: GameEngine, x: number, y: number, onClick: () => void) {\n        super(game, 'button');\n        this.x = x;\n        this.y = y;\n        this.onClick = onClick;\n        this.hidden = false;\n    }\n\n    static imageButton(game: GameEngine, x: number, y: number, image: string, onClick: () => void) {\n        let button = new Button(game, x, y, onClick);\n        Object.assign(button, { image: ASSET_MANAGER.getAsset(image) });\n        return button;\n    }\n\n    static rectButton(game: GameEngine, x: number, y:number , width: number, height: number, onClick: () => void, text=\"\") {\n        let button = new Button(game, x, y, onClick);\n        Object.assign(button, { width, height, bgColor: \"gray\", text });\n        return button;\n    }\n\n    static rectButtonImage(game: GameEngine, x: number, y: number, width: number, height: number, image: string, onClick: { (): void; (): void; }) {\n        let dnd = new Button(game, x, y, onClick);\n        Object.assign(dnd, { width, height, image: ASSET_MANAGER.getAsset(image), transparent: true });\n    \n        dnd.draw = function (ctx) {\n            \n            ctx.fillStyle = \"lightgray\";\n            ctx.fillRect(this.x, this.y, this.width, this.height);\n    \n            \n            if (this.image) {\n                const imgSize = Math.min(this.width, this.height) * 0.8; \n                ctx.drawImage(this.image, this.x + (this.width - imgSize) / 2, this.y + (this.height - imgSize) / 2, imgSize, imgSize);\n            } else {\n                console.error(`Image not found for button: ${image}`);\n            }\n        };\n    \n        return dnd;\n    }\n\n    update() {\n    }\n\n    onMouseDown(e: MouseEvent) {\n        if(this.hidden) return;\n        if(this.image) {\n            if (e.x > this.x! && e.x < this.x! + this.image.width &&\n                e.y > this.y! && e.y < this.y! + this.image.height) {\n                    this.onClick();\n            }\n        } else {\n            if (e.x > this.x! && e.x < this.x + this.width &&\n                e.y > this.y! && e.y < this.y + this.height) {\n                    this.onClick();\n            }\n        }\n    }\n    onClick() {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if(this.hidden) return;\n        if(this.image) {\n            ctx.drawImage(this.image, this.x!, this.y!);\n        } else {\n            ctx.fillStyle = this.bgColor;\n            ctx.fillRect(this.x!, this.y!, this.width, this.height);\n            ctx.lineWidth = 2;\n            ctx.strokeStyle = \"black\";\n            ctx.strokeRect(this.x!, this.y!, this.width, this.height);\n            ctx.fillStyle = \"black\"\n            ctx.font = \"36px serif\";\n            ctx.textAlign = \"center\";\n            ctx.textBaseline = \"middle\";\n            ctx.fillText(this.text!, this.x! + (this.width / 2), this.y! + (this.height / 2) + 5)\n        }\n    }\n}\n\nexport class DnDButton extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    onClick: () => void;\n    dragging: boolean;\n    transparent: boolean | undefined;\n    image: any;\n    bgColor: any;\n    width: number | undefined;\n    height: number | undefined;\n\n    constructor(game: GameEngine, x: number, y: number, onClick: () => void) {\n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.onClick = onClick;\n\n        this.dragging = false;\n    }\n\n    static imageButton(game: GameEngine, x: number, y: number, image: string, onClick: () => {}) {\n        let dnd = new DnDButton(game, x, y, onClick);\n        Object.assign(dnd, { image: ASSET_MANAGER.getAsset(image) });\n        return dnd;\n    }\n\n    static transparentImageButton(game: GameEngine, x: number, y: number, width: number, height: number, image: string, onClick: () => void) {\n        let dnd = new DnDButton(game, x, y, onClick);\n        Object.assign(dnd, { width, height, image: ASSET_MANAGER.getAsset(image), transparent: true });\n        return dnd;\n    }\n\n    static rectButton(game: GameEngine, x: number, y: number, width: number, height: number, color: string, onClick: () => void) {\n        let dnd = new DnDButton(game, x, y, onClick);\n        Object.assign(dnd, { width, height, bgColor: color });\n        return dnd;\n    }\n\n    update() {\n        \n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if(this.game.options.debugging) {\n            ctx.strokeStyle = \"blue\";\n            ctx.strokeRect(this.x, this.y, this.width!, this.height!);\n            if(this.image) {\n                ctx.strokeStyle = \"green\";\n                //ctx.strokeRect(this.x, this.y, this.image.width, this.image.height);\n            }\n        }\n        if(this.transparent && !this.dragging) return;\n        if(this.image) {\n            if(this.dragging) {\n                ctx.drawImage(this.image, this.game.mouse!.x - this.image.width / 2, this.game.mouse!.y - this.image.height / 2);\n            } else {\n                //console.log(\"drawing image\", this.image, this.x, this.y);\n                ctx.drawImage(this.image, this.x, this.y);\n            }\n            \n        } else {\n            if(this.dragging) {\n                ctx.fillStyle = this.bgColor;\n                ctx.fillRect(this.game.mouse!.x - this.width! / 2, this.game.mouse!.y - this.height! / 2, this.width!, this.height!);\n            } else {\n                ctx.fillStyle = this.bgColor;\n                ctx.fillRect(this.x, this.y, this.width!, this.height!);\n                ctx.lineWidth = 2;\n                ctx.strokeStyle = \"black\";\n                ctx.strokeRect(this.x, this.y, this.width!, this.height!);\n            }\n            \n        }\n    }\n\n    onMouseDown(e: MouseEvent) {\n        if(this.image && !this.transparent) {\n            if (e.x > this.x && e.x < this.x + this.image.width &&\n                e.y > this.y && e.y < this.y + this.image.height) {\n                    this.dragging = true;\n                    this.onClick();\n            }\n        } else {\n            if (e.x > this.x && e.x < this.x + this.width! &&\n                e.y > this.y && e.y < this.y + this.height!) {\n                    this.dragging = true;\n                    this.onClick();\n            }\n        }\n    }\n\n    onMouseUp(e: MouseEvent) {\n        if(this.dragging) {\n            this.dragging = false;\n            const event = new CustomEvent(\"dndDrop\",\n                {\n                    detail: {\n                        x: e.x,\n                        y: e.y,\n                        button: this\n                    }\n                }\n            );\n            document.body.dispatchEvent(event);\n        }\n        \n    }\n\n}\n","import { Button } from \"./button\";\nimport GameEngine from \"./gameEngine\";\nimport GameObject from \"./gameObject\";\n\nexport default class Scene {\n    game: GameEngine;\n    gameObjects: Array<GameObject>;\n\n    constructor(game: GameEngine) {\n        if (this.constructor == Scene) {\n            throw new Error(\"Abstract classes can't be instantiated.\");\n        }\n        this.game = game;\n        this.gameObjects = [];\n    }\n\n    initalizeScene() { \n        // This is where you would add all of the game objects to the scene\n    }\n\n    addGameObject(gameObject: GameObject) {\n        this.gameObjects.push(gameObject);\n        this.game.addEntity(gameObject);\n    }\n\n    addPersistantGameObject(id: string) {\n        let obj = this.game.getPersistentGameObject(id);\n        if (!obj) {\n            return false;\n        }\n        this.addGameObject(obj);\n        return true;\n    }\n\n    deload() {\n        this.gameObjects.forEach(gameObject => {\n            if (gameObject.persistent) {\n                return;  \n            }\n            gameObject.deload();\n        })\n        this.gameObjects = []\n    }\n\n    // Stub methods since its technically a game object\n    draw(ctx: CanvasRenderingContext2D) {}\n    update() {}\n}","import { ASSET_MANAGER } from \"src/main.js\";\nimport  Background  from \"src/background.js\";\nimport { Button } from \"src/button.js\";\nimport GameEngine from 'src/gameEngine.js';\nimport Scene from 'src/scene.js';\nimport { sceneManage } from \"src/main.js\";\n\nexport class TitleScene extends Scene {\n    game: GameEngine;\n        x: number;\n        y: number;\n        startButton: Button | undefined;\n\n    constructor(game: GameEngine, x: number, y: number) { \n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n    };\n\n    initalizeScene() { \n        this.addGameObject(new Background(this.game, \"./assets/backgrounds/Title_Background.png\"));  \n        this.startButton = Button.imageButton(this.game, 426, 400, \"./assets/button/Start_Button.png\", () => {\n            ASSET_MANAGER.playBackgroundMusic('./assets/sounds/background_music.mp3');\n            sceneManage.loadScene(\"order\");\n        })\n        this.addGameObject(this.startButton);\n        this.game.getHUD().setState(\"hidden\");\n    }\n\n}","import GameEngine from \"src/gameEngine\";\nimport GameObject from \"src/gameObject.js\"\n\nexport default class ProgressBar extends GameObject{\n    game: GameEngine\n    x: number\n    y: number\n    width: number\n    height: number\n    progress: number\n\n    constructor(game: GameEngine, x: number, y: number, width: number, height: number) {\n        super(game);\n        this.game = game\n        this.x = x\n        this.y = y\n        this.width = width\n        this.height = height\n        this.progress = 0.01\n    }\n\n    update() {\n        if(this.progress >= 1) {\n            this.game.win = true\n            const currentData = this.game.addSharedData(\"riceCooker\");\n            const newAmount = currentData ? currentData.amount + 5 : 5;\n            this.game.addSharedData(\"riceCooker\", {amount: newAmount});\n            setTimeout(() => {\n                this.game.sceneManager.loadScene(\"rice\")\n            }\n            , 2000)\n            return\n        }\n        if(this.game.spinning && this.progress < 1) {\n            this.progress += 0.001\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.fillStyle = 'green';\n        ctx.fillRect(this.x, this.y, this.width * this.progress, this.height);\n    }\n}","/**\n * @param {Number} n\n * @returns Random Integer Between 0 and n-1\n */\nexport const randomInt = (n: number) => Math.floor(Math.random() * n);\n\n/**\n * @param {Number} n\n * @returns Random Number Between start and end\n */\nexport const randomIntRange = (start: number, end: number) => Math.random() * (end - start) + start;\n\n/**\n * @param {Number} r Red Value\n * @param {Number} g Green Value\n * @param {Number} b Blue Value\n * @returns String that can be used as a rgb web color\n */\nexport const rgb = (r: number, g: number, b: number) => `rgba(${r}, ${g}, ${b})`;\n\n/**\n * @param {Number} r Red Value\n * @param {Number} g Green Value\n * @param {Number} b Blue Value\n * @param {Number} a Alpha Value\n * @returns String that can be used as a rgba web color\n */\nexport const rgba = (r: number, g: number, b: number, a: number) => `rgba(${r}, ${g}, ${b}, ${a})`;\n\n/**\n * @param {Number} h Hue\n * @param {Number} s Saturation\n * @param {Number} l Lightness\n * @returns String that can be used as a hsl web color\n */\nexport const hsl = (h: number, s: number, l: number) => `hsl(${h}, ${s}%, ${l}%)`;\n\n/**\n * Returns distance from two points\n * @param {Number} p1, p2 Two objects with x and y coordinates\n * @returns Distance between the two points\n */\ntype Point = {\n    x: number;\n    y: number;\n};\nexport const getDistance = (p1: Point, p2: Point) => {\n    return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n};\n\n/**\n * Checks if two circles are colliding\n * @param {Object} circle1 First circle { x, y, radius }\n * @param {Object} circle2 Second circle { x, y, radius }\n * @returns {Boolean} True if the circles are colliding, otherwise false\n */\ntype Circle = {\n    x: number;\n    y: number;\n    radius: number;\n};\nexport const isColliding = (circle1: Circle, circle2: Circle) => {\n    let distance = getDistance(circle1, circle2);\n    return distance < (circle1.radius + circle2.radius);\n};\n\n\nexport const pointInBoxCollision = (bx: number, by: number, bw: number, bh: number, px: number, py: number) => {\n    return px > bx && px < bx + bw && py > by && py < by + bh;\n}","import GameEngine from \"src/gameEngine\"\nimport GameObject from \"src/gameObject.js\"\nimport { ASSET_MANAGER } from \"src/main.js\"\nimport { getDistance } from \"src/util.js\"\n\nexport class PotTop extends GameObject {\n    game: GameEngine\n    x: number\n    y: number\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game\n        this.x = x\n        this.y = y\n    }\n\n    update() {\n        if(this.game.timer.gameTime - this.game.previousMousePositionsLatest > 0.5) {\n            this.game.previousMousePositions = []\n            this.game.spinning = false\n        }\n        if(this.game.previousMousePositions.length === 15) {\n            let avgPos = this.game.previousMousePositions.reduce((acc: {x: number, y: number}, curr: {x: number, y: number}) => {\n                return {x: acc.x + curr.x, y: acc.y + curr.y}\n            }, {x: 0, y: 0})\n            avgPos.x /= 15\n            avgPos.y /= 15\n\n            if(getDistance(avgPos, {x: this.x, y: this.y}) > 250) {\n                //console.log(\"too far\")\n                this.game.spinning = false\n                return\n            }\n\n            //console.log(avgPos)\n\n            let avgDist = this.game.previousMousePositions.reduce((acc: number, curr: {x: number, y: number}) => {\n                return acc + Math.sqrt(Math.pow(curr.x - avgPos.x, 2) + Math.pow(curr.y - avgPos.y, 2))\n            }, 0)\n            avgDist /= 15\n\n            //console.log(avgDist)\n\n            if(avgDist < 200) {\n                console.log(\"spinning\")\n                this.game.spinning = true\n            } else {\n                this.game.spinning = false\n            }\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        const WIDTH = 750\n        const HEIGHT = 750\n        const sprite = ASSET_MANAGER.getAsset('./assets/pot_top.png')\n        ctx.drawImage(sprite, this.x - (WIDTH / 2), this.y - (HEIGHT / 2), WIDTH, HEIGHT);\n    }\n}\n\nexport class PotTopOutside extends GameObject {\n    game: GameEngine\n    x: number\n    y: number\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game)\n        this.game = game\n        this.x = x\n        this.y = y\n    }\n\n    update() {\n        \n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        const WIDTH = 750\n        const HEIGHT = 750\n        const sprite = ASSET_MANAGER.getAsset('./assets/pot_top_outside.png')\n        ctx.drawImage(sprite, this.x - (WIDTH / 2), this.y - (HEIGHT / 2), WIDTH, HEIGHT);\n    }\n}","import GameEngine from \"src/gameEngine\"\nimport GameObject from \"src/gameObject.js\"\nimport { randomIntRange } from \"src/util.js\"\n\nconst COLORS = [\n    '#f5f5f5',\n    '#f8f8f8',\n    '#fafafa',\n    '#fcfcfc',\n    '#ffffff',\n    '#fefefe',\n    '#fdfdfd',\n    '#fbfbfb',\n    '#f7f7f7',\n    '#f4f4f4'\n]\n\nexport default class RiceGrain extends GameObject{\n    game: GameEngine\n    angle: number\n    distance: number\n    centerX: number\n    centerY: number\n    x: number\n    y: number\n    rotation: number\n    color: string\n\n    constructor(game: GameEngine, angle: number, distance: number, centerX: number, centerY: number) {\n        super(game);\n        this.game = game\n        this.angle = angle\n        this.distance = distance\n        this.centerX = centerX\n        this.centerY = centerY\n        this.x = 0\n        this.y = 0\n        this.rotation = randomIntRange(0, Math.PI * 2)\n        this.color = COLORS[Math.floor(Math.random() * COLORS.length)]\n    }\n\n    update() {\n        if(this.game.spinning) {\n            this.angle += Math.PI / 180\n        }\n        this.x = this.distance * Math.cos(this.angle) + this.centerX\n        this.y = this.distance * Math.sin(this.angle) + this.centerY\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        //console.log(this.x, this.y)\n        ctx.strokeStyle = 'black';\n        ctx.fillStyle = this.color;\n        ctx.beginPath();\n        ctx.ellipse(this.x, this.y, 20, 4, this.rotation, 0, 2 * Math.PI);\n        ctx.stroke();\n        ctx.fill();\n    }\n}","import GameEngine from \"src/gameEngine\"\nimport GameObject from \"src/gameObject.js\"\nimport { ASSET_MANAGER } from \"src/main.js\"\n\nexport default class RotateIcon extends GameObject {\n    game: GameEngine\n    x: number\n    y: number\n    angle: number\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game\n        this.x = x\n        this.y = y\n        this.angle = Math.PI / 3\n    }\n\n    update() {\n        this.angle += Math.PI / 180\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        const WIDTH = 450\n        const HEIGHT = 450\n        const sprite = ASSET_MANAGER.getAsset('./assets/rotate.png')\n        ctx.save();\n        ctx.translate(1024/2,768/2);\n        ctx.rotate(this.angle);\n        ctx.drawImage(sprite, -WIDTH/2, -HEIGHT/2, WIDTH, HEIGHT);\n        ctx.restore();\n        \n    }\n}\n\n","import GameEngine from \"src/gameEngine\";\nimport GameObject from \"src/gameObject.js\"\nimport { ASSET_MANAGER } from \"src/main.js\"\n\nexport default class Hand extends GameObject {\n    game: GameEngine\n    x: number\n    y: number\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game\n        this.x = x\n        this.y = y\n    }\n\n    update() {\n        if (this.game.mouse) {\n            this.x = this.game.mouse.x\n            this.y = this.game.mouse.y\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        const w = 300\n        const h = 300\n        const sprite = ASSET_MANAGER.getAsset('./assets/hand.png')\n        ctx.drawImage(sprite, this.x - (w / 2), this.y - (h / 2), w, h);\n    }\n}","import { ASSET_MANAGER } from \"src/main\";\nimport GameObject from \"src/gameObject\";\nimport GameEngine from \"src/gameEngine\";\n\nexport default class Checkmark extends GameObject{\n    game: GameEngine\n    ASSET_MANAGER: ASSET_MANAGER\n    x: number\n    y: number\n    start: boolean\n    show: boolean\n    timeShown: number\n    timesFlashed: number\n    audioPlayed: boolean\n\n    constructor(game: GameEngine, ASSET_MANAGER: ASSET_MANAGER, x: number, y: number) {\n        super(game);\n        this.game = game\n        this.ASSET_MANAGER = ASSET_MANAGER\n        this.x = x\n        this.y = y\n        this.start = false\n        this.show = false\n        this.timeShown = 0\n        this.timesFlashed = 0\n        this.audioPlayed = false\n    }\n\n    update() {\n        if(this.game.win) {\n            this.start = true\n            if(!this.audioPlayed) {\n                this.ASSET_MANAGER.playAsset('./assets/sounds/jingle.mp3')\n                this.audioPlayed = true\n            }\n        }\n        if (this.start && this.timesFlashed < 6) {\n            this.timeShown++\n            if (this.timeShown >= 20) {\n                this.show = !this.show\n                this.timeShown = 0\n                this.timesFlashed++\n            }\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if(this.show) {\n            const WIDTH = 500\n            const HEIGHT = 500\n            ctx.drawImage(ASSET_MANAGER.getAsset('./assets/checkmark.png'), this.x - (WIDTH / 2), this.y - (HEIGHT / 2), WIDTH, HEIGHT);\n        }\n    }\n}","import { ASSET_MANAGER } from \"src/main.js\";\nimport ProgressBar from \"./progressBar.js\";\nimport { PotTop, PotTopOutside } from \"./pot.js\";\nimport RiceGrain from \"./riceGrain.js\";\nimport RotateIcon from \"./rotate.js\";\nimport Hand from \"./hand.js\";\nimport Checkmark from \"./checkmark.js\";\nimport Scene from \"src/scene.js\";\nimport GameObject from \"src/gameObject.js\";\nimport GameEngine from \"src/gameEngine.js\";\n\nconst WIDTH = 1024\nconst HEIGHT = 768\n\nconst POT_RADIUS = 250\n\nexport class WashThatRiceScene extends Scene {\n    game: GameEngine;\n    x: number;\n    y: number;\n    spritesheet: HTMLImageElement;\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game;\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/backgrounds/Station_Background.png\");\n        this.x = x;\n        this.y = y;\n    }\n\n    initalizeScene() {\n        super.addGameObject(new Background(this.game, 0, 0));\n\n        super.addGameObject(new PotTop(this.game, (WIDTH / 2), (HEIGHT / 2)));\n\n        super.addGameObject(new ProgressBar(this.game, 0, HEIGHT - 20, 1024, 20));\n    \n        \n        let amountOfGrains = 2;\n        for(let distance = 0; distance < POT_RADIUS; distance += 20) {\n            for(let angle = 0; angle < Math.PI * 2; angle += Math.PI * 2 / amountOfGrains) {\n                let rice = new RiceGrain(this.game, angle, distance, (WIDTH / 2), (HEIGHT / 2));\n                super.addGameObject(rice);\n            }\n            amountOfGrains += 10;\n        }\n        \n        super.addGameObject(new PotTopOutside(this.game, (WIDTH / 2), (HEIGHT / 2)));\n    \n        super.addGameObject(new RotateIcon(this.game, (WIDTH / 2), (HEIGHT / 2)));\n        \n        super.addGameObject(new Hand(this.game, 0, 0));\n        \n        super.addGameObject(new Checkmark(this.game, ASSET_MANAGER, (WIDTH / 2), (HEIGHT / 2)));\n    }\n}\n\nclass Background extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    spritesheet: HTMLImageElement;\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/backgrounds/Station_Background.png\");\n    };\n\n    update() {\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.spritesheet, 0, 0);\n    };\n}\n\n\n","import GameObject from \"src/gameObject.js\";\n\nexport default class TimerBar extends GameObject {\n    constructor(gameEngine, totalTime) {\n        super(gameEngine);\n        this.gameEngine = gameEngine;\n        this.totalTime = totalTime; \n        this.elapsedTime = 0; \n        this.isCooking = false; \n        this.isDone = false; \n        this.result = null; \n\n        \n        this.perfectStart = this.totalTime * 0.8;\n        this.perfectEnd = this.totalTime;\n\n        this.x = 237; // X \n        this.y = 650; // Y \n        this.width = 550; // Width \n        this.height = 20; // Height\n    }\n\n    \n    start() {\n        if (!this.isCooking && !this.isDone) {\n            this.isCooking = true;\n            this.elapsedTime = 0;\n            this.result = null;\n            //console.log(\"TimerBar started!\"); \n        }\n    }\n\n    \n    stop() {\n        if (this.isCooking) {\n            this.isCooking = false;\n            this.isDone = true;\n\n            // Determine the result based on elapsed time\n            if (this.elapsedTime < this.perfectStart) {\n                this.result = \"undercooked\";\n            } else if (this.elapsedTime >= this.perfectStart && this.elapsedTime <= this.perfectEnd) {\n                this.result = \"perfect\";\n                const currentData = this.game.getSharedDataByKey(\"riceCooker\");\n                const newAmount = currentData ? currentData.amount + 5 : 5;\n                this.game.addSharedData(\"riceCooker\", {amount: newAmount});\n                setTimeout(() => {\n                    this.game.sceneManager!.loadScene(\"rice\")\n                }\n                , 2000)\n            } else {\n                this.result = \"overcooked\";\n            }\n\n            //console.log(`Cooking stopped! Result: ${this.result}`); \n        }\n    }\n\n    update() {\n        if (this.isCooking) {\n            this.elapsedTime += this.gameEngine.clockTick;\n\n            // Automatically stop if time exceeds totalTime\n            if (this.elapsedTime >= this.totalTime) {\n                this.stop();\n            }\n        }\n    }\n\n    draw(ctx) {\n        \n        ctx.fillStyle = \"lightgray\";\n        ctx.fillRect(this.x, this.y, this.width, this.height);\n\n        \n        const progressWidth = (this.elapsedTime / this.totalTime) * this.width;\n        ctx.fillStyle = \"blue\";\n        ctx.fillRect(this.x, this.y, progressWidth, this.height);\n\n        \n        const perfectStartX = this.x + (this.perfectStart / this.totalTime) * this.width;\n        const perfectEndX = this.x + (this.perfectEnd / this.totalTime) * this.width;\n        ctx.fillStyle = \"rgba(0, 255, 0, 0.3)\"; // Semi-transparent green\n        ctx.fillRect(perfectStartX, this.y, perfectEndX - perfectStartX, this.height);\n\n        \n        if (this.isDone) {\n            ctx.fillStyle = \"black\";\n            ctx.font = \"16px Arial\";\n            ctx.fillText(`Result: ${this.result}`, this.x, this.y + this.height + 20);\n        }\n    }\n}","import GameObject from \"src/gameObject.js\";\nimport { ASSET_MANAGER } from \"src/main.js\";\nimport TimerBar from \"./timerBar.js\";\nimport GameEngine from \"src/gameEngine.js\";\n\nexport default class RiceCooker extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    w: number;\n    h: number;\n\n    constructor(game: GameEngine) {\n        super(game);\n        this.game = game;\n        this.x = 237;\n        this.y = 100;\n        this.w = 550;\n        this.h = 525;\n\n        this.clicked = false;\n    }\n\n    onMouseDown(e: MouseEvent) {\n        if (this.isClicked(e.x, e.y)) {\n            this.handleClick();\n        }\n    }\n\n    onMouseUp(e: MouseEvent) {\n        if(this.isClicked(e.x, e.y)) {\n            this.handleClick();\n        }\n    }\n\n    isClicked(mouseX: number, mouseY: number) {\n        return (\n            mouseX >= this.x &&\n            mouseX <= this.x + this.w &&\n            mouseY >= this.y &&\n            mouseY <= this.y + this.h\n        );\n    }\n\n    handleClick() {\n        const timerBar = this.game.entities.find(entity => entity instanceof TimerBar);\n\n        if (timerBar) {\n            if (!this.clicked) {\n                this.clicked = true;\n                timerBar.start();\n                //console.log(\"RiceCooker clicked! Timer started.\");\n            } else {\n                this.clicked = false;\n                timerBar.stop();\n                //console.log(\"RiceCooker clicked again! Timer stopped.\");\n            }\n        }\n    }\n\n    update() {\n        \n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        //console.log(\"RiceCooker draw method called\");\n        const off = ASSET_MANAGER.getAsset(\"./assets/objects/RiceCooker_Off.png\") as HTMLImageElement;\n        const on = ASSET_MANAGER.getAsset(\"./assets/objects/RiceCooker_On.png\") as HTMLImageElement;\n\n        ctx.drawImage(off, this.x, this.y, this.w, this.h);\n\n        if (this.clicked) {\n            ctx.drawImage(on, this.x, this.y, this.w, this.h);\n            ctx.strokeStyle = \"red\";\n            ctx.lineWidth = 3;\n            ctx.strokeRect(this.x, this.y, this.w, this.h);\n        }\n    }\n}","import RiceCooker from \"./ricecooker.js\";\nimport TimerBar from \"./timerBar.js\";\nimport { ASSET_MANAGER } from \"src/main.js\";\nimport Scene from \"src/scene.js\";\nimport GameEngine from \"src/gameEngine.js\";\nimport GameObject from \"src/gameObject.js\";\n\n\nexport class DontBurnRiceScene extends Scene {\n    game: GameEngine;\n    x: number;\n    y: number;\n    \n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n    };\n\n    initalizeScene() {\n        this.addGameObject(new Background(this.game, 0, 0));\n        let timeBar = new TimerBar(this.game, 10);\n        let riceCooker = new RiceCooker(this.game);\n        this.addGameObject(riceCooker);\n        this.addGameObject(timeBar);\n\n    }\n}\n\nclass Background extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    spritesheet: HTMLImageElement;\n    \n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/backgrounds/Minigame_Background.png\") as HTMLImageElement;\n    };\n\n    update() {\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.spritesheet, 0, 0);\n    };\n}\n","import GameEngine from \"src/gameEngine\";\nimport GameObject from \"src/gameObject.js\";\nimport { ASSET_MANAGER } from \"src/main.js\";\n\nexport default class Pot extends GameObject {\n    game: GameEngine;\n    liters: number;\n    spritesheet: HTMLImageElement;\n    width: number;\n    height: number;\n    x: number;\n    y: number;\n    \n    constructor(game: GameEngine) {\n        super(game);\n        this.game = game;\n        this.liters = 0;\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/objects/Pot_Animation.png\") as HTMLImageElement;\n        this.width = 380;\n        this.height = 300;\n        this.x = 322;\n        this.y = 386;\n    };\n\n    update() {\n        \n\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if (this.liters == 0) {\n            ctx.drawImage(this.spritesheet, 0, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 100) {\n            ctx.drawImage(this.spritesheet, 380, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 200) {\n            ctx.drawImage(this.spritesheet, 760, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 300) {\n            ctx.drawImage(this.spritesheet, 1140, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 400) {\n            ctx.drawImage(this.spritesheet, 1520, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 500) {\n            ctx.drawImage(this.spritesheet, 1900, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 600) {\n            ctx.drawImage(this.spritesheet, 2280, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 700) {\n            ctx.drawImage(this.spritesheet, 2660, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 800) {\n            ctx.drawImage(this.spritesheet, 3040, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else {\n            ctx.drawImage(this.spritesheet, 3420, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        }\n    };\n}\n","import Pot from \"./pot.js\";\nimport Faucet from \"./faucet.js\";\nimport { ASSET_MANAGER } from \"src/main.js\";\nimport Scene from \"src/scene.js\";\nimport GameObject from \"src/gameObject.js\";\nimport GameEngine from \"src/gameEngine.js\";\n\n\nexport class FillThePotScene extends Scene {\n    game: GameEngine;\n    x: number;\n    y: number;\n    \n    constructor(game: GameEngine, x: number, y: number) {\n        super(game)\n        this.game = game;\n        this.x = x;\n        this.y = y;\n    };\n\n    initalizeScene() {\n        this.addGameObject(new Background(this.game, 0, 0));\n        const pot = new Pot(this.game)\n        this.addGameObject(pot);\n        this.addGameObject(new Faucet(this.game, pot));\n    }\n}\n\nclass Background extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    spritesheet: HTMLImageElement;\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/backgrounds/FillThePot_Background.png\") as HTMLImageElement;\n    };\n\n    update() {\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.spritesheet, 0, 0);\n    };\n}","export class Order {\n    ingredients: Ingredient[];\n    sides: Side[];\n    condiment: Condiment | null;\n    \n    constructor(ingredients: Ingredient[], sides: Side[], condiment: Condiment | null) {\n        this.ingredients = ingredients;\n        this.sides = sides;\n        this.condiment = condiment;\n    }\n}\n\nexport default class Ingredient {\n    name: string;\n    img: string;\n\n    constructor(type: string, img: string = '') {\n        this.name = type\n        this.img = img\n    }\n}\n\nclass Side {\n    name: string;\n    type: Ingredient[];\n    \n    constructor(name: string, type: Ingredient[]) {\n        this.name = name;\n        this.type = type;\n    }\n}\n\nclass Condiment {\n    type: string;\n\n    constructor(type: string) {\n        this.type = type\n    }\n}\n\nexport const NORI = new Ingredient('nori', './assets/objects/Nori.png');\nexport const RICE = new Ingredient('rice', './assets/objects/Rice.png');\nexport const RICE_CARRY = './assets/objects/Rice_Cooked.png';\n\nconst AVOCADO = new Ingredient('avocado', './assets/assembly/avocado.png');\nconst CRAB = new Ingredient('crab', './assets/assembly/crab.png');\nconst CUCUMBER = new Ingredient('cucumber', './assets/assembly/cucumber.png');\nconst OCTOPUS = new Ingredient('octopus', './assets/assembly/octopus.png');\nconst SALMON = new Ingredient('salmon', './assets/assembly/salmon.png');\nconst TUNA = new Ingredient('tuna', './assets/assembly/tuna.png');\nconst UNI = new Ingredient('uni', './assets/assembly/uni.png');\nconst TAMAGO = new Ingredient('tamago', './assets/assembly/tamago.png');\n\nexport const WRAP = [\n    NORI, RICE\n]\n\nexport const FILLINGS = [\n    AVOCADO, CRAB, CUCUMBER, OCTOPUS, SALMON, TUNA, UNI, TAMAGO\n]\n\n\n// rolls\nexport const CALIFORNIA_ROLL = [\n    RICE,\n    NORI,\n    CRAB,\n    AVOCADO\n]\n\nexport const SPICY_TUNA_ROLL = [\n    RICE,\n    NORI,\n    TUNA,\n]\n\nexport const ALASKAN_ROLL = [\n    SALMON,\n    RICE,\n    NORI,\n    AVOCADO,\n    CRAB,\n]\n\n// sides\nexport const KARAAGE = new Side('karaage', [\n    new Ingredient('chicken')\n]);\n\nexport const MISOSOUP = new Side('miso soup', [\n    new Ingredient('miso'),\n    new Ingredient('green onion'),\n    new Ingredient('tofu')\n]);\n\nexport const EDAMAME = new Side('edamame', [\n    new Ingredient('edamame')\n]);\n\nexport const GYOZA = new Side('gyoza', [\n    new Ingredient('chicken'),\n    new Ingredient('green onions')\n]);\n\nexport const SIDES = [\n    KARAAGE,\n    MISOSOUP,\n    EDAMAME,\n    GYOZA\n]\n\n// condiments\nexport const WASABI = new Condiment('wasabi');\nexport const GINGER = new Condiment('ginger');\nexport const SOY = new Condiment('soy sauce');\n\nexport const CONDIMENTS = [\n    WASABI,\n    GINGER,\n    SOY\n]","import GameObject from \"./gameObject\";\nimport Customer from \"./scenes/counter/customer\";\nimport { Order } from \"./scenes/counter/food\";\n\ntype OrderState = {\n    customer: Customer\n    order: Order\n}\ntype GameStateType = {\n    money: number\n    gameTime: number;\n    timeSinceDayStart: number;\n    orders: OrderState[]\n    orderWorkingOn: Order | null\n    currentDraggedItem: GameObject | null\n};\n\nconst DEFAULT_GAME_STATE: GameStateType = {\n    money: 0,\n    gameTime: 0,\n    timeSinceDayStart: 0,\n    orders: [],\n    orderWorkingOn: null,\n    currentDraggedItem: null\n};\n\nexport default class GameState {\n    private static instance: GameState;\n    private state: GameStateType = { ...DEFAULT_GAME_STATE };\n    \n    private constructor() {}\n    \n    public static getInstance(): GameState {\n        if (!GameState.instance) {\n            GameState.instance = new GameState();\n        }\n        return GameState.instance;\n    }\n    \n    public setState<K extends keyof GameStateType>(key: K, value: GameStateType[K]): GameStateType[K] {\n        this.state[key] = value;\n        return this.state[key];\n    }\n    \n    public getState<K extends keyof GameStateType>(key: K): GameStateType[K] {\n        return this.state[key];\n    }\n\n    public getAndMofifyState<K extends keyof GameStateType>(key: K, modifier: (value: GameStateType[K]) => GameStateType[K]): GameStateType[K] {\n        const currentValue = this.state[key];\n        const newValue = modifier(currentValue);\n        this.state[key] = newValue;\n        return newValue;\n    }\n\n    public addOrder(customer: Customer, order: Order): void {\n        this.state.orders.push({ customer, order });\n    }\n\n    public completeOrder(order: Order): void {\n        this.state.orders = this.state.orders.filter(o => o.order !== order);\n    }\n}","import GameObject from \"src/gameObject.js\";\nimport { ASSET_MANAGER } from \"src/main.js\";\nimport { Order, FILLINGS, WRAP, CONDIMENTS, SIDES } from \"./food.js\";\nimport { Button } from \"src/button.js\";\nimport GameEngine from \"src/gameEngine.js\";\nimport Scene from \"src/scene.js\";\nimport { randomIntRange } from \"src/util.js\";\nimport GameState from \"src/gameState.js\";\n\nexport default class Customer extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    yDrawOffset: number;\n    spritesheet: HTMLImageElement;\n    exclamationSprite: HTMLImageElement;\n    width: number;\n    height: number;\n    state: string;\n    order: Order | null;\n    okButton: Button | undefined;\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game, 'customer', true);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.yDrawOffset = 0;\n        this.spritesheet = ASSET_MANAGER.getAsset(this.randomCustomer()) as HTMLImageElement;\n        this.exclamationSprite = ASSET_MANAGER.getAsset(\"./assets/button/exclam.png\") as HTMLImageElement;\n        this.width = 400;\n        this.height = 600;\n        this.state = \"init\"\n        this.order = null;\n        this.addButton();\n        ASSET_MANAGER.playAsset('./assets/sounds/doorchime.mp3');\n        console.log(\"Customer created\");\n    };\n\n    update() {\n        switch (this.state) {\n            case \"init\":\n                this.state = \"walking\";\n                let npc = this;\n                async function startWalk() {\n                    await npc.walkTo(100, 100);\n                    npc.state = \"waiting\";\n                }\n                startWalk();\n                break;\n            case \"walking\":\n                break;\n            case \"waiting\":\n                break;\n            case \"order\":\n                break;\n            default:\n                break;\n        }\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if(this.game.options.debugging) {\n            ctx.strokeStyle = \"red\";\n            ctx.strokeRect(this.x, this.y, this.width, this.height);\n        }\n        ctx.drawImage(this.spritesheet, this.x, this.y + this.yDrawOffset, this.width, this.height);\n        switch (this.state) {\n            case \"init\":\n                break;\n            case \"walking\":\n                break;\n            case \"waiting\":\n                ctx.drawImage(this.exclamationSprite, this.x + (this.spritesheet.width / 2) - (this.exclamationSprite.width / 2) - 10, this.y - 30, 100, 100);\n                break;\n            case \"order\":\n                this.drawOrder(ctx);\n                break;\n            default:\n                break;\n        }\n    };\n\n    drawOrder(ctx: CanvasRenderingContext2D) {\n        if (!this.order) return;\n        const orderX = 500\n        const orderY = 100\n        const length = (WRAP.length + 3 + CONDIMENTS.length + 1) * 40\n        ctx.fillStyle = \"white\";\n        ctx.fillRect(orderX, orderY, 200, length);\n        ctx.fillStyle = \"black\";\n        ctx.strokeRect(orderX, orderY, 200, length);\n        ctx.font = \"20px Arial\";\n        ctx.textAlign = \"center\";\n        let yOffset = orderY\n        this.order.ingredients.forEach((ingredient) => {\n            if (ingredient.name === \"rice\" || ingredient.name === \"nori\") {\n                ctx.fillText(ingredient.name, 600, orderY + yOffset);\n            } else {\n                const sprite = ASSET_MANAGER.getAsset(ingredient.img) as HTMLImageElement;\n                ctx.drawImage(sprite, 600 - sprite.width / 2, orderY + yOffset); // Adjust for sprite height\n                yOffset += sprite.height;\n            }\n            yOffset += 30; // Increment placement upwards as index increases\n        });\n        this.order.sides.forEach((side) => {\n            ctx.fillText(side.name, 600, 100 + yOffset);\n            yOffset += 30; // Increment placement upwards as index increases\n        })\n    }\n\n    async walkTo(x: number, y: number) {\n        let npc: Customer = this;\n        return new Promise((resolve) => {\n            let t = 0;\n            function step() {\n                const speed = 5;\n                const xDiff = Math.abs(npc.x - x);\n                const yDiff = Math.abs(npc.y - y);\n                const dx = x - npc.x;\n                const dy = y - npc.y;\n                const length = Math.sqrt(dx * dx + dy * dy);\n                const nx = dx / length;\n                const ny = dy / length;\n                const xChange = Math.min(nx * speed, xDiff);\n                const yChange = Math.min(ny * speed, yDiff);\n                if (npc.x !== x) {\n                    npc.x += xChange\n                }\n                if (npc.x !== x) {\n                    npc.y += yChange\n                }\n                if (npc.x === x && npc.y === y) {\n                    resolve(true);\n                    return;\n                }\n\n                npc.yDrawOffset = (Math.sin((Math.PI / 4) * t) * 10);\n                requestAnimationFrame(step);\n                t += 0.1;\n            }\n            step()\n        })\n        // let intervalID = setInterval(() => {\n        //     if(this.y === y) {\n        //         clearInterval(intervalID);\n        //         this.hasWalked = true;\n        //     }\n        //     if (this.y < y) {\n        //         this.y += 5;\n        //     }\n        //     if (this.y > y) {\n        //         this.y -= 5;\n        //     }\n        // }, 20);\n    }\n\n    displayOrder() {\n        this.order = this.randomOrder();\n    }\n\n    addButton() {\n        console.log(\"Adding button\");\n        if(!this.game.currentScene) {\n            throw new Error(\"No current scene found\");\n        }\n        if(!this.game.currentScene.addPersistantGameObject(\"okButton\")) {\n            this.okButton = Button.rectButton(this.game, 750, 400, 100, 50, () => {\n                if(!this.okButton) return;\n                console.log(\"OK button pressed\");\n                console.log(this.okButton);\n                this.okButton.hidden = true;\n                GameState.getInstance().addOrder(this, this.order!);\n            }, \"OK\")\n            this.okButton.persistent = true;\n            this.okButton.id = \"okButton\";\n            this.okButton.hidden = true;\n            this.game.registerPersistentGameObject(\"okButton\", this.okButton)\n            if (this.game.currentScene) this.game.currentScene.addGameObject(this.okButton);\n        }\n        \n    }\n\n    randomOrder() {\n        // Helper function to get random elements from an array\n        function getRandomElements(array: any[], count: number) {\n            let shuffled = array.slice().sort(() => 0.5 - Math.random()); // Shuffle the array\n            return shuffled.slice(0, count); // Pick the first 'count' elements\n        }\n\n        const numWrap = randomIntRange(2, WRAP.length);\n        const numIngredients = randomIntRange(1, 3);\n        const numSides = randomIntRange(0, 1);\n\n        const selectedWraps = getRandomElements(WRAP, numWrap);\n        const selectedIngredients = getRandomElements(FILLINGS, numIngredients);\n        const selectedCondiments = getRandomElements(CONDIMENTS, 1);\n        const selectedSides = getRandomElements(SIDES, numSides);\n\n        return new Order(\n            [...selectedWraps, ...selectedIngredients],\n            [ ...selectedSides], selectedCondiments[0]\n        );\n    }\n\n    randomCustomer() {\n        const customerNum = Math.floor(Math.random() * (5 - 0 + 1)) + 0;\n        return \"./assets/characters/Customer_\" + customerNum + \".png\";\n    }\n\n    onMouseDown(e: MouseEvent): void {\n        if (this.state === \"waiting\") {\n            if (e.x > this.x && e.x < this.x + this.width && e.y > this.y && e.y < this.y + this.height) {\n                this.displayOrder();\n                this.okButton!.hidden = false;\n                this.state = \"order\";\n            }\n        }\n    }\n\n}","import  Background  from \"src/background.js\";\nimport Customer from './customer.js';\nimport GameEngine from 'src/gameEngine.js';\nimport Scene from 'src/scene.js';\n\nexport class CounterScene extends Scene {\n    game: GameEngine;\n    x: number;\n    y: number;\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n    };\n\n    initalizeScene() { \n        this.addGameObject(new Background(this.game, \"./assets/backgrounds/Order_Background.png\"));\n        if(!this.addPersistantGameObject(\"customer\")) {\n            console.log(\"Did not find customer\");\n            this.addGameObject(new Customer(this.game, 500, 25));\n        }\n        this.addGameObject(new Background(this.game, \"./assets/backgrounds/Order_Foreground.png\")); \n    \n    }\n}\n","import { ASSET_MANAGER } from \"src/main.js\";\nimport  Background  from \"src/background.js\";\nimport Scene from \"src/scene.js\";\nimport GameObject from \"src/gameObject.js\";\nimport { DnDButton } from \"src/button.js\";\nimport Ingredient, { NORI, Order, RICE, RICE_CARRY } from \"src/scenes/counter/food.js\";\nimport GameEngine from \"src/gameEngine\";\nimport GameState from \"src/gameState\";\n\nexport class RiceStationScene extends Scene { \n    game: GameEngine;\n    \n    constructor(game: GameEngine) {\n            super(game);\n            this.game = game;\n        };\n\n    initalizeScene() {\n            super.addGameObject(new Background(this.game, \"./assets/backgrounds/Station_Background.png\"));\n\n            super.addGameObject(new BambooMat(this.game, 450, 375));\n\n            const riceCooker = new RiceCooker(this.game, 10, 10, 430, 430)\n            super.addGameObject(riceCooker);\n\n            const nori = new Nori(this.game, 500, 80, 450, 300)\n            super.addGameObject(nori);\n\n        }\n}\n\nclass RiceCooker extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    amount: number;\n    cookerClicked: boolean;\n    spritesheet: HTMLImageElement;\n    dnd!: DnDButton;\n    \n    constructor(game: GameEngine, x: number, y: number, width: number, height: number) {\n        super(game, 'riceCooker');\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.amount = 1;\n        this.cookerClicked = false;\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/objects/RiceCooker.png\") as HTMLImageElement;\n        this.addButton();\n        super.loadSharedData();\n    }\n\n    addButton() {\n        this.dnd = DnDButton.transparentImageButton(this.game, this.x, this.y, this.width, this.height, RICE_CARRY, () => {\n            console.log(\"clicked on rice cooker\");\n            this.cookerClicked = true;\n        });\n        this.dnd.width = this.width;\n        this.dnd.height = this.height;\n        this.dnd.food = RICE;\n        this.dnd.id = 'ricesourcebuttons';\n        if(this.game.currentScene) this.game.currentScene.addGameObject(this.dnd);\n    }\n\n    update() {\n        if (this.cookerClicked) {\n            \n            if (this.amount == 0) {\n                this.beginMinigame();\n                this.amount = 5;\n            }\n            this.amount--;\n            this.cookerClicked = false;\n        }\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.spritesheet, this.x, this.y);\n        if(this.game.options.debugging) {\n            ctx.strokeStyle = \"red\";\n            //ctx.strokeRect(this.x, this.y, this.width, this.height);\n        }\n    };\n\n    beginMinigame() {\n        const minigame = Math.floor(Math.random() * 3);\n        console.log(minigame);\n        if (minigame == 0) {\n            this.game.getSceneManager().loadScene(\"fill\");\n            console.log(\"minigame 1\")\n        } else if (minigame == 1) {\n            this.game.getSceneManager().loadScene(\"burn\");\n            console.log(\"minigame 2\")\n        } else if (minigame == 2) {\n            this.game.getSceneManager().loadScene(\"wash\");\n            console.log(\"minigame 3\")\n        }\n    }   \n}\n\nclass Nori extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    noriSourceSprite: HTMLImageElement;\n    dnd!: DnDButton;\n\n    constructor(game: GameEngine, x: number, y: number, width: number, height: number) {\n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.noriSourceSprite = ASSET_MANAGER.getAsset(\"./assets/objects/Nori_Source.png\") as HTMLImageElement;\n        this.addButton();\n    };\n\n    addButton() {\n        this.dnd = DnDButton.transparentImageButton(this.game, this.x, this.y, this.width, this.height, NORI.img, () => {});\n        this.dnd.width = this.width;\n        this.dnd.height = this.height;\n        this.dnd.food = NORI;\n        if(this.game.currentScene) this.game.currentScene.addGameObject(this.dnd);\n    }\n\n    update() {\n\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.noriSourceSprite, this.x, this.y);\n\n    };\n}\n\nclass BambooMat extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    spritesheet: HTMLImageElement;\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/objects/BambooMat.png\") as HTMLImageElement;\n    };\n\n    update() {\n        \n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.spritesheet, this.x, this.y);\n        const centerX = this.x + (this.spritesheet.width / 2)\n        const centerY = this.y + (this.spritesheet.height / 2)\n\n        // Draw the ingredients on top of the bamboo mat\n        const orderWorkingOn = GameState.getInstance().getState('orderWorkingOn');\n        if(!orderWorkingOn) return;\n        orderWorkingOn.ingredients.forEach(element => {\n            const img = ASSET_MANAGER.getAsset(element.img) as HTMLImageElement;\n            ctx.drawImage(img, this.x, this.y);\n            // ctx.drawImage(img, centerX - (img.width / 2) + element.xOffset, centerY - (img.height / 2) + element.yOffset, img.width, img.height);\n        });\n    };\n\n    onDnDDrop(e: CustomEvent) {\n        // console.log(e);\n        // console.log(e.detail)\n        // console.log(e.detail.y);\n        if(e.detail.x >= this.x && e.detail.x <= this.x + this.spritesheet.width &&\n            e.detail.y >= this.y && e.detail.y <= this.y + this.spritesheet.height) {\n            console.log(\"dropped in food bottom\");\n            let orderWorkingOn = GameState.getInstance().getState('orderWorkingOn')\n            if(!orderWorkingOn) {\n                let newOrder = new Order([], [], null);\n                orderWorkingOn = GameState.getInstance().setState('orderWorkingOn', newOrder);\n            }\n            orderWorkingOn!.ingredients.push(e.detail.button.food);\n        }\n    }\n}\n","import Background from 'src/background.js';\nimport Scene from 'src/scene.js';\nimport GameObject from 'src/gameObject.js';\nimport { ASSET_MANAGER } from \"src/main.js\";\nimport { Button, DnDButton } from \"src/button.js\";\nimport Ingredient, { FILLINGS } from \"src/scenes/counter/food.js\";\nimport GameEngine from 'src/gameEngine';\nimport GameState from 'src/gameState';\n\nexport class RiceAssemblyScene extends Scene {\n    game: GameEngine;\n    foodBottom: FoodBottom | undefined;\n    rollButton: Button | undefined;\n    \n    constructor(game: GameEngine) {\n        super(game);\n        this.game = game;\n    };\n\n    initalizeScene() {\n\n        this.addGameObject(new Background(this.game, \"./assets/backgrounds/Station_Background.png\"));\n        this.addGameObject(new Background(this.game, \"./assets/assembly/case.jpg\", 0, 150, 1024, 197));\n        this.foodBottom = new FoodBottom(this.game, 227, 375, 570, 300);\n        this.addGameObject(this.foodBottom);\n        const binWidth = 80;\n        const binHeight = 80;\n        const foods = FILLINGS;\n        let curFood = 0;\n        let y = 240;\n        for(let x = 0; x < foods.length; x++) {\n            const foodBin = new FoodBin(this.game, foods[curFood], 10 + x * (binWidth + 4), y, binWidth, binHeight);\n            this.addGameObject(foodBin);\n            foodBin.addButton(); // add the button to the scene after the bin is added\n            curFood++;\n        }\n\n        this.rollButton = Button.rectButton(this.game, 600, 320, 100, 50, () => {\n            console.log(\"Clicked roll button\");\n            this.roll();\n        }, \"Roll\") \n        this.rollButton.hidden = true;\n        this.addGameObject(this.rollButton);\n        \n    }\n\n    roll() {\n        console.log(\"rolling\");\n        this.rollButton!.removeFromWorld = true;\n        this.foodBottom!.rolled = true;\n    }\n}\n\nclass FoodBin extends GameObject {\n    game: GameEngine;\n    food: {name: string, img: string};\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    dnd: DnDButton | undefined;\n\n    constructor(game: GameEngine, food: {name: string, img: string}, x: number, y: number, width: number, height: number) {\n        super(game, 'foodbin');\n        this.game = game;\n        this.food = food;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    };\n\n    addButton() {\n        this.dnd = DnDButton.transparentImageButton(this.game, this.x, this.y, this.width, this.height, this.food.img, () => {\n            console.log(\"clicked on food bin\", this.food);\n        });\n        this.dnd.width = this.width;\n        this.dnd.height = this.height;\n        this.dnd.food = this.food;\n        if(this.game.currentScene) this.game.currentScene.addGameObject(this.dnd);\n    }\n\n    update() {\n        \n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        // ctx.drawImage(ASSET_MANAGER.getAsset(\"./assets/assembly/tray.jpg\") as HTMLImageElement, this.x, this.y, this.width, this.height);\n        ctx.drawImage(ASSET_MANAGER.getAsset(\"./assets/trays/tray_\" + this.food.name + \".png\") as HTMLImageElement, this.x, this.y, this.width, this.height);\n        \n        const bottomWidth = 80\n        const bottomHeight = 35\n        const xOffset = this.width - bottomWidth\n        const yOffset = this.height - (bottomHeight)\n        const xCount = 3\n        const xSpace = bottomWidth / xCount\n        const yCount = 3\n        const ySpace = bottomHeight / yCount;\n        // for(let row = 0; row < yCount; row++) {\n        //     for(let col = 0; col < xCount; col++) {\n        //         ctx.drawImage(ASSET_MANAGER.getAsset(this.food.img) as HTMLImageElement, this.x + xOffset + (xSpace * col), this.y + (yOffset / 2) - 5 + (ySpace * row))\n        //     }\n        // }\n    };\n}\n\nconst UNROLLED_HEIGHT = 120\nconst ROLLED_HEIGHT = 75\n\nclass FoodBottom extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    rolled: boolean;\n    chops: number;\n    cut: boolean;\n    sliding: boolean;\n\n    constructor(game: GameEngine, x: number, y: number, width: number, height: number) {\n        super(game, 'foodbottom');\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.rolled = false;\n        this.chops = 0;\n        this.cut = false;\n        this.sliding = false;\n    };\n\n    update() {\n        if(!this.rolled) return;\n        if(this.chops >= 15) {\n            this.cut = true\n            console.log(\"Cut sushi\");\n        }\n        if(this.game.down) {\n            if(this.game.timer!.gameTime - this.game.previousMousePositionsLatest > 0.1) {\n                this.game.previousMousePositions = []\n            }\n            if(this.game.previousMousePositions.length === 15) {\n                this.game.previousMousePositions.forEach((pos: { x: number, y: number }, index: number) => {\n                    if(pos.x > this.x - (this.width / 2) && pos.x < this.x + (this.width / 2) && pos.y > this.y && pos.y < this.y + ROLLED_HEIGHT) {\n                        this.chops += 1\n                    }\n               })\n            }\n        } else {\n            this.game.previousMousePositions = []\n        }\n        \n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        let currentOrder = GameState.getInstance().getState('orderWorkingOn');\n        if(!currentOrder) return;\n        if (currentOrder?.ingredients.length > 0) {\n            if(this.cut) {\n                ctx.fillStyle = \"green\";\n                const cutWidth = (this.width - 50) / 6\n                for(let i = 0; i < 6; i++) {\n                    ctx.fillRect(this.x - 5 + ((cutWidth + 5) * i), this.y + 100, cutWidth, ROLLED_HEIGHT); \n                }\n                if(this.sliding) return;\n                setTimeout(() => {\n                    setInterval(() => {\n                        this.x += 10\n                        if(this.x > 1024) {\n                            this.removeFromWorld = true\n                        }\n                    }, 10)\n                }, 1000)\n                this.sliding = true\n                return;    \n            }\n            if(this.rolled) {\n                ctx.fillStyle = \"green\";\n                ctx.fillRect(this.x, this.y + 100, this.width - 50, ROLLED_HEIGHT);\n                if(this.game.down) {\n                    ctx.beginPath()\n                    this.game.previousMousePositions.forEach((pos: { x: number; y: number; }, index: number) => {\n                        if(index === 0) {\n                            ctx.moveTo(pos.x, pos.y);\n                        } else {\n                            ctx.lineTo(pos.x, pos.y);\n                        }\n                    })\n                    ctx.stroke()\n                }\n                return;\n            }\n        \n            const bambooMatImg = ASSET_MANAGER.getAsset(\"./assets/objects/BambooMat.png\") as HTMLImageElement;\n            ctx.drawImage(bambooMatImg, this.x, this.y);\n\n            console.log(currentOrder)\n            //Draw rice and nori\n            currentOrder.ingredients.filter(element => element.name === 'rice' || element.name === 'nori').forEach(element => {\n                if (element.name == 'rice' || element.name == 'nori') {\n                    const img = ASSET_MANAGER.getAsset(element.img) as HTMLImageElement;\n                    ctx.drawImage(img, this.x, this.y);\n                }\n            })\n            //Draw fillings\n            currentOrder.ingredients.filter(element => element.name != 'rice' && element.name != 'nori').forEach(element => {\n                const img = ASSET_MANAGER.getAsset(element.img) as HTMLImageElement;\n                const xOffset = 50;\n                const spacing = (this.width - xOffset - 50) / 6;\n                for(let i = 0; i < 6; i++) {\n                    ctx.drawImage(img, this.x + (i * spacing) + xOffset, this.y + 100, img.width * 2, img.height * 2);\n                } \n            });\n        }\n    \n    };\n    \n\n    onDnDDrop(e: CustomEvent) {\n        let orderWorkingOn = GameState.getInstance().getState('orderWorkingOn');\n        if(!orderWorkingOn) return;\n        if(e.detail.x >= this.x && e.detail.x <= this.x + this.width && e.detail.y >= this.y && e.detail.y <= this.y + this.height && orderWorkingOn?.ingredients.length > 0) {\n            console.log(\"dropped in food bottom\");\n            orderWorkingOn.ingredients.push(e.detail.button.food);\n            e.detail.button.game.currentScene.rollButton.hidden = false;\n        }\n    }\n}","import Scene from '../../scene.js';\nimport GameObject from '../../gameObject.js';\nimport { ASSET_MANAGER } from \"../../main.js\";\nimport { Button, DnDButton } from \"../../button.js\";\nimport GameState from 'src/gameState.js';\nimport Ingredient from \"src/scenes/counter/food.js\";\n\n\nexport class SidesAssemblyScene extends Scene {\n  constructor(game, x, y) {\n    super(game);\n    Object.assign(this, { game, x, y });\n  };\n\n  initalizeScene() {\n    this.addGameObject(new Background(this.game));\n    this.addGameObject(new FoodTray(this.game, 200, 300, 600, 370));\n\n    this.microwave = new Microwave(this.game, 200, 0, 600, 300);\n    this.addGameObject(this.microwave);\n    this.microwave.addButtons();\n\n    const condiments = [\n      {\n        name: \"soy sauce\",\n        img: \"./assets/sides/soysauce.png\",\n        x: 800,\n        y: 300\n      },\n      {\n        name: \"ginger\",\n        img:  \"./assets/sides/Ginger.png\",\n        x: 900,\n        y: 300\n      },\n      {\n        name: \"wasabi\",\n        img:  \"./assets/sides/wasabi.png\",\n        x: 850,\n        y: 370\n      }\n    ];\n\n    condiments.forEach(item => {\n      this.addGameObject(new DraggableObject(this.game, item, item.x, item.y, 80, 80));\n    })\n    \n    const ingredients = [\n      {\n        name: \"miso paste\",\n        img: \"./assets/sides/MisoBin.png\"\n      },\n      {\n        name: \"tofu\",\n        img: \"./assets/sides/Tofu.png\"\n      },\n      {\n        name: \"green onions\",\n        img: \"./assets/sides/greenonions.png\"\n      },\n      {\n        name: \"chicken\",\n        img: \"./assets/sides/blank.png\"\n      },\n      {\n        name: \"edamame\",\n        img: \"./assets/sides/blank.png\"\n      }\n    ]\n    const sides = [\n      {\n        name: \"karaage\",\n        img: \"./assets/sides/Karaage.png\"\n      },\n      {\n        name: \"miso soup\",\n        img: \"./assets/sides/MisoSoup.png\"\n      },\n      {\n        name: \"gyoza\",\n        img: \"./assets/sides/Gyoza.png\"\n      },\n      {\n        name: \"edamame\",\n        img: \"./assets/sides/blank.png\"\n      }\n    ]\n  }\n}\n\nclass Background extends GameObject {\n  constructor(game) {\n      super(game);\n      Object.assign(this, { game });\n  }\n\n  update() {}\n\n  draw(ctx) {\n      ctx.drawImage(ASSET_MANAGER.getAsset(\"./assets/backgrounds/Station_Background.png\"), 0, 0, 1024, 683);\n  }\n}\n\nclass Microwave extends GameObject {\n  constructor(game, x, y, width, height) {\n      super(game);\n      Object.assign(this, { game, x, y, width, height, ingredientButtons: [], ingredients: [], cookedSide: null });\n\n      this.recipes = [\n          { name: \"Miso Soup\", ingredients: [\"miso paste\", \"tofu\", \"green onions\"], img: \"./assets/sides/MisoSoup.png\" },\n          { name: \"Edamame\", ingredients: [\"edamame\"], img: \"./assets/sides/edamame.png\" },\n          { name: \"Gyoza\", ingredients: [\"green onions\", \"chicken\"], img: \"./assets/sides/Gyoza.png\" },\n          { name: \"Karaage\", ingredients: [\"chicken\"], img: \"./assets/sides/Karaage.png\" }\n      ];\n\n      this.cookButton = null; // Store button reference\n  }\n\n  addButtons() {\n      let xStart = 250;  \n      let yStart = 200;  \n      const buttonSize = 75;\n      const spacing = 100;  \n\n      this.ingredientButtons = [];\n      this.buttons = [];\n\n      const ingredientList = [\n          { name: \"miso paste\", img: \"./assets/sides/MisoBin.png\" },\n          { name: \"edamame\", img: \"./assets/sides/edamame.png\" },\n          { name: \"tofu\", img: \"./assets/sides/Tofu.png\" },\n          { name: \"chicken\", img: \"./assets/sides/chicken.png\" },\n          { name: \"green onions\", img: \"./assets/sides/greenonions.png\" }\n      ];\n\n      for (let i = 0; i < ingredientList.length; i++) {\n          let ingredient = ingredientList[i];\n\n          const inButton = Button.rectButtonImage(\n              this.game,\n              xStart + i * spacing, yStart, \n              buttonSize, buttonSize, \n              ingredient.img, \n              () => {\n                  console.log(`Added ${ingredient.name} to microwave!`);\n                  this.addIngredient(new Ingredient(ingredient.name));\n              }\n          );\n\n          this.ingredientButtons.push(inButton);\n          this.game.currentScene.addGameObject(inButton);\n      }\n\n      const cookButtonX = 725;\n      const cookButtonY = 100;\n\n      this.cookButton = Button.rectButton(\n          this.game,\n          cookButtonX, cookButtonY,\n          buttonSize, 75,\n          () => {\n              this.cookSideDish();\n          },\n          \"Cook!\"\n      );\n\n      this.cookButton.disabled = true; \n      this.game.currentScene.addGameObject(this.cookButton);\n  }\n\n  addIngredient(ingredient) {\n      if (!ingredient || !ingredient.name) {\n          console.error(\"invalid ingredient added!\");\n          return;\n      }\n      this.ingredients.push(ingredient);\n      console.log(`added ${ingredient.name} to microwave.`);\n  }\n\n  cookSideDish() {\n      console.log(\"cooking!\");\n\n      const ingredientNames = this.ingredients.map(ing => ing.name);\n\n      for (let recipe of this.recipes) {\n          if (recipe.ingredients.every(req => ingredientNames.includes(req)) &&\n              ingredientNames.length === recipe.ingredients.length) {\n              \n              console.log(`${recipe.name} created`);\n              \n              this.cookedSide = { name: recipe.name, img: recipe.img };\n              this.ingredients = []; // clears microwave after cooking\n\n              return;\n          }\n      }\n\n      console.log(\"not matching recipe\");\n      this.ingredients = [];\n  }\n\n  update() {\n      if (this.cookButton) {\n          this.cookButton.disabled = this.ingredients.length === 0;\n      }\n  }\n\n  draw(ctx) {\n      const image = ASSET_MANAGER.getAsset(\"./assets/sides/microwave.png\");\n      ctx.drawImage(image, this.x, this.y, this.width, this.height);\n\n      if (this.cookedSide && this.cookedSide.img) {\n          const cookedImage = ASSET_MANAGER.getAsset(this.cookedSide.img);\n          if (cookedImage) {\n              ctx.drawImage(cookedImage, this.x + this.width / 3, this.y + this.height / 3, 100, 100);\n          } else {\n              console.warn(` no image for ${this.cookedSide.name}`);\n          }\n      }\n  }\n}\n\nclass FoodTray extends GameObject {\n  constructor(game, x, y, width, height) {\n    super(game);\n    Object.assign(this, { game, x, y, width, height, condiment: [] });\n  };\n\n  update() {};\n\n  draw(ctx) {\n    ctx.drawImage(ASSET_MANAGER.getAsset(\"./assets/sides/Tray.png\"), this.x, this.y, this.width, this.height);\n\n    this.condiment.forEach(element => {\n      const img = ASSET_MANAGER.getAsset(element.img)\n      ctx.drawImage(img, this.x + 45 , this.y + 15);\n    });\n\n    // Draw the bounds\n    ctx.save();\n    ctx.strokeStyle = \"red\";\n    ctx.lineWidth = 2;\n    ctx.setLineDash([5, 5]);\n\n\n    ctx.strokeRect(\n        this.x,\n        this.y,\n        this.width / 4,\n        this.height / 4\n    );\n\n    ctx.restore();\n\n\n  };\n\n  onDnDDrop(e) {\n    console.log(\"dropped\");\n    console.log(e);\n    console.log(e.detail)\n    if(e.detail.x > this.x && e.detail.x < this.x + (this.width / 4) && e.detail.y > this.y && e.detail.y < this.y + this.height/4) {\n      console.log(\"dropped in food tray\");\n      this.condiment.push(e.detail.button.food);\n      console.log(e.detail.button.food);\n      const orderWorkingOn = GameState.getInstance().getState(\"orderWorkingOn\");\n      if(!orderWorkingOn) return;\n      orderWorkingOn.ingredients.push(new Ingredient(e.detail.button.food.name));\n      //e.detail.button.game.currentScene.rollButton.hidden = false;\n    }\n  }\n\n\n}\n\nclass DraggableObject extends GameObject {\n  constructor(game, food, x, y, width, height) {\n    super(game);\n    Object.assign(this, { game, food, x, y, width, height });\n    this.addButton();\n  };\n\n  addButton() {\n    this.dnd = DnDButton.transparentImageButton(this.game, this.x, this.y, this.width, this.height, this.food.img, () => {\n      console.log(\"clicked on object\", this.food);\n    });\n    this.dnd.width = this.width;\n    this.dnd.height = this.height;\n    this.dnd.food = this.food;\n    if(this.game.currentScene) this.game.currentScene.addGameObject(this.dnd);\n  }\n\n  update() {};\n\n  draw(ctx) {\n    ctx.drawImage(ASSET_MANAGER.getAsset(this.food.img), this.x, this.y, this.width, this.height);\n  };\n}","import GameEngine from \"./gameEngine.js\";\nimport Scene from \"./scene.js\";\n\n// Scene Imports\nimport { TitleScene } from \"./scenes/title/scene.js\";\nimport { WashThatRiceScene } from \"./scenes/washThatRice/scene.js\";\nimport { DontBurnRiceScene } from \"./scenes/dontBurnRice/scene.js\";\nimport { FillThePotScene } from \"./scenes/fillThePot/scene.js\";\nimport SwatTheFliesScene from \"./scenes/swatTheFlies/scene.js\";\nimport { CounterScene } from \"./scenes/counter/scene.js\";\nimport { RiceStationScene } from \"./scenes/riceStation/scene.js\";\nimport { RiceAssemblyScene } from \"./scenes/assembly/scene.js\";\nimport { SidesAssemblyScene } from \"./scenes/sides/scene.js\";\n\nexport default class SceneManager {\n    game: GameEngine;\n    scenes: { [key: string]: Scene };\n    currentScene: string | null;\n\n    constructor(game: GameEngine){\n        this.game = game;\n        this.scenes = {};\n        this.currentScene = null;\n\n        this.registerScene(\"title\", new TitleScene(this.game, 0, 0));\n\n        this.registerScene(\"order\", new CounterScene(this.game, 0, 0));\n        this.registerScene(\"rice\", new RiceStationScene(this.game));\n        this.registerScene(\"roll\", new RiceAssemblyScene(this.game));\n        this.registerScene(\"sides\", new SidesAssemblyScene(this.game, 0, 0));\n\n        this.registerScene(\"burn\", new DontBurnRiceScene(this.game, 0, 0));\n        this.registerScene(\"fill\", new FillThePotScene(this.game, 0, 0));\n        this.registerScene(\"wash\", new WashThatRiceScene(this.game, 0, 0));\n\n        this.loadScene(\"title\");\n        //this.onDeload = null;\n    };\n\n    registerScene(id: string, scene: Scene) {\n        //console.log(\"registering scene: \" + id);\n        this.scenes[id] = scene;\n    }\n\n    loadScene(scene: string) {\n        if(this.currentScene === scene) return;\n        if(!this.scenes[scene]) {\n            throw new Error(\"Scene \" + scene + \" not found\");\n        }\n\n        if(this.currentScene) {\n            //console.log(\"deloading scene: \" + this.currentScene);\n            this.scenes[this.currentScene].deload();\n        }\n\n        //console.log(\"loading scene: \" + scene);\n        this.currentScene = scene;\n        this.game.currentScene = this.scenes[scene];\n        \n        this.game.getHUD().setState(\"main\");\n        this.scenes[scene].initalizeScene();\n    };\n\n    update() {};\n    draw(ctx: CanvasRenderingContext2D) {};\n\n}\n\n","import { Button } from \"../button.js\";\nimport GameEngine from \"../gameEngine.js\";\n\nexport default class HUD {\n    game: GameEngine;\n    state: string;\n    orderButton: Button;\n    riceButton: Button;\n    rollButton: Button;\n    sidesButton: Button;\n\n    constructor(game: GameEngine) {\n        this.game = game;\n        this.state = \"main\";\n\n        this.orderButton = Button.imageButton(game, 102, 694, \"./assets/button/Order_Button.JPG\", () => this.loadSceneCallback(\"order\"));\n        this.riceButton = Button.imageButton(game, 318, 694, \"./assets/button/Rice_Button.JPG\", () => this.loadSceneCallback(\"rice\"));\n        this.rollButton = Button.imageButton(game, 534, 694, \"./assets/button/Roll_Button.JPG\", () => this.loadSceneCallback(\"roll\"));\n        this.sidesButton = Button.imageButton(game, 750, 694, \"./assets/button/Side_Button.JPG\", () => this.loadSceneCallback(\"sides\"));\n\n        game.addEntity(this.orderButton);\n        game.addEntity(this.riceButton);\n        game.addEntity(this.rollButton);\n        game.addEntity(this.sidesButton);\n    }\n\n    loadSceneCallback(scene: string) {\n        if(!this.game.sceneManager) {\n            throw new Error(\"SceneManager is not initialized\");\n        }\n        this.game.sceneManager.loadScene(scene);\n    }\n\n    update() {\n        switch(this.state) {\n            case \"main\":\n                this.orderButton.hidden = false;\n                this.riceButton.hidden = false;\n                this.rollButton.hidden = false;\n                this.sidesButton.hidden = false;\n                break;\n            case \"hidden\":\n                this.orderButton.hidden = true;\n                this.riceButton.hidden = true;\n                this.rollButton.hidden = true;\n                this.sidesButton.hidden = true;\n                break;\n            default:\n                console.warn(`Unknown state: ${this.state}`);\n                break;\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        \n    }\n\n    setState(state: string) {\n        this.state = state;\n    }\n}","import AssetManager from \"./assetManager.js\";\nimport GameEngine from \"./gameEngine.js\";\nimport SceneManager from \"./sceneManager.js\";\nimport HUD from \"./hud/hud.js\";\n\n\n\nexport const ASSET_MANAGER = new AssetManager();\nexport let sceneManage: SceneManager;\n\n// sprites\n\n// backgrounds\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Rice_Background.JPG\");\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Roll_Background.JPG\");\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Order_Background.png\");\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Order_Foreground.png\");\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Station_Background.png\");\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Minigame_Background.png\");\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Title_Background.png\");\n\n// rice station\nASSET_MANAGER.queueDownload(\"./assets/objects/RiceCooker.png\");\nASSET_MANAGER.queueDownload(\"./assets/objects/BambooMat.png\");\nASSET_MANAGER.queueDownload(\"./assets/objects/Rice.png\");\nASSET_MANAGER.queueDownload(\"./assets/objects/Rice_Cooked.png\");\nASSET_MANAGER.queueDownload(\"./assets/objects/Nori.png\");\nASSET_MANAGER.queueDownload(\"./assets/objects/Nori_Source.png\");\n\n// buttons\nASSET_MANAGER.queueDownload(\"./assets/button/Rice_Button.JPG\");\nASSET_MANAGER.queueDownload(\"./assets/button/Roll_Button.JPG\");\nASSET_MANAGER.queueDownload(\"./assets/button/Side_Button.JPG\");\nASSET_MANAGER.queueDownload(\"./assets/button/Order_Button.JPG\");\nASSET_MANAGER.queueDownload(\"./assets/button/Start_Button.png\");\n\n//sushi assembly\nASSET_MANAGER.queueDownload(\"./assets/assembly/case.jpg\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/tray.jpg\");\n\n//Wash that rice\nASSET_MANAGER.queueDownload('./assets/hand.png');\nASSET_MANAGER.queueDownload('./assets/pot_top.png');\nASSET_MANAGER.queueDownload('./assets/pot_top_outside.png');\nASSET_MANAGER.queueDownload('./assets/rotate.png');\nASSET_MANAGER.queueDownload('./assets/checkmark.png');\n\n// fill the pot\nASSET_MANAGER.queueDownload('./assets/objects/Faucet_Off.png');\nASSET_MANAGER.queueDownload('./assets/objects/Faucet_On.png');\nASSET_MANAGER.queueDownload('./assets/objects/Pot_Animation.png');\nASSET_MANAGER.queueDownload('./assets/backgrounds/FillThePot_Background.png');\n\n// Don't burn the rice.\nASSET_MANAGER.queueDownload('./assets/objects/RiceCooker_On.png');\nASSET_MANAGER.queueDownload('./assets/objects/RiceCooker_Off.png');\n\n// Swat the flies\nASSET_MANAGER.queueDownload(\"./assets/flies.png\");\nASSET_MANAGER.queueDownload(\"./assets/swatter.png\");\n\n//Counter\nASSET_MANAGER.queueDownload(\"./assets/characters/dummy.png\");\nASSET_MANAGER.queueDownload(\"./assets/button/exclam.png\");\n\n// Food bits\nASSET_MANAGER.queueDownload(\"./assets/assembly/crab.png\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/cucumber.png\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/tuna.png\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/avocado.png\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/salmon.png\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/uni.png\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/tamago.png\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/octopus.png\");\n\n// Customers\nASSET_MANAGER.queueDownload(\"./assets/characters/Customer_0.png\");\nASSET_MANAGER.queueDownload(\"./assets/characters/Customer_1.png\");\nASSET_MANAGER.queueDownload(\"./assets/characters/Customer_2.png\");\nASSET_MANAGER.queueDownload(\"./assets/characters/Customer_3.png\");\nASSET_MANAGER.queueDownload(\"./assets/characters/Customer_4.png\");\nASSET_MANAGER.queueDownload(\"./assets/characters/Customer_5.png\");\n\n// Trays\nASSET_MANAGER.queueDownload(\"./assets/trays/tray_avocado.png\");\nASSET_MANAGER.queueDownload(\"./assets/trays/tray_crab.png\");\nASSET_MANAGER.queueDownload(\"./assets/trays/tray_cucumber.png\");\nASSET_MANAGER.queueDownload(\"./assets/trays/tray_octopus.png\");\nASSET_MANAGER.queueDownload(\"./assets/trays/tray_salmon.png\");\nASSET_MANAGER.queueDownload(\"./assets/trays/tray_tamago.png\");\nASSET_MANAGER.queueDownload(\"./assets/trays/tray_tuna.png\");\nASSET_MANAGER.queueDownload(\"./assets/trays/tray_uni.png\");\nASSET_MANAGER.queueDownload(\"./assets/trays/tray_empty.png\");\n\nASSET_MANAGER.queueDownload(\"./assets/sides/microwave.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/Tofu.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/MisoBin.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/greenonions.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/Ginger.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/edamame.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/Tray.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/soysauce.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/wasabi.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/Gyoza.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/MisoSoup.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/Karaage.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/chicken.png\");\n\n// SOUNDS\nASSET_MANAGER.queueDownload('./assets/sounds/jingle.mp3');\nASSET_MANAGER.queueDownload('./assets/sounds/doorchime.mp3');\nASSET_MANAGER.queueDownload('./assets/sounds/background_music.mp3');\n\n\nASSET_MANAGER.downloadAll(() => {\n    const gameEngine = new GameEngine({\n        debugging: false,\n    });\n\n\tconst canvas = document.getElementById(\"gameWorld\") as HTMLCanvasElement;\n    if (!canvas) {\n        throw new Error(\"Canvas element not found\");\n    }\n\tconst ctx = canvas.getContext(\"2d\");\n    if (!ctx) {\n        throw new Error(\"Canvas context not found\");\n    }\n\n\tgameEngine.init(ctx);\n\n    let hud = new HUD(gameEngine);\n    gameEngine.addEntity(hud);\n    gameEngine.hud = hud;\n\n    sceneManage = new SceneManager(gameEngine);\n\tgameEngine.addEntity(sceneManage);\n    gameEngine.sceneManager = sceneManage;\n\n    // this won't play because of autoplay\n    // ASSET_MANAGER.playAsset('./assets/sounds/background_music.mp3');\n    \n\n\tgameEngine.start();\n\n});\n\n/** Creates an alias for requestAnimationFrame for backwards compatibility */\n//@ts-expect-error\nwindow.requestAnimFrame = (() => {\n    return window.requestAnimationFrame || // @ts-expect-error\n        window.webkitRequestAnimationFrame || // @ts-expect-error\n        window.mozRequestAnimationFrame || // @ts-expect-error\n        window.oRequestAnimationFrame || // @ts-expect-error\n        window.msRequestAnimationFrame ||\n        /**\n         * Compatibility for requesting animation frames in older browsers\n         * @param {Function} callback Function\n         * @param {DOM} element DOM ELEMENT\n         */\n        ((callback: TimerHandler, element: any) => {\n            window.setTimeout(callback, 1000 / 60);\n        });\n})();"],"names":["AssetManager","__publicField","path","callback","i","that","ext","img","aud","audio","err","clone","bgm","mute","key","asset","volume","Timer","current","delta","gameDelta","GameObject","game","id","persistent","data","ctx","Faucet","pot","currentData","newAmount","ASSET_MANAGER","mouseX","mouseY","GameEngine","options","gameLoop","getXandY","e","bounds","scaleX","scaleY","x","y","realCoords","modifiedEvent","entity","Point","event","entitiesCount","diff","defaultValue","value","gameObject","spritesheet","width","height","Button","onClick","image","button","text","dnd","imgSize","DnDButton","color","Scene","obj","TitleScene","Background","sceneManage","ProgressBar","randomIntRange","start","end","getDistance","p1","p2","PotTop","avgPos","acc","curr","avgDist","sprite","PotTopOutside","COLORS","RiceGrain","angle","distance","centerX","centerY","RotateIcon","Hand","Checkmark","WIDTH","HEIGHT","POT_RADIUS","WashThatRiceScene","amountOfGrains","rice","TimerBar","gameEngine","totalTime","progressWidth","perfectStartX","perfectEndX","timerBar","off","on","DontBurnRiceScene","timeBar","riceCooker","RiceCooker","Pot","FillThePotScene","Order","ingredients","sides","condiment","Ingredient","type","Side","name","Condiment","NORI","RICE","RICE_CARRY","AVOCADO","CRAB","CUCUMBER","OCTOPUS","SALMON","TUNA","UNI","TAMAGO","WRAP","FILLINGS","KARAAGE","MISOSOUP","EDAMAME","GYOZA","SIDES","WASABI","GINGER","SOY","CONDIMENTS","DEFAULT_GAME_STATE","_GameState","modifier","currentValue","newValue","customer","order","o","GameState","Customer","npc","startWalk","orderX","orderY","length","yOffset","ingredient","side","resolve","t","step","xDiff","yDiff","dx","dy","nx","ny","xChange","yChange","getRandomElements","array","count","numWrap","numIngredients","numSides","selectedWraps","selectedIngredients","selectedCondiments","selectedSides","CounterScene","RiceStationScene","BambooMat","nori","Nori","minigame","orderWorkingOn","element","newOrder","RiceAssemblyScene","FoodBottom","binWidth","binHeight","foods","curFood","foodBin","FoodBin","food","bottomWidth","bottomHeight","ROLLED_HEIGHT","pos","index","currentOrder","cutWidth","bambooMatImg","xOffset","spacing","SidesAssemblyScene","FoodTray","Microwave","item","DraggableObject","xStart","yStart","buttonSize","ingredientList","inButton","cookButtonX","cookButtonY","ingredientNames","ing","recipe","req","cookedImage","SceneManager","scene","HUD","state","canvas","hud"],"mappings":"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"}
{"version":3,"file":"index-CGtjSWRE.js","sources":["../../src/assetManager.ts","../../src/timer.ts","../../src/gameObject.ts","../../src/scenes/fillThePot/faucet.ts","../../src/gameEngine.ts","../../src/button.ts","../../src/orderManager.ts","../../src/scenes/washThatRice/progressBar.ts","../../src/util.ts","../../src/scenes/washThatRice/pot.ts","../../src/scenes/washThatRice/riceGrain.ts","../../src/scenes/washThatRice/rotate.ts","../../src/scenes/washThatRice/hand.ts","../../src/scenes/washThatRice/checkmark.ts","../../src/scene.ts","../../src/scenes/washThatRice/scene.ts","../../src/scenes/dontBurnRice/timerBar.ts","../../src/scenes/dontBurnRice/ricecooker.ts","../../src/scenes/dontBurnRice/scene.ts","../../src/scenes/fillThePot/pot.ts","../../src/scenes/fillThePot/scene.ts","../../src/background.ts","../../src/scenes/counter/food.ts","../../src/scenes/counter/customer.ts","../../src/scenes/counter/scene.ts","../../src/scenes/riceStation/scene.ts","../../src/scenes/assembly/scene.ts","../../src/sceneManager.ts","../../src/stationSwitcher.ts","../../src/rollManager.ts","../../src/main.ts"],"sourcesContent":["export default class AssetManager {\r\n    successCount: number;\r\n    errorCount: number;\r\n    cache: { [key: string]: HTMLImageElement | HTMLAudioElement };\r\n    downloadQueue: string[];\r\n\r\n    constructor() {\r\n        this.successCount = 0;\r\n        this.errorCount = 0;\r\n        this.cache = {};\r\n        this.downloadQueue = [];\r\n    };\r\n\r\n    queueDownload(path: string) {\r\n        console.log(\"Queueing \" + path);\r\n        this.downloadQueue.push(path);\r\n    };\r\n\r\n    isDone() {\r\n        return this.downloadQueue.length === this.successCount + this.errorCount;\r\n    };\r\n\r\n    downloadAll(callback: () => void) {\r\n        if (this.downloadQueue.length === 0) setTimeout(callback, 10);\r\n        for (var i = 0; i < this.downloadQueue.length; i++) {\r\n            var that = this;\r\n\r\n            var path = this.downloadQueue[i];\r\n            console.log(path);\r\n            var ext = path.substring(path.length - 3).toLowerCase();\r\n\r\n            switch (ext) {\r\n                case 'jpg':\r\n                case 'png':\r\n                    var img = new Image();\r\n                    img.addEventListener(\"load\", function () {\r\n                        console.log(\"Loaded \" + this.src);\r\n                        that.successCount++;\r\n                        if (that.isDone()) callback();\r\n                    });\r\n\r\n                    img.addEventListener(\"error\", function () {\r\n                        console.log(\"Error loading \" + this.src);\r\n                        that.errorCount++;\r\n                        if (that.isDone()) callback();\r\n                    });\r\n\r\n                    img.src = path;\r\n                    this.cache[path] = img;\r\n                    break;\r\n                case 'wav':\r\n                case 'mp3':\r\n                case 'mp4':\r\n                    var aud = new Audio();\r\n                    aud.addEventListener(\"loadeddata\", function () {\r\n                        console.log(\"Loaded \" + this.src);\r\n                        that.successCount++;\r\n                        if (that.isDone()) callback();\r\n                    });\r\n\r\n                    aud.addEventListener(\"error\", function () {\r\n                        console.log(\"Error loading \" + this.src);\r\n                        that.errorCount++;\r\n                        if (that.isDone()) callback();\r\n                    });\r\n\r\n                    aud.addEventListener(\"ended\", function () {\r\n                        aud.pause();\r\n                        aud.currentTime = 0;\r\n                    });\r\n\r\n                    aud.src = path;\r\n                    aud.load();\r\n\r\n                    this.cache[path] = aud;\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    getAsset(path: string) {\r\n        return this.cache[path];\r\n    };\r\n\r\n    playAsset(path: string) {\r\n        let audio = this.cache[path] as HTMLAudioElement;\r\n        if (audio.currentTime != 0) {\r\n            let bak = audio.cloneNode() as HTMLAudioElement;\r\n            bak.currentTime = 0;\r\n            bak.volume = audio.volume;\r\n            bak.play();\r\n        } else {\r\n            audio.currentTime = 0;\r\n            audio.play();\r\n        }\r\n    };\r\n\r\n    muteAudio(mute: boolean) {\r\n        for (var key in this.cache) {\r\n            let asset = this.cache[key];\r\n            if (asset instanceof Audio) {\r\n                asset.muted = mute;\r\n            }\r\n        }\r\n    };\r\n\r\n    adjustVolume(volume: number) {\r\n        for (var key in this.cache) {\r\n            let asset = this.cache[key];\r\n            if (asset instanceof Audio) {\r\n                asset.volume = volume;\r\n            }\r\n        }\r\n    };\r\n\r\n    pauseBackgroundMusic() {\r\n        for (var key in this.cache) {\r\n            let asset = this.cache[key];\r\n            if (asset instanceof Audio) {\r\n                asset.pause();\r\n                asset.currentTime = 0;\r\n            }\r\n        }\r\n    };\r\n\r\n    autoRepeat(path: string) {\r\n        var aud = this.cache[path] as HTMLAudioElement;\r\n        aud.addEventListener(\"ended\", function () {\r\n            aud.play();\r\n        });\r\n    };\r\n};\r\n\r\n","// This game shell was happily modified from Googler Seth Ladd's \"Bad Aliens\" game and his Google IO talk in 2011\r\n\r\nexport default class Timer {\r\n    gameTime: number;\r\n    maxStep: number;\r\n    lastTimestamp: number;\r\n\r\n    constructor() {\r\n        this.gameTime = 0;\r\n        this.maxStep = 0.05;\r\n        this.lastTimestamp = 0;\r\n    };\r\n\r\n    tick() {\r\n        const current = Date.now();\r\n        const delta = (current - this.lastTimestamp) / 1000;\r\n        this.lastTimestamp = current;\r\n\r\n        const gameDelta = Math.min(delta, this.maxStep);\r\n        this.gameTime += gameDelta;\r\n        return gameDelta;\r\n    };\r\n};","import GameEngine from \"./gameEngine\";\r\n\r\nexport default class GameObject { \r\n    game: GameEngine;\r\n    id: string = \"\";\r\n    persistent: boolean = false;\r\n    removeFromWorld: boolean = false;\r\n    hidden: boolean | undefined = false;\r\n    [key: string]: any;\r\n\r\n    constructor(game: GameEngine, id: string = \"\", persistent: boolean = false) {\r\n        if (this.constructor == GameObject) {\r\n            throw new Error(\"Abstract classes can't be instantiated.\");\r\n        }\r\n\r\n        this.game = game;\r\n        this.id = id;\r\n        this.persistent = persistent;\r\n\r\n        if(persistent) {\r\n            game.registerPersistentGameObject(id, this)\r\n        }\r\n    }\r\n\r\n    init() {\r\n        // Initialize the game object\r\n        // This method should be overridden by subclasses\r\n        throw new Error(\"Method 'init()' must be implemented.\");\r\n    }\r\n\r\n    loadSharedData() {\r\n        const data = this.game.getSharedDataByKey(this.id)\r\n        for (const key in data) {\r\n            this[key] = data[key];\r\n        }\r\n        this.game.removeSharedDataByKey(this.id);\r\n    }\r\n\r\n    update() {\r\n        throw new Error(\"Method 'update()' must be implemented.\");\r\n    }\r\n\r\n    draw(ctx : CanvasRenderingContext2D) {\r\n        throw new Error(\"Method 'draw()' must be implemented.\");\r\n    }\r\n\r\n    deload() {\r\n        this.removeFromWorld = true;\r\n    }\r\n\r\n    restore() {\r\n        this.removeFromWorld = false;\r\n    }\r\n    \r\n\r\n    onMouseDown(e: MouseEvent) {\r\n\r\n    }\r\n\r\n    onMouseUp(e: MouseEvent) {\r\n\r\n    }\r\n}","import GameEngine from \"src/gameEngine\";\r\nimport GameObject from \"src/gameObject.js\";\r\nimport { ASSET_MANAGER } from \"src/main.js\";\r\nimport Pot from \"./pot\";\r\n\r\nexport default class Faucet extends GameObject {\r\n    game: GameEngine;\r\n    pot: Pot;\r\n    isOn: boolean;\r\n    gameWon: boolean;\r\n    gameOver: boolean;\r\n    \r\n    constructor(game: GameEngine, pot: Pot) {\r\n        super(game);\r\n        this.game = game;\r\n        this.isOn = false;\r\n        this.pot = pot\r\n        this.gameWon = false;\r\n        this.gameOver = false;\r\n    };\r\n\r\n    update() {\r\n        // If faucet is on, add water to pot\r\n        if (this.isOn) {\r\n            this.pot.liters++;\r\n            console.log(this.pot.liters);\r\n        }\r\n\r\n        if (!this.isOn && this.pot.liters > 0) {\r\n            if (this.pot.liters >= 700 && this.pot.liters < 800 && !this.gameWon) {\r\n                this.gameWon = true; \r\n                console.log(this.gameWon); // debugging\r\n                const currentData = this.game.getSharedDataByKey(\"riceCooker\");\r\n                const newAmount = currentData ? currentData.amount + 5 : 5;\r\n                this.game.addSharedData(\"riceCooker\", {amount: newAmount});\r\n                setTimeout(() => {\r\n                    this.game.sceneManager!.loadScene(\"rice\")\r\n                }\r\n                , 2000)\r\n            } else {\r\n                this.gameWon = false;\r\n            }\r\n            this.gameOver = true;\r\n        }\r\n\r\n        \r\n    };\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        if (this.isOn) {\r\n            ctx.drawImage(ASSET_MANAGER.getAsset(\"./assets/objects/Faucet_On.png\") as HTMLImageElement, 565, 248);\r\n        } else {\r\n            ctx.drawImage(ASSET_MANAGER.getAsset(\"./assets/objects/Faucet_Off.png\") as HTMLImageElement, 565, 285);\r\n        }\r\n\r\n        // Drawing hit box\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = \"red\";\r\n        ctx.rect(550, 285, 50, 50);\r\n        ctx.stroke();\r\n    };\r\n\r\n    faucetManager(mouseX: number, mouseY: number) {\r\n        if (mouseX >= 550 && mouseX <= 550 + 50 && mouseY >= 285 && mouseY <= 285 + 45 && !this.isOn) {\r\n            this.isOn = true;\r\n            console.log(this.isOn);\r\n        } else if (mouseX >= 550 && mouseX <= 550 + 50 && mouseY >= 285 && mouseY <= 285 + 45 && this.isOn) {\r\n            this.isOn = false;\r\n            console.log(this.isOn);\r\n        }\r\n    }\r\n}","import Timer from \"./timer.js\";\r\nimport Faucet from \"./scenes/fillThePot/faucet.js\";\r\nimport SceneManager from \"./sceneManager.js\";\r\nimport Scene from \"./scene.js\";\r\nimport GameObject from \"./gameObject.js\";\r\n\r\n\r\n// This game shell was happily modified from Googler Seth Ladd's \"Bad Aliens\" game and his Google IO talk in 2011\r\n\r\nexport default class GameEngine {\r\n    ctx: CanvasRenderingContext2D | null;\r\n    entities: any[];\r\n    persistentGameObjects: {[key: string]: any};\r\n    click: { x: number, y: number } | null;\r\n    mouse: { x: number, y: number } | null;\r\n    move: { x: number, y: number } | null | undefined;\r\n    down: boolean | null;\r\n    previousMousePositionsDelay: number;\r\n    previousMousePositionsDelayCounter: number;\r\n    previousMousePositions: { x: number, y: number }[];\r\n    previousMousePositionsLatest: number;\r\n    wheel: WheelEvent | null;\r\n    keys: {[key: string]: boolean};\r\n    currentDraggedItem: any | null;\r\n    options: { debugging: boolean };\r\n    sceneManager: SceneManager | null;\r\n    currentScene: Scene | null;\r\n    sharedData: {[key: string]: any};\r\n    timer: Timer | undefined;\r\n    running: boolean | undefined;\r\n    rightclick: { x: number; y: number; } | undefined;\r\n    clockTick: number | undefined;\r\n\r\n\r\n    constructor(options: { debugging: boolean } | null) {\r\n        // What you will use to draw\r\n        // Documentation: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D\r\n        this.ctx = null;\r\n\r\n        // Everything that will be updated and drawn each frame\r\n        this.entities = [];\r\n        this.persistentGameObjects = {};\r\n\r\n        // Information on the input\r\n        this.click = null;\r\n        this.mouse = null;\r\n        this.down = null;\r\n        this.previousMousePositionsDelay = 3;\r\n        this.previousMousePositionsDelayCounter = 0;\r\n        this.previousMousePositions = [];\r\n        this.previousMousePositionsLatest = 0;\r\n        this.wheel = null;\r\n        this.keys = {};\r\n        this.currentDraggedItem = null;\r\n\r\n\r\n\r\n        // Options and the Details\r\n        this.options = options || {\r\n            debugging: false,\r\n        };\r\n\r\n        this.sceneManager = null;\r\n        this.currentScene = null;\r\n        this.sharedData = {};\r\n    };\r\n\r\n    init(ctx: CanvasRenderingContext2D) {\r\n        this.ctx = ctx;\r\n        this.startInput();\r\n        this.timer = new Timer();\r\n    };\r\n\r\n    start() {\r\n        this.running = true;\r\n        const gameLoop = () => {\r\n            this.loop();\r\n            // @ts-expect-error\r\n            requestAnimFrame(gameLoop, this.ctx!.canvas);\r\n        };\r\n        gameLoop();\r\n    };\r\n\r\n    startInput() {\r\n        var getXandY = (e: MouseEvent) => {\r\n            var x = e.clientX - this.ctx!.canvas.getBoundingClientRect().left;\r\n            var y = e.clientY - this.ctx!.canvas.getBoundingClientRect().top;\r\n\r\n            return { x: x , y: y };\r\n        }\r\n        \r\n        this.ctx!.canvas.addEventListener(\"mousemove\", e => {\r\n            this.move = getXandY(e);\r\n            if (this.options.debugging) {\r\n                console.log(\"MOUSE_MOVE\", getXandY(e));\r\n            }\r\n            this.mouse = getXandY(e);\r\n            this.previousMousePositionsDelayCounter++;\r\n\r\n            if(this.previousMousePositionsDelayCounter >= this.previousMousePositionsDelay) {\r\n                if (this.previousMousePositions.length >= 15) {\r\n                    this.previousMousePositions.shift();\r\n                }\r\n                this.previousMousePositions.push(this.mouse);\r\n                this.previousMousePositionsDelayCounter = 0;\r\n                this.previousMousePositionsLatest = this.timer!.gameTime\r\n            }\r\n        });\r\n\r\n        this.ctx!.canvas.addEventListener(\"mouseup\", e => {\r\n            this.down = false;\r\n            // Stop dragging\r\n            this.entities.forEach(entity => {\r\n                if(entity.onMouseUp) entity.onMouseUp(e);\r\n            });\r\n\r\n             console.log(\"Mouse Up\");  // Check if this is firing\r\n        }, false);\r\n\r\n        this.ctx!.canvas.addEventListener(\"mousedown\", (e) => {\r\n            this.down = true;\r\n            this.entities.forEach(entity => {\r\n                if(entity.onMouseDown) entity.onMouseDown(e);\r\n            });\r\n        }, false);\r\n\r\n        this.ctx!.canvas.addEventListener(\"click\", e => {\r\n            this.entities.forEach(entity => {\r\n                if (entity instanceof Faucet) {\r\n                    entity.faucetManager(getXandY(e).x, getXandY(e).y);\r\n                }\r\n            });\r\n            if (this.options.debugging) {\r\n                console.log(\"CLICK\", getXandY(e));\r\n            }\r\n            this.click = getXandY(e);\r\n            // console.log(\"Mouse Clicked\");\r\n        });\r\n\r\n        this.ctx!.canvas.addEventListener(\"wheel\", e => {\r\n            if (this.options.debugging) {\r\n                //@ts-ignore\r\n                console.log(\"WHEEL\", getXandY(e), e.wheelDelta);\r\n            }\r\n            e.preventDefault(); // Prevent Scrolling\r\n            this.wheel = e;\r\n        });\r\n\r\n        this.ctx!.canvas.addEventListener(\"contextmenu\", e => {\r\n            if (this.options.debugging) {\r\n                console.log(\"RIGHT_CLICK\", getXandY(e));\r\n            }\r\n            e.preventDefault(); // Prevent Context Menu\r\n            this.rightclick = getXandY(e);\r\n        });\r\n\r\n        document.body.addEventListener(\"dndDrop\", e => {\r\n            this.entities.forEach(entity => {\r\n                if(entity.onDnDDrop) entity.onDnDDrop(e);\r\n            });\r\n        }, false);\r\n\r\n\r\n        this.ctx!.canvas.addEventListener(\"keydown\", event => this.keys[event.key] = true);\r\n        this.ctx!.canvas.addEventListener(\"keyup\", event => this.keys[event.key] = false);\r\n\r\n\r\n\r\n\r\n        // that.leftclick = mouseClickListener;\r\n        // this.ctx.canvas.addEventListener(\"click\", that.leftclick, false);\r\n    };\r\n\r\n    addEntity(entity: any) {\r\n        this.entities.push(entity);\r\n    };\r\n\r\n    draw() {\r\n        // Clear the whole canvas with transparent color (rgba(0, 0, 0, 0))\r\n        this.ctx!.clearRect(0, 0, this.ctx!.canvas.width, this.ctx!.canvas.height);\r\n\r\n        // Draw the entities in order\r\n        for (let i = 0; i < this.entities.length; i++) {\r\n            this.entities[i].draw(this.ctx, this);\r\n        }\r\n    };\r\n\r\n    update() {\r\n        // console.log(this.entities);\r\n        let entitiesCount = this.entities.length;\r\n        for (let i = 0; i < entitiesCount; i++) {\r\n            let entity = this.entities[i];\r\n\r\n            if (!entity.removeFromWorld) {\r\n                entity.update();\r\n            }\r\n            //If the size of the entity list has changed, update i\r\n            if(entitiesCount !== this.entities.length) {\r\n                let diff = entitiesCount - this.entities.length;\r\n                entitiesCount = this.entities.length;\r\n                i -= diff;\r\n            }\r\n        }\r\n\r\n        for (let i = this.entities.length - 1; i >= 0; --i) {\r\n            if (this.entities[i].removeFromWorld) {\r\n                this.entities.splice(i, 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    loop() {\r\n        this.clockTick = this.timer!.tick();\r\n        this.update();\r\n        this.draw();\r\n    };\r\n\r\n    getSharedData() {\r\n        return this.sharedData;\r\n    }\r\n\r\n    getSharedDataByKey(key: string) {\r\n        return this.sharedData[key];\r\n    }\r\n    \r\n    getSharedDataByKeyAndDefault(key: string, defaultValue: object) {\r\n        if (this.sharedData[key] === undefined) {\r\n            return defaultValue;\r\n        }\r\n        return this.sharedData[key];\r\n    }\r\n    addSharedData(key: string, value: object) {\r\n        this.sharedData[key] = {...value};\r\n    }\r\n\r\n    removeSharedDataByKey(key: string) {\r\n        delete this.sharedData[key];\r\n    }\r\n\r\n    registerPersistentGameObject(id: string, gameObject: GameObject) {\r\n        this.persistentGameObjects[id] = gameObject;\r\n    }\r\n\r\n    getPersistentGameObject(id: string) {\r\n        return this.persistentGameObjects[id];\r\n    }\r\n\r\n    removePersistentGameObject(id: string) {\r\n        delete this.persistentGameObjects[id];\r\n    }\r\n    \r\n    clearPersistentGameObjects() {\r\n        this.persistentGameObjects = {};\r\n    }\r\n};","import GameObject from \"./gameObject.js\";\r\nimport { ASSET_MANAGER } from \"./main.js\";\r\nimport GameEngine from \"./gameEngine.js\";\r\n\r\nexport class Button extends GameObject {\r\n    image: HTMLImageElement | undefined;\r\n    x: number | undefined;\r\n    y: number | undefined;\r\n    width: any;\r\n    height: any;\r\n    bgColor: any;\r\n    text: string | undefined;\r\n    \r\n\r\n    constructor(game: GameEngine, x: number, y: number, onClick: () => void) {\r\n        super(game, 'button');\r\n        Object.assign(this, { game, x, y, onClick, hidden: false });\r\n    }\r\n\r\n    static imageButton(game: GameEngine, x: number, y: number, image: string, onClick: () => void) {\r\n        let button = new Button(game, x, y, onClick);\r\n        Object.assign(button, { image: ASSET_MANAGER.getAsset(image) });\r\n        return button;\r\n    }\r\n\r\n    static rectButton(game: GameEngine, x: number, y:number , width: number, height: number, onClick: () => void, text=\"\") {\r\n        let button = new Button(game, x, y, onClick);\r\n        Object.assign(button, { width, height, bgColor: \"gray\", text });\r\n        return button;\r\n    }\r\n\r\n    update() {\r\n    }\r\n\r\n    onMouseDown(e: MouseEvent) {\r\n        if(this.hidden) return;\r\n        if(this.image) {\r\n            if (e.offsetX > this.x! && e.offsetX < this.x! + this.image.width &&\r\n                e.offsetY > this.y! && e.offsetY < this.y! + this.image.height) {\r\n                    this.onClick();\r\n            }\r\n        } else {\r\n            if (e.offsetX > this.x! && e.offsetX < this.x + this.width &&\r\n                e.offsetY > this.y! && e.offsetY < this.y + this.height) {\r\n                    this.onClick();\r\n            }\r\n        }\r\n    }\r\n    onClick() {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        if(this.hidden) return;\r\n        if(this.image) {\r\n            ctx.drawImage(this.image, this.x!, this.y!);\r\n        } else {\r\n            ctx.fillStyle = this.bgColor;\r\n            ctx.fillRect(this.x!, this.y!, this.width, this.height);\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeStyle = \"black\";\r\n            ctx.strokeRect(this.x!, this.y!, this.width, this.height);\r\n            ctx.fillStyle = \"black\"\r\n            ctx.font = \"36px serif\";\r\n            ctx.textAlign = \"center\";\r\n            ctx.textBaseline = \"middle\";\r\n            ctx.fillText(this.text!, this.x! + (this.width / 2), this.y! + (this.height / 2) + 5)\r\n        }\r\n    }\r\n}\r\n\r\nexport class DnDButton extends GameObject {\r\n    game: GameEngine;\r\n    x: number;\r\n    y: number;\r\n    onClick: () => void;\r\n    dragging: boolean;\r\n    transparent: boolean | undefined;\r\n    image: any;\r\n    bgColor: any;\r\n    width: number | undefined;\r\n    height: number | undefined;\r\n\r\n    constructor(game: GameEngine, x: number, y: number, onClick: () => void) {\r\n        super(game);\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.onClick = onClick;\r\n\r\n        this.dragging = false;\r\n    }\r\n\r\n    static imageButton(game: GameEngine, x: number, y: number, image: string, onClick: () => {}) {\r\n        let dnd = new DnDButton(game, x, y, onClick);\r\n        Object.assign(dnd, { image: ASSET_MANAGER.getAsset(image) });\r\n        return dnd;\r\n    }\r\n\r\n    static transparentImageButton(game: GameEngine, x: number, y: number, width: number, height: number, image: string, onClick: () => void) {\r\n        let dnd = new DnDButton(game, x, y, onClick);\r\n        Object.assign(dnd, { width, height, image: ASSET_MANAGER.getAsset(image), transparent: true });\r\n        return dnd;\r\n    }\r\n\r\n    static rectButton(game: GameEngine, x: number, y: number, width: number, height: number, color: string, onClick: () => void) {\r\n        let dnd = new DnDButton(game, x, y, onClick);\r\n        Object.assign(dnd, { width, height, bgColor: color });\r\n        return dnd;\r\n    }\r\n\r\n\r\n    update() {\r\n        \r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        if(this.transparent && !this.dragging) return;\r\n        if(this.image) {\r\n            if(this.dragging) {\r\n                ctx.drawImage(this.image, this.game.mouse!.x - this.image.width / 2, this.game.mouse!.y - this.image.height / 2);\r\n            } else {\r\n                //console.log(\"drawing image\", this.image, this.x, this.y);\r\n                ctx.drawImage(this.image, this.x, this.y);\r\n            }\r\n            \r\n        } else {\r\n            if(this.dragging) {\r\n                ctx.fillStyle = this.bgColor;\r\n                ctx.fillRect(this.game.mouse!.x - this.width! / 2, this.game.mouse!.y - this.height! / 2, this.width!, this.height!);\r\n            } else {\r\n                ctx.fillStyle = this.bgColor;\r\n                ctx.fillRect(this.x, this.y, this.width!, this.height!);\r\n                ctx.lineWidth = 2;\r\n                ctx.strokeStyle = \"black\";\r\n                ctx.strokeRect(this.x, this.y, this.width!, this.height!);\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    onMouseDown(e: MouseEvent) {\r\n        console.log(\"mouse down dnd button\");\r\n        if(this.image && !this.transparent) {\r\n            if (e.offsetX > this.x && e.offsetX < this.x + this.image.width &&\r\n                e.offsetY > this.y && e.offsetY < this.y + this.image.height) {\r\n                    this.dragging = true;\r\n                    this.onClick();\r\n            }\r\n        } else {\r\n            if (e.offsetX > this.x && e.offsetX < this.x + this.width! &&\r\n                e.offsetY > this.y && e.offsetY < this.y + this.height!) {\r\n                    this.dragging = true;\r\n                    this.onClick();\r\n            }\r\n        }\r\n    }\r\n\r\n    onMouseUp(e: MouseEvent) {\r\n        if(this.dragging) {\r\n            this.dragging = false;\r\n            const event = new CustomEvent(\"dndDrop\",\r\n                {\r\n                    detail: {\r\n                        x: e.offsetX,\r\n                        y: e.offsetY,\r\n                        button: this\r\n                    }\r\n                }\r\n            );\r\n            document.body.dispatchEvent(event);\r\n        }\r\n        \r\n    }\r\n\r\n}\r\n","// import { WRAP, CONDIMENTS } from \"./food.js\";\r\nimport { Button } from \"./button.js\";\r\nimport GameEngine from \"./gameEngine.js\";\r\nimport { ASSET_MANAGER } from \"./main.js\";\r\n\r\nexport default class OrderManager {\r\n    game: GameEngine;\r\n    activeOrders: any[];\r\n    orderButton!: Button;\r\n    showOrder: boolean;\r\n\r\n    constructor(game: GameEngine) {\r\n        this.game = game;\r\n        this.activeOrders = [];\r\n        this.showOrder = false;\r\n        this.addButton();\r\n    }\r\n\r\n    addOrder(order: any) {\r\n        this.activeOrders.push(order);\r\n    }\r\n\r\n    removeOrder(order: any) {\r\n        this.activeOrders = this.activeOrders.filter(o => o !== order);\r\n    }\r\n\r\n    getOrders() {\r\n        return this.activeOrders;\r\n    }   \r\n\r\n    getOrderLength () {\r\n        return this.activeOrders.length;\r\n    }\r\n\r\n    addButton() {\r\n        this.orderButton = Button.rectButton(this.game, 150, 0, 200, 50, () => {\r\n            this.showOrder = !this.showOrder;\r\n            console.log(this.showOrder)\r\n            console.log(this.activeOrders.length);\r\n        }, \"ORDERS\") \r\n        this.orderButton.persistent = true;\r\n        this.orderButton.hidden = false;\r\n        this.game.addEntity(this.orderButton);\r\n    }\r\n\r\n    update() {\r\n    };\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        if (this.showOrder && this.activeOrders.length > 0) {\r\n            console.log(\"draw method\")\r\n            const length = 8 * 40\r\n            ctx.fillStyle = \"white\";\r\n            ctx.fillRect(150, 50, 200, length);\r\n            ctx.fillStyle = \"black\";\r\n            ctx.strokeRect(150, 50, 200, length);\r\n\r\n            ctx.font = \"20px Arial\";\r\n            ctx.textAlign = \"center\";\r\n            const order = this.activeOrders[0];\r\n            \r\n            const placement = length + 95;\r\n            for (let i = 0; i < order.ingredients.length + order.sides.length; i++) {\r\n                let yOffset = placement - i * 30; // Increment placement upwards as index increases\r\n                    if (i < order.ingredients.length) {\r\n                        if (order.ingredients[i].type === \"rice\" || order.ingredients[i].type === \"nori\") {\r\n                            ctx.fillText(order.ingredients[i].type, 150, yOffset);\r\n                        } else {\r\n                            const sprite = ASSET_MANAGER.getAsset(order.ingredients[i].img) as HTMLImageElement;\r\n                            ctx.drawImage(sprite, 150 - sprite.width / 2, yOffset - sprite.height); // Adjust for sprite height\r\n                        }\r\n                    } else if (order.sides.length > 0) {\r\n                        ctx.fillText(order.sides[i - order.ingredients.length].type, 150, yOffset);\r\n                    }\r\n            }\r\n        }\r\n        \r\n    };\r\n}  \r\n    ","import GameEngine from \"src/gameEngine\";\r\nimport GameObject from \"src/gameObject.js\"\r\n\r\nexport default class ProgressBar extends GameObject{\r\n    game: GameEngine\r\n    x: number\r\n    y: number\r\n    width: number\r\n    height: number\r\n    progress: number\r\n\r\n    constructor(game: GameEngine, x: number, y: number, width: number, height: number) {\r\n        super(game);\r\n        this.game = game\r\n        this.x = x\r\n        this.y = y\r\n        this.width = width\r\n        this.height = height\r\n        this.progress = 0.01\r\n    }\r\n\r\n    update() {\r\n        if(this.progress >= 1) {\r\n            this.game.win = true\r\n            const currentData = this.game.addSharedData(\"riceCooker\");\r\n            const newAmount = currentData ? currentData.amount + 5 : 5;\r\n            this.game.addSharedData(\"riceCooker\", {amount: newAmount});\r\n            setTimeout(() => {\r\n                this.game.sceneManager.loadScene(\"rice\")\r\n            }\r\n            , 2000)\r\n            return\r\n        }\r\n        if(this.game.spinning && this.progress < 1) {\r\n            this.progress += 0.001\r\n        }\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = 'green';\r\n        ctx.fillRect(this.x, this.y, this.width * this.progress, this.height);\r\n    }\r\n}","/**\r\n * @param {Number} n\r\n * @returns Random Integer Between 0 and n-1\r\n */\r\nexport const randomInt = (n: number) => Math.floor(Math.random() * n);\r\n\r\n/**\r\n * @param {Number} n\r\n * @returns Random Number Between start and end\r\n */\r\nexport const randomIntRange = (start: number, end: number) => Math.random() * (end - start) + start;\r\n\r\n/**\r\n * @param {Number} r Red Value\r\n * @param {Number} g Green Value\r\n * @param {Number} b Blue Value\r\n * @returns String that can be used as a rgb web color\r\n */\r\nexport const rgb = (r: number, g: number, b: number) => `rgba(${r}, ${g}, ${b})`;\r\n\r\n/**\r\n * @param {Number} r Red Value\r\n * @param {Number} g Green Value\r\n * @param {Number} b Blue Value\r\n * @param {Number} a Alpha Value\r\n * @returns String that can be used as a rgba web color\r\n */\r\nexport const rgba = (r: number, g: number, b: number, a: number) => `rgba(${r}, ${g}, ${b}, ${a})`;\r\n\r\n/**\r\n * @param {Number} h Hue\r\n * @param {Number} s Saturation\r\n * @param {Number} l Lightness\r\n * @returns String that can be used as a hsl web color\r\n */\r\nexport const hsl = (h: number, s: number, l: number) => `hsl(${h}, ${s}%, ${l}%)`;\r\n\r\n/**\r\n * Returns distance from two points\r\n * @param {Number} p1, p2 Two objects with x and y coordinates\r\n * @returns Distance between the two points\r\n */\r\ntype Point = {\r\n    x: number;\r\n    y: number;\r\n};\r\nexport const getDistance = (p1: Point, p2: Point) => {\r\n    return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\r\n};\r\n\r\n/**\r\n * Checks if two circles are colliding\r\n * @param {Object} circle1 First circle { x, y, radius }\r\n * @param {Object} circle2 Second circle { x, y, radius }\r\n * @returns {Boolean} True if the circles are colliding, otherwise false\r\n */\r\ntype Circle = {\r\n    x: number;\r\n    y: number;\r\n    radius: number;\r\n};\r\nexport const isColliding = (circle1: Circle, circle2: Circle) => {\r\n    let distance = getDistance(circle1, circle2);\r\n    return distance < (circle1.radius + circle2.radius);\r\n};\r\n\r\n\r\nexport const pointInBoxCollision = (bx: number, by: number, bw: number, bh: number, px: number, py: number) => {\r\n    return px > bx && px < bx + bw && py > by && py < by + bh;\r\n}","import GameEngine from \"src/gameEngine\"\r\nimport GameObject from \"src/gameObject.js\"\r\nimport { ASSET_MANAGER } from \"src/main.js\"\r\nimport { getDistance } from \"src/util.js\"\r\n\r\nexport class PotTop extends GameObject {\r\n    game: GameEngine\r\n    x: number\r\n    y: number\r\n\r\n    constructor(game: GameEngine, x: number, y: number) {\r\n        super(game);\r\n        this.game = game\r\n        this.x = x\r\n        this.y = y\r\n    }\r\n\r\n    update() {\r\n        if(this.game.timer.gameTime - this.game.previousMousePositionsLatest > 0.5) {\r\n            this.game.previousMousePositions = []\r\n            this.game.spinning = false\r\n        }\r\n        if(this.game.previousMousePositions.length === 15) {\r\n            let avgPos = this.game.previousMousePositions.reduce((acc: {x: number, y: number}, curr: {x: number, y: number}) => {\r\n                return {x: acc.x + curr.x, y: acc.y + curr.y}\r\n            }, {x: 0, y: 0})\r\n            avgPos.x /= 15\r\n            avgPos.y /= 15\r\n\r\n            if(getDistance(avgPos, {x: this.x, y: this.y}) > 250) {\r\n                //console.log(\"too far\")\r\n                this.game.spinning = false\r\n                return\r\n            }\r\n\r\n            //console.log(avgPos)\r\n\r\n            let avgDist = this.game.previousMousePositions.reduce((acc: number, curr: {x: number, y: number}) => {\r\n                return acc + Math.sqrt(Math.pow(curr.x - avgPos.x, 2) + Math.pow(curr.y - avgPos.y, 2))\r\n            }, 0)\r\n            avgDist /= 15\r\n\r\n            //console.log(avgDist)\r\n\r\n            if(avgDist < 200) {\r\n                console.log(\"spinning\")\r\n                this.game.spinning = true\r\n            } else {\r\n                this.game.spinning = false\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        const WIDTH = 750\r\n        const HEIGHT = 750\r\n        const sprite = ASSET_MANAGER.getAsset('./assets/pot_top.png')\r\n        ctx.drawImage(sprite, this.x - (WIDTH / 2), this.y - (HEIGHT / 2), WIDTH, HEIGHT);\r\n    }\r\n}\r\n\r\nexport class PotTopOutside extends GameObject {\r\n    game: GameEngine\r\n    x: number\r\n    y: number\r\n\r\n    constructor(game: GameEngine, x: number, y: number) {\r\n        super(game)\r\n        this.game = game\r\n        this.x = x\r\n        this.y = y\r\n    }\r\n\r\n    update() {\r\n        \r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        const WIDTH = 750\r\n        const HEIGHT = 750\r\n        const sprite = ASSET_MANAGER.getAsset('./assets/pot_top_outside.png')\r\n        ctx.drawImage(sprite, this.x - (WIDTH / 2), this.y - (HEIGHT / 2), WIDTH, HEIGHT);\r\n    }\r\n}","import GameEngine from \"src/gameEngine\"\r\nimport GameObject from \"src/gameObject.js\"\r\nimport { randomIntRange } from \"src/util.js\"\r\n\r\nconst COLORS = [\r\n    '#f5f5f5',\r\n    '#f8f8f8',\r\n    '#fafafa',\r\n    '#fcfcfc',\r\n    '#ffffff',\r\n    '#fefefe',\r\n    '#fdfdfd',\r\n    '#fbfbfb',\r\n    '#f7f7f7',\r\n    '#f4f4f4'\r\n]\r\n\r\nexport default class RiceGrain extends GameObject{\r\n    game: GameEngine\r\n    angle: number\r\n    distance: number\r\n    centerX: number\r\n    centerY: number\r\n    x: number\r\n    y: number\r\n    rotation: number\r\n    color: string\r\n\r\n    constructor(game: GameEngine, angle: number, distance: number, centerX: number, centerY: number) {\r\n        super(game);\r\n        this.game = game\r\n        this.angle = angle\r\n        this.distance = distance\r\n        this.centerX = centerX\r\n        this.centerY = centerY\r\n        this.x = 0\r\n        this.y = 0\r\n        this.rotation = randomIntRange(0, Math.PI * 2)\r\n        this.color = COLORS[Math.floor(Math.random() * COLORS.length)]\r\n    }\r\n\r\n    update() {\r\n        if(this.game.spinning) {\r\n            this.angle += Math.PI / 180\r\n        }\r\n        this.x = this.distance * Math.cos(this.angle) + this.centerX\r\n        this.y = this.distance * Math.sin(this.angle) + this.centerY\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        //console.log(this.x, this.y)\r\n        ctx.strokeStyle = 'black';\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.ellipse(this.x, this.y, 20, 4, this.rotation, 0, 2 * Math.PI);\r\n        ctx.stroke();\r\n        ctx.fill();\r\n    }\r\n}","import GameEngine from \"src/gameEngine\"\r\nimport GameObject from \"src/gameObject.js\"\r\nimport { ASSET_MANAGER } from \"src/main.js\"\r\n\r\nexport default class RotateIcon extends GameObject {\r\n    game: GameEngine\r\n    x: number\r\n    y: number\r\n    angle: number\r\n\r\n    constructor(game: GameEngine, x: number, y: number) {\r\n        super(game);\r\n        this.game = game\r\n        this.x = x\r\n        this.y = y\r\n        this.angle = Math.PI / 3\r\n    }\r\n\r\n    update() {\r\n        this.angle += Math.PI / 180\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        const WIDTH = 450\r\n        const HEIGHT = 450\r\n        const sprite = ASSET_MANAGER.getAsset('./assets/rotate.png')\r\n        ctx.save();\r\n        ctx.translate(1024/2,768/2);\r\n        ctx.rotate(this.angle);\r\n        ctx.drawImage(sprite, -WIDTH/2, -HEIGHT/2, WIDTH, HEIGHT);\r\n        ctx.restore();\r\n        \r\n    }\r\n}\r\n\r\n","import GameEngine from \"src/gameEngine\";\r\nimport GameObject from \"src/gameObject.js\"\r\nimport { ASSET_MANAGER } from \"src/main.js\"\r\n\r\nexport default class Hand extends GameObject {\r\n    game: GameEngine\r\n    x: number\r\n    y: number\r\n\r\n    constructor(game: GameEngine, x: number, y: number) {\r\n        super(game);\r\n        this.game = game\r\n        this.x = x\r\n        this.y = y\r\n    }\r\n\r\n    update() {\r\n        if (this.game.mouse) {\r\n            this.x = this.game.mouse.x\r\n            this.y = this.game.mouse.y\r\n        }\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        const w = 300\r\n        const h = 300\r\n        const sprite = ASSET_MANAGER.getAsset('./assets/hand.png')\r\n        ctx.drawImage(sprite, this.x - (w / 2), this.y - (h / 2), w, h);\r\n    }\r\n}","import { ASSET_MANAGER } from \"src/main\";\r\nimport GameObject from \"src/gameObject\";\r\nimport GameEngine from \"src/gameEngine\";\r\n\r\nexport default class Checkmark extends GameObject{\r\n    game: GameEngine\r\n    ASSET_MANAGER: ASSET_MANAGER\r\n    x: number\r\n    y: number\r\n    start: boolean\r\n    show: boolean\r\n    timeShown: number\r\n    timesFlashed: number\r\n    audioPlayed: boolean\r\n\r\n    constructor(game: GameEngine, ASSET_MANAGER: ASSET_MANAGER, x: number, y: number) {\r\n        super(game);\r\n        this.game = game\r\n        this.ASSET_MANAGER = ASSET_MANAGER\r\n        this.x = x\r\n        this.y = y\r\n        this.start = false\r\n        this.show = false\r\n        this.timeShown = 0\r\n        this.timesFlashed = 0\r\n        this.audioPlayed = false\r\n    }\r\n\r\n    update() {\r\n        if(this.game.win) {\r\n            this.start = true\r\n            if(!this.audioPlayed) {\r\n                this.ASSET_MANAGER.playAsset('./assets/sounds/jingle.mp3')\r\n                this.audioPlayed = true\r\n            }\r\n        }\r\n        if (this.start && this.timesFlashed < 6) {\r\n            this.timeShown++\r\n            if (this.timeShown >= 20) {\r\n                this.show = !this.show\r\n                this.timeShown = 0\r\n                this.timesFlashed++\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        if(this.show) {\r\n            const WIDTH = 500\r\n            const HEIGHT = 500\r\n            ctx.drawImage(ASSET_MANAGER.getAsset('./assets/checkmark.png'), this.x - (WIDTH / 2), this.y - (HEIGHT / 2), WIDTH, HEIGHT);\r\n        }\r\n    }\r\n}","import GameEngine from \"./gameEngine\";\r\nimport GameObject from \"./gameObject\";\r\n\r\nexport default class Scene {\r\n    game: GameEngine;\r\n    gameObjects: Array<GameObject>;\r\n\r\n    constructor(game: GameEngine) {\r\n        if (this.constructor == Scene) {\r\n            throw new Error(\"Abstract classes can't be instantiated.\");\r\n        }\r\n        this.game = game;\r\n        this.gameObjects = [];\r\n    }\r\n\r\n    initalizeScene() { \r\n        // This is where you would add all of the game objects to the scene\r\n    }\r\n\r\n    addGameObject(gameObject: GameObject) {\r\n        console.log(this)\r\n        this.gameObjects.push(gameObject);\r\n        this.game.addEntity(gameObject);\r\n    }\r\n\r\n    addPersistantGameObject(id: string) {\r\n        let obj = this.game.getPersistentGameObject(id);\r\n        if (!obj) {\r\n            return false;\r\n        }\r\n        this.addGameObject(obj);\r\n        return true;\r\n    }\r\n\r\n    deload() {\r\n        this.gameObjects.forEach(gameObject => {\r\n            if (gameObject.persistent) {\r\n                return;  \r\n            }\r\n            gameObject.deload();\r\n        })\r\n        this.gameObjects = []\r\n    }\r\n\r\n    // Stub methods since its technically a game object\r\n    draw(ctx: CanvasRenderingContext2D) {}\r\n    update() {}\r\n}","import { ASSET_MANAGER } from \"src/main.js\";\r\nimport ProgressBar from \"./progressBar.js\";\r\nimport { PotTop, PotTopOutside } from \"./pot.js\";\r\nimport RiceGrain from \"./riceGrain.js\";\r\nimport RotateIcon from \"./rotate.js\";\r\nimport Hand from \"./hand.js\";\r\nimport Checkmark from \"./checkmark.js\";\r\nimport Scene from \"src/scene.js\";\r\nimport GameObject from \"src/gameObject.js\";\r\nimport GameEngine from \"src/gameEngine.js\";\r\n\r\nconst WIDTH = 1024\r\nconst HEIGHT = 768\r\n\r\nconst POT_RADIUS = 250\r\n\r\nexport class WashThatRiceScene extends Scene {\r\n    game: GameEngine;\r\n    x: number;\r\n    y: number;\r\n    spritesheet: HTMLImageElement;\r\n\r\n    constructor(game: GameEngine, x: number, y: number) {\r\n        super(game);\r\n        this.game = game;\r\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/backgrounds/Station_Background.png\");\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    initalizeScene() {\r\n        super.addGameObject(new Background(this.game, 0, 0));\r\n\r\n        super.addGameObject(new ProgressBar(this.game, 0, HEIGHT - 20, 1024, 20));\r\n\t\r\n        super.addGameObject(new PotTop(this.game, (WIDTH / 2), (HEIGHT / 2)));\r\n    \r\n        \r\n        let amountOfGrains = 2;\r\n        for(let distance = 0; distance < POT_RADIUS; distance += 20) {\r\n            for(let angle = 0; angle < Math.PI * 2; angle += Math.PI * 2 / amountOfGrains) {\r\n                let rice = new RiceGrain(this.game, angle, distance, (WIDTH / 2), (HEIGHT / 2));\r\n                super.addGameObject(rice);\r\n            }\r\n            amountOfGrains += 10;\r\n        }\r\n        \r\n        super.addGameObject(new PotTopOutside(this.game, (WIDTH / 2), (HEIGHT / 2)));\r\n    \r\n        super.addGameObject(new RotateIcon(this.game, (WIDTH / 2), (HEIGHT / 2)));\r\n        \r\n        super.addGameObject(new Hand(this.game, 0, 0));\r\n        \r\n        super.addGameObject(new Checkmark(this.game, ASSET_MANAGER, (WIDTH / 2), (HEIGHT / 2)));\r\n    }\r\n}\r\n\r\nclass Background extends GameObject {\r\n    game: GameEngine;\r\n    x: number;\r\n    y: number;\r\n    spritesheet: HTMLImageElement;\r\n\r\n    constructor(game: GameEngine, x: number, y: number) {\r\n        super(game);\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/backgrounds/Station_Background.png\");\r\n    };\r\n\r\n    update() {\r\n    };\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        ctx.drawImage(this.spritesheet, 0, 0);\r\n    };\r\n}\r\n\r\n\r\n","import GameObject from \"src/gameObject.js\";\r\n\r\nexport default class TimerBar extends GameObject {\r\n    constructor(gameEngine, totalTime) {\r\n        super(gameEngine);\r\n        this.gameEngine = gameEngine;\r\n        this.totalTime = totalTime; \r\n        this.elapsedTime = 0; \r\n        this.isCooking = false; \r\n        this.isDone = false; \r\n        this.result = null; \r\n\r\n        \r\n        this.perfectStart = this.totalTime * 0.8;\r\n        this.perfectEnd = this.totalTime;\r\n\r\n        this.x = 237; // X \r\n        this.y = 650; // Y \r\n        this.width = 550; // Width \r\n        this.height = 20; // Height\r\n    }\r\n\r\n    \r\n    start() {\r\n        if (!this.isCooking && !this.isDone) {\r\n            this.isCooking = true;\r\n            this.elapsedTime = 0;\r\n            this.result = null;\r\n            //console.log(\"TimerBar started!\"); \r\n        }\r\n    }\r\n\r\n    \r\n    stop() {\r\n        if (this.isCooking) {\r\n            this.isCooking = false;\r\n            this.isDone = true;\r\n\r\n            // Determine the result based on elapsed time\r\n            if (this.elapsedTime < this.perfectStart) {\r\n                this.result = \"undercooked\";\r\n            } else if (this.elapsedTime >= this.perfectStart && this.elapsedTime <= this.perfectEnd) {\r\n                this.result = \"perfect\";\r\n                const currentData = this.game.addSharedData(\"riceCooker\");\r\n                const newAmount = currentData ? currentData.amount + 5 : 5;\r\n                this.game.addSharedData(\"riceCooker\", {amount: newAmount});\r\n                setTimeout(() => {\r\n                    this.game.sceneManager.loadScene(\"rice\")\r\n                }\r\n                , 2000)\r\n            } else {\r\n                this.result = \"overcooked\";\r\n            }\r\n\r\n            //console.log(`Cooking stopped! Result: ${this.result}`); \r\n        }\r\n    }\r\n\r\n    update() {\r\n        if (this.isCooking) {\r\n            this.elapsedTime += this.gameEngine.clockTick;\r\n\r\n            // Automatically stop if time exceeds totalTime\r\n            if (this.elapsedTime >= this.totalTime) {\r\n                this.stop();\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(ctx) {\r\n        \r\n        ctx.fillStyle = \"lightgray\";\r\n        ctx.fillRect(this.x, this.y, this.width, this.height);\r\n\r\n        \r\n        const progressWidth = (this.elapsedTime / this.totalTime) * this.width;\r\n        ctx.fillStyle = \"blue\";\r\n        ctx.fillRect(this.x, this.y, progressWidth, this.height);\r\n\r\n        \r\n        const perfectStartX = this.x + (this.perfectStart / this.totalTime) * this.width;\r\n        const perfectEndX = this.x + (this.perfectEnd / this.totalTime) * this.width;\r\n        ctx.fillStyle = \"rgba(0, 255, 0, 0.3)\"; // Semi-transparent green\r\n        ctx.fillRect(perfectStartX, this.y, perfectEndX - perfectStartX, this.height);\r\n\r\n        \r\n        if (this.isDone) {\r\n            ctx.fillStyle = \"black\";\r\n            ctx.font = \"16px Arial\";\r\n            ctx.fillText(`Result: ${this.result}`, this.x, this.y + this.height + 20);\r\n        }\r\n    }\r\n}","import GameObject from \"src/gameObject.js\";\r\nimport { ASSET_MANAGER } from \"src/main.js\";\r\nimport TimerBar from \"./timerBar.js\";\r\nimport GameEngine from \"src/gameEngine.js\";\r\n\r\nexport default class RiceCooker extends GameObject {\r\n    game: GameEngine;\r\n    x: number;\r\n    y: number;\r\n    w: number;\r\n    h: number;\r\n\r\n    constructor(game: GameEngine) {\r\n        super(game);\r\n        this.game = game;\r\n        this.x = 237;\r\n        this.y = 100;\r\n        this.w = 550;\r\n        this.h = 525;\r\n\r\n        this.clicked = false;\r\n    }\r\n\r\n    onMouseDown(e: MouseEvent) {\r\n        if (this.isClicked(e.clientX, e.clientY)) {\r\n            this.handleClick();\r\n        }\r\n    }\r\n\r\n    onMouseUp(e: MouseEvent) {\r\n        if(this.isClicked(e.clientX, e.clientY)) {\r\n            this.handleClick();\r\n        }\r\n    }\r\n\r\n    isClicked(mouseX: number, mouseY: number) {\r\n        return (\r\n            mouseX >= this.x &&\r\n            mouseX <= this.x + this.w &&\r\n            mouseY >= this.y &&\r\n            mouseY <= this.y + this.h\r\n        );\r\n    }\r\n\r\n    handleClick() {\r\n        const timerBar = this.game.entities.find(entity => entity instanceof TimerBar);\r\n\r\n        if (timerBar) {\r\n            if (!this.clicked) {\r\n                this.clicked = true;\r\n                timerBar.start();\r\n                //console.log(\"RiceCooker clicked! Timer started.\");\r\n            } else {\r\n                this.clicked = false;\r\n                timerBar.stop();\r\n                //console.log(\"RiceCooker clicked again! Timer stopped.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    update() {\r\n        \r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        //console.log(\"RiceCooker draw method called\");\r\n        const off = ASSET_MANAGER.getAsset(\"./assets/objects/RiceCooker_Off.png\") as HTMLImageElement;\r\n        const on = ASSET_MANAGER.getAsset(\"./assets/objects/RiceCooker_On.png\") as HTMLImageElement;\r\n\r\n        ctx.drawImage(off, this.x, this.y, this.w, this.h);\r\n\r\n        if (this.clicked) {\r\n            ctx.drawImage(on, this.x, this.y, this.w, this.h);\r\n            ctx.strokeStyle = \"red\";\r\n            ctx.lineWidth = 3;\r\n            ctx.strokeRect(this.x, this.y, this.w, this.h);\r\n        }\r\n    }\r\n}","import RiceCooker from \"./ricecooker.js\";\r\nimport TimerBar from \"./timerBar.js\";\r\nimport { ASSET_MANAGER } from \"src/main.js\";\r\nimport Scene from \"src/scene.js\";\r\nimport GameEngine from \"src/gameEngine.js\";\r\nimport GameObject from \"src/gameObject.js\";\r\n\r\n\r\nexport class DontBurnRiceScene extends Scene {\r\n    game: GameEngine;\r\n    x: number;\r\n    y: number;\r\n    \r\n    constructor(game: GameEngine, x: number, y: number) {\r\n        super(game);\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n    };\r\n\r\n    initalizeScene() {\r\n        this.addGameObject(new Background(this.game, 0, 0));\r\n        let timeBar = new TimerBar(this.game, 10);\r\n        let riceCooker = new RiceCooker(this.game);\r\n        this.addGameObject(riceCooker);\r\n        this.addGameObject(timeBar);\r\n\r\n    }\r\n}\r\n\r\nclass Background extends GameObject {\r\n    game: GameEngine;\r\n    x: number;\r\n    y: number;\r\n    spritesheet: HTMLImageElement;\r\n    \r\n    constructor(game: GameEngine, x: number, y: number) {\r\n        super(game);\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/backgrounds/Minigame_Background.png\") as HTMLImageElement;\r\n    };\r\n\r\n    update() {\r\n    };\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        ctx.drawImage(this.spritesheet, 0, 0);\r\n    };\r\n}\r\n","import GameEngine from \"src/gameEngine\";\r\nimport GameObject from \"src/gameObject.js\";\r\nimport { ASSET_MANAGER } from \"src/main.js\";\r\n\r\nexport default class Pot extends GameObject {\r\n    game: GameEngine;\r\n    liters: number;\r\n    spritesheet: HTMLImageElement;\r\n    width: number;\r\n    height: number;\r\n    x: number;\r\n    y: number;\r\n    \r\n    constructor(game: GameEngine) {\r\n        super(game);\r\n        this.game = game;\r\n        this.liters = 0;\r\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/objects/Pot_Animation.png\") as HTMLImageElement;\r\n        this.width = 380;\r\n        this.height = 300;\r\n        this.x = 322;\r\n        this.y = 386;\r\n    };\r\n\r\n    update() {\r\n        \r\n\r\n    };\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        if (this.liters == 0) {\r\n            ctx.drawImage(this.spritesheet, 0, 0, this.width, this.height, this.x, this.y, this.width, this.height);\r\n        } else if (this.liters <= 100) {\r\n            ctx.drawImage(this.spritesheet, 380, 0, this.width, this.height, this.x, this.y, this.width, this.height);\r\n        } else if (this.liters <= 200) {\r\n            ctx.drawImage(this.spritesheet, 760, 0, this.width, this.height, this.x, this.y, this.width, this.height);\r\n        } else if (this.liters <= 300) {\r\n            ctx.drawImage(this.spritesheet, 1140, 0, this.width, this.height, this.x, this.y, this.width, this.height);\r\n        } else if (this.liters <= 400) {\r\n            ctx.drawImage(this.spritesheet, 1520, 0, this.width, this.height, this.x, this.y, this.width, this.height);\r\n        } else if (this.liters <= 500) {\r\n            ctx.drawImage(this.spritesheet, 1900, 0, this.width, this.height, this.x, this.y, this.width, this.height);\r\n        } else if (this.liters <= 600) {\r\n            ctx.drawImage(this.spritesheet, 2280, 0, this.width, this.height, this.x, this.y, this.width, this.height);\r\n        } else if (this.liters <= 700) {\r\n            ctx.drawImage(this.spritesheet, 2660, 0, this.width, this.height, this.x, this.y, this.width, this.height);\r\n        } else if (this.liters <= 800) {\r\n            ctx.drawImage(this.spritesheet, 3040, 0, this.width, this.height, this.x, this.y, this.width, this.height);\r\n        } else {\r\n            ctx.drawImage(this.spritesheet, 3420, 0, this.width, this.height, this.x, this.y, this.width, this.height);\r\n        }\r\n    };\r\n}\r\n","import Pot from \"./pot.js\";\r\nimport Faucet from \"./faucet.js\";\r\nimport { ASSET_MANAGER } from \"src/main.js\";\r\nimport Scene from \"src/scene.js\";\r\nimport GameObject from \"src/gameObject.js\";\r\nimport GameEngine from \"src/gameEngine.js\";\r\n\r\n\r\nexport class FillThePotScene extends Scene {\r\n    game: GameEngine;\r\n    x: number;\r\n    y: number;\r\n    \r\n    constructor(game: GameEngine, x: number, y: number) {\r\n        super(game)\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n    };\r\n\r\n    initalizeScene() {\r\n        this.addGameObject(new Background(this.game, 0, 0));\r\n        const pot = new Pot(this.game)\r\n        this.addGameObject(pot);\r\n        this.addGameObject(new Faucet(this.game, pot));\r\n    }\r\n}\r\n\r\nclass Background extends GameObject {\r\n    game: GameEngine;\r\n    x: number;\r\n    y: number;\r\n    spritesheet: HTMLImageElement;\r\n\r\n    constructor(game: GameEngine, x: number, y: number) {\r\n        super(game);\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/backgrounds/FillThePot_Background.png\") as HTMLImageElement;\r\n    };\r\n\r\n    update() {\r\n    };\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        ctx.drawImage(this.spritesheet, 0, 0);\r\n    };\r\n}","import GameObject from \"./gameObject.js\";\r\nimport { ASSET_MANAGER } from \"./main.js\";\r\nimport GameEngine from \"./gameEngine.js\";\r\n\r\nexport default class Background extends GameObject {\r\n    game: GameEngine;\r\n    spritesheet: HTMLImageElement;\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n\r\n    constructor(game: GameEngine, spritesheet: string, x = 0, y = 0, width = 0, height = 0) {\r\n        super(game, 'background');\r\n        this.game = game;\r\n        this.spritesheet = ASSET_MANAGER.getAsset(spritesheet) as HTMLImageElement;\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n\r\n        if (width == 0 && height == 0) {\r\n            this.width = this.spritesheet.width;\r\n            this.height = this.spritesheet.height;\r\n        } else{\r\n            this.width = width;\r\n            this.height = height;\r\n        }\r\n    }\r\n\r\n    update() {\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        ctx.drawImage(this.spritesheet, this.x, this.y, this.width, this.height);\r\n    }\r\n}","export class Order {\r\n    ingredients: Ingredient[]\r\n    sides: Side[]\r\n\r\n    constructor(ingredients: Ingredient[], sides: Side[]) {\r\n        this.ingredients = ingredients\r\n        this.sides = sides\r\n    }\r\n}\r\n\r\nexport default class Ingredient {\r\n    type: string\r\n    img: string\r\n\r\n    constructor(type: string, img: string) {\r\n        this.type = type;\r\n        this.img = img;\r\n    }\r\n}\r\n\r\nclass Wrap extends Ingredient {\r\n    type: string\r\n    img: string\r\n    \r\n    constructor(type: string, img: string) {\r\n        super(type, img);\r\n        this.type = type;\r\n        this.img = img;\r\n    }\r\n}\r\n\r\nclass Side {\r\n    type: string;\r\n\r\n    constructor(type: string) {\r\n        this.type = type\r\n    }\r\n}\r\n\r\n\r\nexport const WRAP = [\r\n    new Wrap('rice', \"./assets/objects/Rice_Cooked.png\"),\r\n    new Wrap('nori', \"./assets/objects/Nori.png\"),\r\n]\r\n\r\nexport const INGREDIENTS = [\r\n    new Ingredient('crab', \"./assets/assembly/crab.png\"),\r\n    new Ingredient('avocado', \"./assets/assembly/avocado.png\"),\r\n    new Ingredient('cucmber', \"./assets/assembly/cucumber.png\"),\r\n    new Ingredient('salmon', \"./assets/assembly/salmon.png\"),\r\n    new Ingredient('tamago', \"./assets/assembly/tamago.png\"),\r\n    new Ingredient('tuna',  \"./assets/assembly/tuna.png\"),\r\n    new Ingredient('uni',  \"./assets/assembly/uni.png\"),\r\n\r\n]\r\n\r\nexport const CONDIMENTS = [\r\n    new Side('wasabi'),\r\n    new Side('ginger')\r\n]\r\n\r\nexport const SIDES = [\r\n    new Side('miso soup'),\r\n    new Side('karaage'),\r\n    new Side('edamame'),\r\n    new Side('takoyaki')\r\n]\r\n","import GameObject from \"src/gameObject.js\";\r\nimport { ASSET_MANAGER, orderManage } from \"src/main.js\";\r\nimport { Order, INGREDIENTS, WRAP, CONDIMENTS, SIDES } from \"./food.js\";\r\nimport { Button } from \"src/button.js\";\r\nimport GameEngine from \"src/gameEngine.js\";\r\nimport Scene from \"src/scene.js\";\r\nimport { randomIntRange } from \"src/util.js\";\r\n\r\nexport default class Customer extends GameObject {\r\n    game: GameEngine;\r\n    x: number;\r\n    y: number;\r\n    yDrawOffset: number;\r\n    spritesheet: HTMLImageElement;\r\n    exclamationSprite: HTMLImageElement;\r\n    width: number;\r\n    height: number;\r\n    state: string;\r\n    order: Order | null;\r\n    okButton: Button | undefined;\r\n\r\n    constructor(game: GameEngine, x: number, y: number) {\r\n        super(game, 'customer', true);\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.yDrawOffset = 0;\r\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/characters/dummy.png\") as HTMLImageElement;\r\n        this.exclamationSprite = ASSET_MANAGER.getAsset(\"./assets/button/exclam.png\") as HTMLImageElement;\r\n        this.width = 400;\r\n        this.height = 600;\r\n        this.state = \"init\"\r\n        this.order = null;\r\n        this.addButton();\r\n    };\r\n\r\n    update() {\r\n        switch (this.state) {\r\n            case \"init\":\r\n                this.state = \"walking\";\r\n                let npc = this;\r\n                async function startWalk() {\r\n                    await npc.walkTo(100, 100);\r\n                    npc.state = \"waiting\";\r\n                }\r\n                startWalk();\r\n                break;\r\n            case \"walking\":\r\n                break;\r\n            case \"waiting\":\r\n                break;\r\n            case \"order\":\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        ctx.drawImage(this.spritesheet, this.x, this.y + this.yDrawOffset, this.width, this.height);\r\n        switch (this.state) {\r\n            case \"init\":\r\n                break;\r\n            case \"walking\":\r\n                break;\r\n            case \"waiting\":\r\n                ctx.drawImage(this.exclamationSprite, this.x + (this.spritesheet.width / 2) - (this.exclamationSprite.width / 2) - 10, this.y - 30, 100, 100);\r\n                break;\r\n            case \"order\":\r\n                this.drawOrder(ctx);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    drawOrder(ctx: CanvasRenderingContext2D) {\r\n        if (!this.order) return;\r\n        const orderX = 500\r\n        const orderY = 100\r\n        const length = (WRAP.length + 3 + CONDIMENTS.length + 1) * 40\r\n        ctx.fillStyle = \"white\";\r\n        ctx.fillRect(orderX, orderY, 200, length);\r\n        ctx.fillStyle = \"black\";\r\n        ctx.strokeRect(orderX, orderY, 200, length);\r\n        ctx.font = \"20px Arial\";\r\n        ctx.textAlign = \"center\";\r\n        let yOffset = orderY\r\n        this.order.ingredients.forEach((ingredient) => {\r\n            if (ingredient.type === \"rice\" || ingredient.type === \"nori\") {\r\n                ctx.fillText(ingredient.type, 600, orderY + yOffset);\r\n            } else {\r\n                const sprite = ASSET_MANAGER.getAsset(ingredient.img) as HTMLImageElement;\r\n                ctx.drawImage(sprite, 600 - sprite.width / 2, orderY + yOffset); // Adjust for sprite height\r\n                yOffset += sprite.height;\r\n            }\r\n            yOffset += 30; // Increment placement upwards as index increases\r\n        });\r\n        this.order.sides.forEach((side) => {\r\n            ctx.fillText(side.type, 600, 100 + yOffset);\r\n            yOffset += 30; // Increment placement upwards as index increases\r\n        })\r\n        this.okButton!.hidden = false;\r\n    }\r\n\r\n    async walkTo(x: number, y: number) {\r\n        let npc: Customer = this;\r\n        return new Promise((resolve) => {\r\n            let t = 0;\r\n            function step() {\r\n                const speed = 5;\r\n                const xDiff = Math.abs(npc.x - x);\r\n                const yDiff = Math.abs(npc.y - y);\r\n                const dx = x - npc.x;\r\n                const dy = y - npc.y;\r\n                const length = Math.sqrt(dx * dx + dy * dy);\r\n                const nx = dx / length;\r\n                const ny = dy / length;\r\n                const xChange = Math.min(nx * speed, xDiff);\r\n                const yChange = Math.min(ny * speed, yDiff);\r\n                if (npc.x !== x) {\r\n                    npc.x += xChange\r\n                }\r\n                if (npc.x !== x) {\r\n                    npc.y += yChange\r\n                }\r\n                if (npc.x === x && npc.y === y) {\r\n                    resolve(true);\r\n                    return;\r\n                }\r\n\r\n                npc.yDrawOffset = (Math.sin((Math.PI / 4) * t) * 10);\r\n                requestAnimationFrame(step);\r\n                t += 0.1;\r\n            }\r\n            step()\r\n        })\r\n        // let intervalID = setInterval(() => {\r\n        //     if(this.y === y) {\r\n        //         clearInterval(intervalID);\r\n        //         this.hasWalked = true;\r\n        //     }\r\n        //     if (this.y < y) {\r\n        //         this.y += 5;\r\n        //     }\r\n        //     if (this.y > y) {\r\n        //         this.y -= 5;\r\n        //     }\r\n        // }, 20);\r\n    }\r\n\r\n    displayOrder() {\r\n        this.order = this.randomOrder();\r\n    }\r\n\r\n    addButton() {\r\n        this.okButton = Button.rectButton(this.game, 750, 400, 100, 50, () => {\r\n            this.orderAdded = true;\r\n            this.okButton.hidden = true;\r\n            orderManage.addOrder(this.order);\r\n        }, \"OK\")\r\n        this.okButton.persistent = true;\r\n        this.okButton.hidden = true;\r\n        if (this.game.currentScene) this.game.currentScene.addGameObject(this.okButton);\r\n\r\n    }\r\n\r\n    randomOrder() {\r\n        // Helper function to get random elements from an array\r\n        function getRandomElements(array: any[], count: number) {\r\n            let shuffled = array.slice().sort(() => 0.5 - Math.random()); // Shuffle the array\r\n            return shuffled.slice(0, count); // Pick the first 'count' elements\r\n        }\r\n\r\n        const numWrap = randomIntRange(2, WRAP.length);\r\n        const numIngredients = randomIntRange(1, 3);\r\n        const numCondiments = randomIntRange(0, CONDIMENTS.length);\r\n        const numSides = randomIntRange(0, 1);\r\n\r\n        const selectedWraps = getRandomElements(WRAP, numWrap);\r\n        const selectedIngredients = getRandomElements(INGREDIENTS, numIngredients);\r\n        const selectedCondiments = getRandomElements(CONDIMENTS, numCondiments);\r\n        const selectedSides = getRandomElements(SIDES, numSides);\r\n\r\n        return new Order(\r\n            [...selectedWraps, ...selectedIngredients],\r\n            [...selectedCondiments, ...selectedSides]\r\n        );\r\n    }\r\n\r\n    onMouseDown(e: MouseEvent): void {\r\n        if (this.state === \"waiting\") {\r\n            if (e.x > this.x && e.x < this.x + this.width && e.y > this.y && e.y < this.y + this.height) {\r\n                this.displayOrder();\r\n                this.state = \"order\";\r\n            }\r\n        }\r\n    }\r\n\r\n}","\r\nimport Scene from 'src/scene.js';\r\nimport  Background  from \"src/background.js\";\r\nimport GameObject from 'src/gameObject.js'; \r\nimport { ASSET_MANAGER, customerManage, orderManage } from \"src/main.js\";\r\nimport Customer from './customer.js'; \r\nimport { Button } from \"src/button.js\";\r\nimport GameEngine from 'src/gameEngine.js';\r\n\r\nexport class CounterScene extends Scene {\r\n    game: GameEngine;\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor(game: GameEngine, x: number, y: number) {\r\n        super(game);\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n    };\r\n\r\n    initalizeScene() { \r\n        this.addGameObject(new Background(this.game, \"./assets/backgrounds/Order_Background.png\"));\r\n        if(!this.addPersistantGameObject(\"customer\")) {\r\n            console.log(\"Did not find customer\");\r\n            this.addGameObject(new Customer(this.game, 500, 25));\r\n        }\r\n        this.addGameObject(new Background(this.game, \"./assets/backgrounds/Order_Foreground.png\")); \r\n    \r\n    }\r\n}\r\n","import { ASSET_MANAGER } from \"src/main.js\";\r\nimport  Background  from \"src/background.js\";\r\nimport Scene from \"src/scene.js\";\r\nimport GameObject from \"src/gameObject.js\";\r\nimport { sceneManage, rollManage } from 'src/main.js';\r\nimport { DnDButton } from \"src/button.js\";\r\nimport Ingredient from \"src/scenes/counter/food.js\";\r\nimport { WRAP } from \"src/scenes/counter/food.js\";\r\nimport GameEngine from \"src/gameEngine\";\r\n\r\nexport class RiceStationScene extends Scene { \r\n    game: GameEngine;\r\n    \r\n    constructor(game: GameEngine) {\r\n            super(game);\r\n            this.game = game;\r\n        };\r\n\r\n    initalizeScene() {\r\n            super.addGameObject(new Background(this.game, \"./assets/backgrounds/Station_Background.png\"));\r\n\r\n            super.addGameObject(new BambooMat(this.game, 450, 375));\r\n\r\n            const riceCooker = new RiceCooker(this.game, 10, 10, 512, 512)\r\n            super.addGameObject(riceCooker);\r\n\r\n            const nori = new Nori(this.game, 500, 80, 450, 300)\r\n            super.addGameObject(nori);\r\n\r\n        }\r\n}\r\n\r\nclass RiceCooker extends GameObject {\r\n    game: GameEngine;\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n    amount: number;\r\n    cookerClicked: boolean;\r\n    spritesheet: HTMLImageElement;\r\n    dnd!: DnDButton;\r\n    \r\n    constructor(game: GameEngine, x: number, y: number, width: number, height: number) {\r\n        super(game, 'riceCooker');\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.amount = 0;\r\n        this.cookerClicked = false;\r\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/objects/RiceCooker.png\") as HTMLImageElement;\r\n        this.addButton();\r\n        super.loadSharedData();\r\n    }\r\n\r\n    addButton() {\r\n        this.dnd = DnDButton.transparentImageButton(this.game, this.x, this.y, this.width, this.height, WRAP[0].img, () => {\r\n            console.log(\"clicked on rice cooker\");\r\n            this.cookerClicked = true;\r\n        });\r\n        this.dnd.width = this.width;\r\n        this.dnd.height = this.height;\r\n        this.dnd.food = WRAP[0];\r\n        this.dnd.persistent = true;\r\n        this.dnd.id = 'ricesourcebuttons';\r\n        if(this.game.currentScene) this.game.currentScene.addGameObject(this.dnd);\r\n    }\r\n\r\n    update() {\r\n        if (this.cookerClicked) {\r\n            \r\n            if (this.amount == 0) {\r\n                this.beginMinigame();\r\n                this.amount = 5;\r\n            }\r\n            this.amount--;\r\n            this.cookerClicked = false;\r\n        }\r\n    };\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        ctx.drawImage(this.spritesheet, this.x, this.y);\r\n    };\r\n\r\n    beginMinigame() {\r\n        const minigame = Math.floor(Math.random() * 3);\r\n        console.log(minigame);\r\n        if (minigame == 0) {\r\n            sceneManage.loadScene(\"fill\");\r\n            console.log(\"minigame 1\")\r\n        } else if (minigame == 1) {\r\n            sceneManage.loadScene(\"burn\");\r\n            console.log(\"minigame 2\")\r\n        } else if (minigame == 2) {\r\n            sceneManage.loadScene(\"wash\");\r\n            console.log(\"minigame 3\")\r\n        }\r\n    }   \r\n}\r\n\r\nclass Nori extends GameObject {\r\n    game: GameEngine;\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n    spritesheet: HTMLImageElement;\r\n    dnd: DnDButton;\r\n\r\n    constructor(game: GameEngine, x: number, y: number, width: number, height: number) {\r\n        super(game, 'norisource');\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/objects/Nori_Source.png\");\r\n        this.addButton();\r\n    };\r\n\r\n    addButton() {\r\n        this.dnd = DnDButton.transparentImageButton(this.game, this.x, this.y, this.width, this.height, WRAP[1].img, () => {\r\n        });\r\n        this.dnd.width = this.width;\r\n        this.dnd.height = this.height;\r\n        this.dnd.food = WRAP[1];\r\n        this.dnd.persistent = true;\r\n        this.dnd.id = 'norisourcebutton'\r\n        if(this.game.currentScene) this.game.currentScene.addGameObject(this.dnd);\r\n    }\r\n\r\n    update() {\r\n\r\n    };\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        ctx.drawImage(this.spritesheet, this.x, this.y);\r\n\r\n    };\r\n}\r\n\r\nclass BambooMat extends GameObject {\r\n    game: GameEngine;\r\n    x: number;\r\n    y: number;\r\n    ingredients: Ingredient[];\r\n    spritesheet: HTMLImageElement;\r\n\r\n    constructor(game: GameEngine, x: number, y: number) {\r\n        super(game, 'bamboomat');\r\n        this.x = x;\r\n        this.y = y\r\n        this.ingredients = [];\r\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/objects/BambooMat.png\");\r\n    };\r\n\r\n    update() {\r\n        \r\n    };\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        ctx.drawImage(this.spritesheet, this.x, this.y);\r\n        const centerX = this.x + (this.spritesheet.width / 2)\r\n        const centerY = this.y + (this.spritesheet.height / 2)\r\n\r\n        // Draw the ingredients on top of the bamboo mat\r\n        this.ingredients.forEach(element => {\r\n            const img = ASSET_MANAGER.getAsset(element.img)\r\n            ctx.drawImage(img, this.x, this.y);\r\n            // ctx.drawImage(img, centerX - (img.width / 2) + element.xOffset, centerY - (img.height / 2) + element.yOffset, img.width, img.height);\r\n        });\r\n    };\r\n\r\n    onDnDDrop(e: CustomEvent) {\r\n        // console.log(e);\r\n        // console.log(e.detail)\r\n        // console.log(e.detail.y);\r\n        if(e.detail.x >= this.x && e.detail.x <= this.x + 512 &&\r\n            e.detail.y >= this.y && e.detail.y <= this.y + 512) {\r\n            console.log(\"dropped in food bottom\");\r\n            this.ingredients.push(e.detail.button.food);\r\n            rollManage.addIngredient(new Ingredient(e.detail.button.food.type, e.detail.button.food.img));\r\n        }\r\n    }\r\n}\r\n","import Background from 'src/background.js';\r\nimport Scene from 'src/scene.js';\r\nimport GameObject from 'src/gameObject.js';\r\nimport { ASSET_MANAGER } from \"src/main.js\";\r\nimport { Button, DnDButton } from \"src/button.js\";\r\nimport { rollManage , orderManage } from 'src/main.js';\r\nimport Ingredient from \"src/scenes/counter/food.js\";\r\nimport GameEngine from 'src/gameEngine';\r\n\r\nexport class RiceAssemblyScene extends Scene {\r\n    game: GameEngine;\r\n    foodBottom: FoodBottom | undefined;\r\n    rollButton: Button | undefined;\r\n    \r\n    constructor(game: GameEngine) {\r\n        super(game);\r\n        this.game = game;\r\n    };\r\n\r\n    initalizeScene() {\r\n\r\n        super.addGameObject(new Background(this.game, \"./assets/backgrounds/Station_Background.png\"));\r\n        super.addGameObject(new Background(this.game, \"./assets/assembly/case.jpg\", 0, 150, 1024, 197));\r\n        this.foodBottom = new FoodBottom(this.game, 227, 375, 570, 300);\r\n        super.addGameObject(this.foodBottom);\r\n        const binWidth = 80;\r\n        const binHeight = 80;\r\n        const foods = [\r\n            {\r\n                name: \"rice\",\r\n                img: \"./assets/assembly/crab.png\",\r\n            },\r\n            {\r\n                name: \"avocado\",\r\n                img: \"./assets/assembly/avocado.png\",\r\n            },\r\n            {\r\n                name: \"crab\",\r\n                img: \"./assets/assembly/crab.png\",\r\n            },\r\n            {\r\n                name: \"cucumber\",\r\n                img: \"./assets/assembly/cucumber.png\",\r\n            },\r\n            {\r\n                name: \"salmon\",\r\n                img: \"./assets/assembly/salmon.png\",\r\n            },\r\n            {\r\n                name: \"tuna\",\r\n                img: \"./assets/assembly/tuna.png\",\r\n            },\r\n            {\r\n                name: \"shrimp\",\r\n                img: \"./assets/assembly/cucumber.png\",\r\n            },\r\n            {\r\n                name: \"eel\",\r\n                img: \"./assets/assembly/cucumber.png\",\r\n            },\r\n            {\r\n                name: \"uni\",\r\n                img: \"./assets/assembly/uni.png\",\r\n            },\r\n            {\r\n                name: \"tamago\",\r\n                img: \"./assets/assembly/tamago.png\",\r\n            },\r\n            {\r\n                name: \"idk\",\r\n                img: \"./assets/assembly/cucumber.png\",\r\n            },\r\n            {\r\n                name: \"idk\",\r\n                img: \"./assets/assembly/cucumber.png\",\r\n            }\r\n        ]\r\n        let curFood = 0;\r\n        let y = 240;\r\n        for(let x = 0; x < 12; x++) {\r\n            const foodBin = new FoodBin(this.game, foods[curFood], 10 + x * (binWidth + 4), y, binWidth, binHeight);\r\n            super.addGameObject(foodBin);\r\n            foodBin.addButton(); // add the button to the scene after the bin is added\r\n            curFood++;\r\n        }\r\n\r\n        this.rollButton = Button.rectButton(this.game, 600, 320, 100, 50, () => {\r\n            console.log(\"Clicked roll button\");\r\n            this.roll()\r\n            rollManage!.completeRoll();\r\n        }, \"Roll\") \r\n        this.rollButton.hidden = true;\r\n        super.addGameObject(this.rollButton)\r\n        super.addGameObject(new SceneUpdater(this.game, this));\r\n        \r\n    }\r\n\r\n    roll() {\r\n        console.log(\"rolling\");\r\n        this.rollButton!.removeFromWorld = true;\r\n        this.foodBottom!.rolled = true;\r\n    }\r\n}\r\n\r\nclass FoodBin extends GameObject {\r\n    game: GameEngine;\r\n    food: {name: string, img: string};\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n    dnd: DnDButton | undefined;\r\n\r\n    constructor(game: GameEngine, food: {name: string, img: string}, x: number, y: number, width: number, height: number) {\r\n        super(game, 'foodbin');\r\n        this.game = game;\r\n        this.food = food;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n    };\r\n\r\n    addButton() {\r\n        this.dnd = DnDButton.transparentImageButton(this.game, this.x, this.y, this.width, this.height, this.food.img, () => {\r\n            console.log(\"clicked on food bin\", this.food);\r\n        });\r\n        this.dnd.width = this.width;\r\n        this.dnd.height = this.height;\r\n        this.dnd.food = this.food;\r\n        if(this.game.currentScene) this.game.currentScene.addGameObject(this.dnd);\r\n    }\r\n\r\n    update() {\r\n        \r\n    };\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        ctx.drawImage(ASSET_MANAGER.getAsset(\"./assets/assembly/tray.jpg\") as HTMLImageElement, this.x, this.y, this.width, this.height);\r\n        \r\n        const bottomWidth = 80\r\n        const bottomHeight = 35\r\n        const xOffset = this.width - bottomWidth\r\n        const yOffset = this.height - (bottomHeight)\r\n        const xCount = 3\r\n        const xSpace = bottomWidth / xCount\r\n        const yCount = 3\r\n        const ySpace = bottomHeight / yCount;\r\n        for(let row = 0; row < yCount; row++) {\r\n            for(let col = 0; col < xCount; col++) {\r\n                ctx.drawImage(ASSET_MANAGER.getAsset(this.food.img) as HTMLImageElement, this.x + xOffset + (xSpace * col), this.y + (yOffset / 2) - 5 + (ySpace * row))\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nconst UNROLLED_HEIGHT = 120\r\nconst ROLLED_HEIGHT = 75\r\n\r\nclass FoodBottom extends GameObject {\r\n    game: GameEngine;\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n    foods: {name: string, img: string}[];\r\n    rolled: boolean;\r\n    chops: number;\r\n    cut: boolean;\r\n\r\n    constructor(game: GameEngine, x: number, y: number, width: number, height: number) {\r\n        super(game, 'foodbottom');\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.foods = [];\r\n        this.rolled = false;\r\n        this.chops = 0;\r\n        this.cut = false;\r\n    };\r\n\r\n    update() {\r\n        if(!this.rolled) return;\r\n        if(this.chops >= 15) {\r\n            this.cut = true\r\n            console.log(\"Cut sushi\");\r\n        }\r\n        if(this.game.down) {\r\n            if(this.game.timer!.gameTime - this.game.previousMousePositionsLatest > 0.1) {\r\n                this.game.previousMousePositions = []\r\n            }\r\n            if(this.game.previousMousePositions.length === 15) {\r\n                this.game.previousMousePositions.forEach((pos: { x: number, y: number }, index: number) => {\r\n                    if(pos.x > this.x - (this.width / 2) && pos.x < this.x + (this.width / 2) && pos.y > this.y && pos.y < this.y + ROLLED_HEIGHT) {\r\n                        this.chops += 1\r\n                    }\r\n               })\r\n            }\r\n        } else {\r\n            this.game.previousMousePositions = []\r\n        }\r\n        \r\n    };\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        if (rollManage.activeIngredients.length > 0) {\r\n            if(this.cut) {\r\n                ctx.fillStyle = \"green\";\r\n                const cutWidth = (this.width - 50) / 6\r\n                for(let i = 0; i < 6; i++) {\r\n                    ctx.fillRect(this.x - 5 + ((cutWidth + 5) * i), this.y + 100, cutWidth, ROLLED_HEIGHT); \r\n                }\r\n                if(this.game.sliding) return;\r\n                setTimeout(() => {\r\n                    setInterval(() => {\r\n                        this.x += 10\r\n                        if(this.x > 1024) {\r\n                            super.removeFromWorld = true\r\n                        }\r\n                    }, 10)\r\n                }, 1000)\r\n                this.game.sliding = true\r\n                return;    \r\n            }\r\n            if(this.rolled) {\r\n                ctx.fillStyle = \"green\";\r\n                ctx.fillRect(this.x, this.y + 100, this.width - 50, ROLLED_HEIGHT);\r\n                if(this.game.down) {\r\n                    ctx.beginPath()\r\n                    this.game.previousMousePositions.forEach((pos: { x: number; y: number; }, index: number) => {\r\n                        if(index === 0) {\r\n                            ctx.moveTo(pos.x, pos.y);\r\n                        } else {\r\n                            ctx.lineTo(pos.x, pos.y);\r\n                        }\r\n                    })\r\n                    ctx.stroke()\r\n                }\r\n                return;\r\n            }\r\n        \r\n            const bambooMatImg = ASSET_MANAGER.getAsset(\"./assets/objects/BambooMat.png\") as HTMLImageElement;\r\n            ctx.drawImage(bambooMatImg, this.x, this.y);\r\n\r\n            rollManage.activeIngredients.forEach(element => {\r\n                if (element.type == 'rice' || element.type == 'nori') {\r\n                    const img = ASSET_MANAGER.getAsset(element.img) as HTMLImageElement;\r\n                    ctx.drawImage(img, this.x, this.y);\r\n                }\r\n            })\r\n            this.foods.forEach(element => {\r\n                const img = ASSET_MANAGER.getAsset(element.img) as HTMLImageElement;\r\n                const xOffset = 50;\r\n                const spacing = (this.width - xOffset - 50) / 6;\r\n                for(let i = 0; i < 6; i++) {\r\n                    ctx.drawImage(img, this.x + (i * spacing) + xOffset, this.y + 100, img.width * 2, img.height * 2);\r\n                } \r\n            });\r\n        }\r\n    \r\n    };\r\n    \r\n\r\n    onDnDDrop(e: CustomEvent) {\r\n        //console.log(\"dropped\");\r\n        //console.log(e);\r\n        //console.log(e.detail)\r\n        if(e.detail.x >= this.x && e.detail.x <= this.x + this.width && e.detail.y >= this.y && e.detail.y <= this.y + this.height && rollManage.activeIngredients.length > 0) {\r\n            console.log(\"dropped in food bottom\");\r\n            this.foods.push(e.detail.button.food);\r\n            rollManage.addIngredient(new Ingredient(e.detail.button.food.name));\r\n            e.detail.button.game.currentScene.rollButton.hidden = false;\r\n        }\r\n    }\r\n}\r\n\r\nclass SceneUpdater extends GameObject {\r\n    game: GameEngine;\r\n    scene: RiceAssemblyScene;\r\n    orderManageButtonExists: boolean;\r\n\r\n    constructor(game: GameEngine, scene: RiceAssemblyScene) {\r\n        super(game);\r\n        this.game = game;\r\n        this.scene = scene;\r\n        this.orderManageButtonExists = false;\r\n    }\r\n\r\n    update() {\r\n\r\n        if (!this.orderManageButtonExists) {\r\n            this.orderManageButtonExists = true;\r\n            orderManage.orderButton.removeFromWorld = false\r\n            this.scene.addGameObject(orderManage.orderButton);\r\n        }\r\n    };\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n    };\r\n}","import { WashThatRiceScene } from \"./scenes/washThatRice/scene.js\";\r\nimport { DontBurnRiceScene } from \"./scenes/dontBurnRice/scene.js\";\r\nimport { FillThePotScene } from \"./scenes/fillThePot/scene.js\";\r\nimport SwatTheFliesScene from \"./scenes/swatTheFlies/scene.js\";\r\nimport { CounterScene } from \"./scenes/counter/scene.js\";\r\nimport { RiceStationScene } from \"./scenes/riceStation/scene.js\";\r\nimport { RiceAssemblyScene } from \"./scenes/assembly/scene.js\";\r\nimport GameEngine from \"./gameEngine.js\";\r\nimport Scene from \"./scene.js\";\r\n\r\nexport default class SceneManager {\r\n    game: GameEngine;\r\n    scenes: { [key: string]: Scene };\r\n    currentScene: string | null;\r\n\r\n    constructor(game: GameEngine){\r\n        this.game = game;\r\n        this.scenes = {};\r\n        this.currentScene = null;\r\n\r\n        this.registerScene(\"order\", new CounterScene(this.game, 0, 0));\r\n        this.registerScene(\"rice\", new RiceStationScene(this.game));\r\n        this.registerScene(\"roll\", new RiceAssemblyScene(this.game));\r\n        this.registerScene(\"sides\", new WashThatRiceScene(this.game, 0, 0));\r\n\r\n        this.registerScene(\"burn\", new DontBurnRiceScene(this.game, 0, 0));\r\n        this.registerScene(\"fill\", new FillThePotScene(this.game, 0, 0));\r\n        this.registerScene(\"wash\", new WashThatRiceScene(this.game, 0, 0));\r\n\r\n        this.loadScene(\"order\");\r\n        //this.onDeload = null;\r\n    };\r\n\r\n    registerScene(id: string, scene: Scene) {\r\n        //console.log(\"registering scene: \" + id);\r\n        this.scenes[id] = scene;\r\n    }\r\n\r\n    loadScene(scene: string) {\r\n        if(this.currentScene === scene) return;\r\n        if(!this.scenes[scene]) {\r\n            //console.log(\"error: scene not found: \" + scene);\r\n            return;\r\n        }\r\n\r\n        if(this.currentScene) {\r\n            //console.log(\"deloading scene: \" + this.currentScene);\r\n            this.scenes[this.currentScene].deload();\r\n        }\r\n\r\n        //console.log(\"loading scene: \" + scene);\r\n        this.currentScene = scene;\r\n        this.game.currentScene = this.scenes[scene];\r\n        \r\n        this.scenes[scene].initalizeScene();\r\n    };\r\n\r\n    update() {};\r\n    draw(ctx: CanvasRenderingContext2D) {};\r\n\r\n}\r\n\r\n","import { Button } from \"./button.js\";\r\nimport GameEngine from \"./gameEngine.js\";\r\n\r\nexport default class StationSwitcher {\r\n    game: GameEngine;\r\n    orderButton: Button;\r\n    riceButton: Button;\r\n    rollButton: Button;\r\n    sidesButton: Button;\r\n\r\n    constructor(game: GameEngine) {\r\n        this.game = game;\r\n\r\n        this.orderButton = Button.imageButton(game, 102, 694, \"./assets/button/Order_Button.JPG\", () => this.game.sceneManager.loadScene(\"order\"));\r\n        this.riceButton = Button.imageButton(game, 318, 694, \"./assets/button/Rice_Button.JPG\", () => this.game.sceneManager.loadScene(\"rice\"));\r\n        this.rollButton = Button.imageButton(game, 534, 694, \"./assets/button/Roll_Button.JPG\", () => this.game.sceneManager.loadScene(\"roll\"));\r\n        this.sidesButton = Button.imageButton(game, 750, 694, \"./assets/button/Side_Button.JPG\", () => this.game.sceneManager.loadScene(\"sides\"));\r\n\r\n        game.addEntity(this.orderButton);\r\n        game.addEntity(this.riceButton);\r\n        game.addEntity(this.rollButton);\r\n        game.addEntity(this.sidesButton);\r\n    }\r\n\r\n    update() {}\r\n\r\n    draw(ctx: CanvasRenderingContext2D) {}\r\n}","import GameEngine from \"./gameEngine\";\r\n\r\nexport default class RollManager {\r\n    game: GameEngine;\r\n    activeIngredients: any[];\r\n    isComplete: boolean;\r\n\r\n    constructor(game: GameEngine) {\r\n        this.game = game;\r\n        this.activeIngredients = [];\r\n        this.isComplete = false;\r\n    }\r\n\r\n    addIngredient(ingredient: any) {\r\n        this.activeIngredients.push(ingredient);\r\n        console.log(ingredient);\r\n    }\r\n\r\n    getRolls() {\r\n        return this.activeIngredients;\r\n    }\r\n\r\n    completeRoll() {\r\n        this.isComplete = true;\r\n    }\r\n\r\n    update() {};\r\n    draw(ctx: CanvasRenderingContext2D) {}; \r\n}","import AssetManager from \"./assetManager.js\";\r\nimport GameEngine from \"./gameEngine.js\";\r\nimport OrderManager from \"./orderManager.js\";\r\nimport SceneManager from \"./sceneManager.js\";\r\nimport StationSwitcher from \"./stationSwitcher.js\";\r\nimport RollManager from \"./rollManager.js\";\r\nimport CustomerManager from \"./customerManager.js\";\r\n\r\n\r\n\r\nexport const ASSET_MANAGER = new AssetManager();\r\nlet sceneManage, orderManage, rollManage, customerManage;\r\n\r\n// sprites\r\n\r\n// backgrounds\r\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Rice_Background.JPG\");\r\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Roll_Background.JPG\");\r\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Order_Background.png\");\r\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Order_Foreground.png\");\r\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Station_Background.png\");\r\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Minigame_Background.png\");\r\n\r\n// rice station\r\nASSET_MANAGER.queueDownload(\"./assets/objects/RiceCooker.png\");\r\nASSET_MANAGER.queueDownload(\"./assets/objects/BambooMat.png\");\r\nASSET_MANAGER.queueDownload(\"./assets/objects/Rice_Cooked.png\");\r\nASSET_MANAGER.queueDownload(\"./assets/objects/Nori.png\");\r\nASSET_MANAGER.queueDownload(\"./assets/objects/Nori_Source.png\");\r\n\r\n// buttons\r\nASSET_MANAGER.queueDownload(\"./assets/button/Rice_Button.JPG\");\r\nASSET_MANAGER.queueDownload(\"./assets/button/Roll_Button.JPG\");\r\nASSET_MANAGER.queueDownload(\"./assets/button/Side_Button.JPG\");\r\nASSET_MANAGER.queueDownload(\"./assets/button/Order_Button.JPG\");\r\n\r\n//sushi assembly\r\nASSET_MANAGER.queueDownload(\"./assets/assembly/case.jpg\");\r\nASSET_MANAGER.queueDownload(\"./assets/assembly/tray.jpg\");\r\n\r\n//Wash that rice\r\nASSET_MANAGER.queueDownload('./assets/hand.png');\r\nASSET_MANAGER.queueDownload('./assets/pot_top.png');\r\nASSET_MANAGER.queueDownload('./assets/pot_top_outside.png');\r\nASSET_MANAGER.queueDownload('./assets/rotate.png');\r\nASSET_MANAGER.queueDownload('./assets/checkmark.png');\r\n\r\n// fill the pot\r\nASSET_MANAGER.queueDownload('./assets/objects/Faucet_Off.png');\r\nASSET_MANAGER.queueDownload('./assets/objects/Faucet_On.png');\r\nASSET_MANAGER.queueDownload('./assets/objects/Pot_Animation.png');\r\nASSET_MANAGER.queueDownload('./assets/backgrounds/FillThePot_Background.png');\r\n\r\n// Don't burn the rice.\r\nASSET_MANAGER.queueDownload('./assets/objects/RiceCooker_On.png');\r\nASSET_MANAGER.queueDownload('./assets/objects/RiceCooker_Off.png');\r\n\r\n\r\nASSET_MANAGER.queueDownload('./assets/sounds/jingle.mp3');\r\n\r\n// Swat the flies\r\nASSET_MANAGER.queueDownload(\"./assets/flies.png\");\r\nASSET_MANAGER.queueDownload(\"./assets/swatter.png\");\r\n\r\n//Counter\r\nASSET_MANAGER.queueDownload(\"./assets/characters/dummy.png\");\r\nASSET_MANAGER.queueDownload(\"./assets/button/exclam.png\");\r\n\r\n// Food bits\r\nASSET_MANAGER.queueDownload(\"./assets/assembly/crab.png\");\r\nASSET_MANAGER.queueDownload(\"./assets/assembly/cucumber.png\");\r\nASSET_MANAGER.queueDownload(\"./assets/assembly/tuna.png\");\r\nASSET_MANAGER.queueDownload(\"./assets/assembly/avocado.png\");\r\nASSET_MANAGER.queueDownload(\"./assets/assembly/salmon.png\");\r\nASSET_MANAGER.queueDownload(\"./assets/assembly/uni.png\");\r\nASSET_MANAGER.queueDownload(\"./assets/assembly/tamago.png\");\r\n\r\n \r\nASSET_MANAGER.downloadAll(() => {\r\n    const gameEngine = new GameEngine({\r\n        debugging: false,\r\n    });\r\n\r\n\tconst canvas = document.getElementById(\"gameWorld\") as HTMLCanvasElement;\r\n    if (!canvas) {\r\n        throw new Error(\"Canvas element not found\");\r\n    }\r\n\tconst ctx = canvas.getContext(\"2d\");\r\n    if (!ctx) {\r\n        throw new Error(\"Canvas context not found\");\r\n    }\r\n    \r\n\tgameEngine.init(ctx);\r\n\r\n    sceneManage = new SceneManager(gameEngine);\r\n\tgameEngine.addEntity(sceneManage);\r\n    gameEngine.sceneManager = sceneManage;\r\n\r\n    orderManage = new OrderManager(gameEngine);\r\n    rollManage = new RollManager(gameEngine);\r\n    customerManage  = new CustomerManager(gameEngine);\r\n\r\n    gameEngine.addEntity(orderManage);\r\n    gameEngine.addEntity(rollManage)\r\n\r\n\tgameEngine.addEntity(new StationSwitcher(gameEngine));\r\n\r\n\tgameEngine.start();\r\n\r\n});\r\n\r\n/** Creates an alias for requestAnimationFrame for backwards compatibility */\r\n//@ts-expect-error\r\nwindow.requestAnimFrame = (() => {\r\n    return window.requestAnimationFrame || // @ts-expect-error\r\n        window.webkitRequestAnimationFrame || // @ts-expect-error\r\n        window.mozRequestAnimationFrame || // @ts-expect-error\r\n        window.oRequestAnimationFrame || // @ts-expect-error\r\n        window.msRequestAnimationFrame ||\r\n        /**\r\n         * Compatibility for requesting animation frames in older browsers\r\n         * @param {Function} callback Function\r\n         * @param {DOM} element DOM ELEMENT\r\n         */\r\n        ((callback: TimerHandler, element: any) => {\r\n            window.setTimeout(callback, 1000 / 60);\r\n        });\r\n})();\r\nexport { sceneManage, orderManage, rollManage, customerManage };"],"names":["AssetManager","__publicField","path","callback","i","that","ext","img","aud","audio","bak","mute","key","asset","volume","Timer","current","delta","gameDelta","GameObject","game","id","persistent","data","ctx","e","Faucet","pot","currentData","newAmount","ASSET_MANAGER","mouseX","mouseY","GameEngine","options","gameLoop","getXandY","x","y","entity","event","entitiesCount","diff","defaultValue","value","gameObject","Button","onClick","image","button","width","height","text","DnDButton","dnd","color","OrderManager","order","o","length","placement","yOffset","sprite","ProgressBar","randomIntRange","start","end","getDistance","p1","p2","PotTop","avgPos","acc","curr","avgDist","PotTopOutside","COLORS","RiceGrain","angle","distance","centerX","centerY","RotateIcon","Hand","Checkmark","Scene","obj","WIDTH","HEIGHT","POT_RADIUS","WashThatRiceScene","Background","amountOfGrains","rice","TimerBar","gameEngine","totalTime","progressWidth","perfectStartX","perfectEndX","timerBar","off","on","DontBurnRiceScene","timeBar","riceCooker","RiceCooker","Pot","FillThePotScene","spritesheet","Order","ingredients","sides","Ingredient","type","Wrap","Side","WRAP","INGREDIENTS","CONDIMENTS","SIDES","Customer","npc","startWalk","orderX","orderY","ingredient","side","resolve","t","step","xDiff","yDiff","dx","dy","nx","ny","xChange","yChange","orderManage","getRandomElements","array","count","numWrap","numIngredients","numCondiments","numSides","selectedWraps","selectedIngredients","selectedCondiments","selectedSides","CounterScene","RiceStationScene","BambooMat","nori","Nori","minigame","sceneManage","element","rollManage","RiceAssemblyScene","FoodBottom","binWidth","binHeight","foods","curFood","foodBin","FoodBin","SceneUpdater","food","bottomWidth","bottomHeight","xOffset","xCount","xSpace","yCount","ySpace","row","col","ROLLED_HEIGHT","pos","index","cutWidth","bambooMatImg","spacing","scene","SceneManager","StationSwitcher","RollManager","canvas"],"mappings":"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"}
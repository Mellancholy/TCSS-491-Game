{"version":3,"file":"index-D8psXTs1.js","sources":["../../src/assetManager.ts","../../src/timer.ts","../../src/gameObject.ts","../../src/scenes/fillThePot/faucet.ts","../../src/gameEngine.ts","../../src/background.ts","../../src/button.ts","../../src/scene.ts","../../src/gameState.ts","../../src/scenes/title/scene.ts","../../src/scenes/washThatRice/progressBar.ts","../../src/util.ts","../../src/scenes/washThatRice/pot.ts","../../src/scenes/washThatRice/riceGrain.ts","../../src/scenes/washThatRice/rotate.ts","../../src/scenes/washThatRice/hand.ts","../../src/scenes/washThatRice/checkmark.ts","../../src/scenes/washThatRice/scene.ts","../../src/scenes/dontBurnRice/timerBar.ts","../../src/scenes/dontBurnRice/ricecooker.ts","../../src/scenes/dontBurnRice/scene.ts","../../src/scenes/fillThePot/pot.ts","../../src/scenes/fillThePot/scene.ts","../../src/scenes/counter/food.ts","../../src/hud/ticket.ts","../../src/scenes/counter/customer.ts","../../src/scenes/counter/scene.ts","../../src/scenes/riceStation/scene.ts","../../src/scenes/assembly/scene.ts","../../src/scenes/sides/scene.ts","../../src/scenes/gameOver/scene.ts","../../src/sceneManager.ts","../../src/hud/hud.ts","../../src/main.ts"],"sourcesContent":["export default class AssetManager {\n    successCount: number;\n    errorCount: number;\n    cache: { [key: string]: HTMLImageElement | HTMLAudioElement };\n    downloadQueue: string[];\n\n    constructor() {\n        this.successCount = 0;\n        this.errorCount = 0;\n        this.cache = {};\n        this.downloadQueue = [];\n    };\n\n    queueDownload(path: string) {\n        console.log(\"Queueing \" + path);\n        this.downloadQueue.push(path);\n    };\n\n    isDone() {\n        return this.downloadQueue.length === this.successCount + this.errorCount;\n    };\n\n    downloadAll(callback: () => void) {\n        if (this.downloadQueue.length === 0) setTimeout(callback, 10);\n        for (var i = 0; i < this.downloadQueue.length; i++) {\n            var that = this;\n\n            var path = this.downloadQueue[i];\n            console.log(path);\n            var ext = path.substring(path.length - 3).toLowerCase();\n\n            switch (ext) {\n                case 'jpg':\n                case 'png':\n                    var img = new Image();\n                    img.addEventListener(\"load\", function () {\n                        console.log(\"Loaded \" + this.src);\n                        that.successCount++;\n                        if (that.isDone()) callback();\n                    });\n\n                    img.addEventListener(\"error\", function () {\n                        console.log(\"Error loading \" + this.src);\n                        that.errorCount++;\n                        if (that.isDone()) callback();\n                    });\n\n                    img.src = path;\n                    this.cache[path] = img;\n                    break;\n                case 'wav':\n                case 'mp3':\n                case 'mp4':\n                    var aud = new Audio();\n                    aud.addEventListener(\"loadeddata\", function () {\n                        console.log(\"Loaded \" + this.src);\n                        that.successCount++;\n                        if (that.isDone()) callback();\n                    });\n\n                    aud.addEventListener(\"error\", function () {\n                        console.log(\"Error loading \" + this.src);\n                        that.errorCount++;\n                        if (that.isDone()) callback();\n                    });\n\n                    aud.addEventListener(\"ended\", function () {\n                        aud.pause();\n                        aud.currentTime = 0;\n                    });\n\n                    aud.src = path;\n                    aud.load();\n\n                    this.cache[path] = aud;\n                    break;\n            }\n        }\n    };\n\n    getAsset(path: string) {\n        return this.cache[path];\n    };\n\n    playAsset(path: string) {\n        let audio = this.cache[path] as HTMLAudioElement;\n        if (!audio) {\n            console.error(`Audio asset not found: ${path}`);\n            return;\n        }\n    \n        if (audio.loop) {\n            // If this is the background music, don't clone it, just ensure it's playing\n            if (audio.paused) {\n                audio.play().catch(err => console.warn(\"Autoplay blocked:\", err));\n            }\n            return;\n        }\n\n        // Clone sound effect for multiple overlapping plays\n        let clone = audio.cloneNode() as HTMLAudioElement;\n        clone.currentTime = 0;\n        clone.volume = audio.volume;\n        clone.play();\n    };\n\n    playBackgroundMusic(path: string) {\n        let bgm = this.cache[path] as HTMLAudioElement;\n        if (!bgm) {\n            console.error(`Background music not found: ${path}`);\n            return;\n        }\n        bgm.loop = true; // Ensure looping\n        if (bgm.paused) {\n            bgm.currentTime = 0; // Start from the beginning if it was paused\n            bgm.play().catch(err => console.warn(\"Autoplay blocked:\", err));\n        }\n    }\n    \n\n    muteAudio(mute: boolean) {\n        for (var key in this.cache) {\n            let asset = this.cache[key];\n            if (asset instanceof Audio) {\n                asset.muted = mute;\n            }\n        }\n    };\n\n    adjustVolume(volume: number) {\n        for (var key in this.cache) {\n            let asset = this.cache[key];\n            if (asset instanceof Audio) {\n                asset.volume = volume;\n            }\n        }\n    };\n\n    pauseBackgroundMusic() {\n        for (var key in this.cache) {\n            let asset = this.cache[key];\n            if (asset instanceof Audio) {\n                asset.pause();\n                asset.currentTime = 0;\n            }\n        }\n    };\n\n    autoRepeat(path: string) {\n        var aud = this.cache[path] as HTMLAudioElement;\n        aud.addEventListener(\"ended\", function () {\n            aud.play();\n        });\n    };\n};\n\n","// This game shell was happily modified from Googler Seth Ladd's \"Bad Aliens\" game and his Google IO talk in 2011\n\nexport default class Timer {\n    gameTime: number;\n    maxStep: number;\n    lastTimestamp: number;\n\n    constructor() {\n        this.gameTime = 0;\n        this.maxStep = 0.05;\n        this.lastTimestamp = 0;\n    };\n\n    tick() {\n        const current = Date.now();\n        const delta = (current - this.lastTimestamp) / 1000;\n        this.lastTimestamp = current;\n\n        const gameDelta = Math.min(delta, this.maxStep);\n        this.gameTime += gameDelta;\n        return gameDelta;\n    };\n};","import GameEngine from \"./gameEngine\";\n\nexport default class GameObject { \n    game: GameEngine;\n    id: string = \"\";\n    persistent: boolean = false;\n    removeFromWorld: boolean = false;\n    hidden: boolean | undefined = false;\n    zIndex: number = 0;\n    [key: string]: any;\n\n    constructor(game: GameEngine, id: string = \"\", persistent: boolean = false) {\n        if (this.constructor == GameObject) {\n            throw new Error(\"Abstract classes can't be instantiated.\");\n        }\n\n        this.game = game;\n        this.id = id;\n        this.persistent = persistent;\n\n        if(persistent) {\n            game.registerPersistentGameObject(id, this)\n        }\n    }\n\n    init() {\n        // Initialize the game object\n        // This method should be overridden by subclasses\n        throw new Error(\"Method 'init()' must be implemented.\");\n    }\n\n    loadSharedData() {\n        const data = this.game.getSharedDataByKey(this.id)\n        for (const key in data) {\n            this[key] = data[key];\n        }\n        //this.game.removeSharedDataByKey(this.id);\n    }\n\n    update() {\n        throw new Error(\"Method 'update()' must be implemented.\");\n    }\n\n    draw(ctx : CanvasRenderingContext2D) {\n        throw new Error(\"Method 'draw()' must be implemented.\");\n    }\n\n    deload() {\n        this.removeFromWorld = true;\n    }\n\n    restore() {\n        this.removeFromWorld = false;\n    }\n    \n\n    onMouseDown(e: MouseEvent) {\n\n    }\n\n    onMouseUp(e: MouseEvent) {\n\n    }\n}","import GameEngine from \"src/gameEngine\";\nimport GameObject from \"src/gameObject.js\";\nimport { ASSET_MANAGER } from \"src/main.js\";\nimport Pot from \"./pot\";\n\nexport default class Faucet extends GameObject {\n    game: GameEngine;\n    pot: Pot;\n    isOn: boolean;\n    gameWon: boolean;\n    gameOver: boolean;\n    \n    constructor(game: GameEngine, pot: Pot) {\n        super(game);\n        this.game = game;\n        this.isOn = false;\n        this.pot = pot\n        this.gameWon = false;\n        this.gameOver = false;\n    };\n\n    update() {\n        // If faucet is on, add water to pot\n        if (this.isOn) {\n            this.pot.liters++;\n            console.log(this.pot.liters);\n        }\n\n        if (!this.isOn && this.pot.liters > 0) {\n            if (this.pot.liters >= 700 && this.pot.liters < 800 && !this.gameWon) {\n                this.gameWon = true; \n                console.log(this.gameWon); // debugging\n                const currentData = this.game.getSharedDataByKey(\"riceCooker\");\n                const newAmount = currentData ? currentData.amount + 5 : 5;\n                this.game.addSharedData(\"riceCooker\", {amount: newAmount});\n                setTimeout(() => {\n                    this.game.sceneManager!.loadScene(\"rice\")\n                }\n                , 2000)\n            } else {\n                this.gameWon = false;\n            }\n            this.gameOver = true;\n        }\n\n        \n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if (this.isOn) {\n            ctx.drawImage(ASSET_MANAGER.getAsset(\"./assets/objects/Faucet_On.png\") as HTMLImageElement, 565, 248);\n        } else {\n            ctx.drawImage(ASSET_MANAGER.getAsset(\"./assets/objects/Faucet_Off.png\") as HTMLImageElement, 565, 285);\n        }\n\n        // Drawing hit box\n        ctx.beginPath();\n        ctx.strokeStyle = \"red\";\n        ctx.rect(550, 285, 50, 50);\n        ctx.stroke();\n    };\n\n    faucetManager(mouseX: number, mouseY: number) {\n        if (mouseX >= 550 && mouseX <= 550 + 50 && mouseY >= 285 && mouseY <= 285 + 45 && !this.isOn) {\n            this.isOn = true;\n            console.log(this.isOn);\n        } else if (mouseX >= 550 && mouseX <= 550 + 50 && mouseY >= 285 && mouseY <= 285 + 45 && this.isOn) {\n            this.isOn = false;\n            console.log(this.isOn);\n        }\n    }\n}","import Timer from \"./timer.js\";\nimport Faucet from \"./scenes/fillThePot/faucet.js\";\nimport SceneManager from \"./sceneManager.js\";\nimport Scene from \"./scene.js\";\nimport GameObject from \"./gameObject.js\";\nimport HUD from \"./hud/hud.js\";\n\n\n// This game shell was happily modified from Googler Seth Ladd's \"Bad Aliens\" game and his Google IO talk in 2011\n\nexport default class GameEngine {\n    ctx: CanvasRenderingContext2D | null;\n    entities: any[];\n    persistentGameObjects: {[key: string]: any};\n    click: { x: number, y: number } | null;\n    mouse: { x: number, y: number } | null;\n    move: { x: number, y: number } | null | undefined;\n    down: boolean | null;\n    previousMousePositionsDelay: number;\n    previousMousePositionsDelayCounter: number;\n    previousMousePositions: { x: number, y: number }[];\n    previousMousePositionsLatest: number;\n    wheel: WheelEvent | null;\n    keys: {[key: string]: boolean};\n    options: { debugging: boolean };\n    sceneManager: SceneManager | null;\n    currentScene: Scene | null;\n    hud: HUD | null;\n    sharedData: {[key: string]: any};\n    timer: Timer | undefined;\n    running: boolean | undefined;\n    rightclick: { x: number; y: number; } | undefined;\n    clockTick: number | undefined;\n    canvas: HTMLCanvasElement = document.getElementById(\"gameWorld\") as HTMLCanvasElement;\n\n\n    constructor(options: { debugging: boolean } | null) {\n        // What you will use to draw\n        // Documentation: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D\n        this.ctx = null;\n\n        // Everything that will be updated and drawn each frame\n        this.entities = [];\n        this.persistentGameObjects = {};\n\n        // Information on the input\n        this.click = null;\n        this.mouse = null;\n        this.down = null;\n        this.previousMousePositionsDelay = 3;\n        this.previousMousePositionsDelayCounter = 0;\n        this.previousMousePositions = [];\n        this.previousMousePositionsLatest = 0;\n        this.wheel = null;\n        this.keys = {};\n\n\n\n        // Options and the Details\n        this.options = options || {\n            debugging: false,\n        };\n\n        this.sceneManager = null;\n        this.currentScene = null;\n        this.hud = null;\n        this.sharedData = {};\n    };\n\n    init(ctx: CanvasRenderingContext2D) {\n        this.ctx = ctx;\n        this.startInput();\n        this.timer = new Timer();\n    };\n\n    start() {\n        this.running = true;\n        const gameLoop = () => {\n            this.loop();\n            // @ts-expect-error\n            requestAnimFrame(gameLoop, this.ctx!.canvas);\n        };\n        gameLoop();\n    };\n\n    startInput() {\n        var getXandY = (e: MouseEvent) => {\n            let bounds = this.ctx!.canvas.getBoundingClientRect();\n            let scaleX = this.ctx!.canvas.width / bounds.width;\n            let scaleY = this.ctx!.canvas.height / bounds.height;\n\n            let x = (e.clientX - bounds.left) * scaleX;\n            let y = (e.clientY - bounds.top) * scaleY;\n\n            return { x: x , y: y };\n        }\n        \n        this.ctx!.canvas.addEventListener(\"mousemove\", e => {\n            this.move = getXandY(e);\n            // if (this.options.debugging) {\n            //     console.log(\"MOUSE_MOVE\", getXandY(e));\n            // }\n            this.mouse = getXandY(e);\n            this.previousMousePositionsDelayCounter++;\n\n            if(this.previousMousePositionsDelayCounter >= this.previousMousePositionsDelay) {\n                if (this.previousMousePositions.length >= 15) {\n                    this.previousMousePositions.shift();\n                }\n                this.previousMousePositions.push(this.mouse);\n                this.previousMousePositionsDelayCounter = 0;\n                this.previousMousePositionsLatest = this.timer!.gameTime\n            }\n        });\n\n        this.ctx!.canvas.addEventListener(\"mouseup\", e => {\n            const realCoords = getXandY(e);\n            const modifiedEvent = {\n                ...e,\n                x: realCoords.x,\n                y: realCoords.y,\n            } as MouseEvent;\n            this.down = false;\n            // Stop dragging\n            this.entities.forEach(entity => {\n                if(entity.onMouseUp) entity.onMouseUp(modifiedEvent);\n            });\n\n            //console.log(\"Mouse Up\");  // Check if this is firing\n        }, false);\n\n        this.ctx!.canvas.addEventListener(\"mousedown\", (e) => {\n            const realCoords = getXandY(e);\n            const modifiedEvent = {\n                ...e,\n                x: realCoords.x,\n                y: realCoords.y,\n            } as MouseEvent;\n            this.down = true;\n            this.entities.forEach(entity => {\n                if(entity.onMouseDown) entity.onMouseDown(modifiedEvent);\n            });\n            if(this.options.debugging) {\n                this.addEntity(new Point(this, modifiedEvent.x, modifiedEvent.y));\n            }\n        }, false);\n\n        this.ctx!.canvas.addEventListener(\"click\", e => {\n            this.entities.forEach(entity => {\n                if (entity instanceof Faucet) {\n                    entity.faucetManager(getXandY(e).x, getXandY(e).y);\n                }\n            });\n            if (this.options.debugging) {\n                console.log(\"CLICK\", getXandY(e));\n                console.log(e)\n            }\n            this.click = getXandY(e);\n            // console.log(\"Mouse Clicked\");\n        });\n\n        this.ctx!.canvas.addEventListener(\"wheel\", e => {\n            if (this.options.debugging) {\n                //@ts-ignore\n                console.log(\"WHEEL\", getXandY(e), e.wheelDelta);\n            }\n            e.preventDefault(); // Prevent Scrolling\n            this.wheel = e;\n        });\n\n        this.ctx!.canvas.addEventListener(\"contextmenu\", e => {\n            if (this.options.debugging) {\n                console.log(\"RIGHT_CLICK\", getXandY(e));\n            }\n            e.preventDefault(); // Prevent Context Menu\n            this.rightclick = getXandY(e);\n        });\n\n        document.body.addEventListener(\"dndDrop\", e => {\n            this.entities.forEach(entity => {\n                if(entity.onDnDDrop) entity.onDnDDrop(e);\n            });\n        }, false);\n\n\n        this.ctx!.canvas.addEventListener(\"keydown\", event => this.keys[event.key] = true);\n        this.ctx!.canvas.addEventListener(\"keyup\", event => this.keys[event.key] = false);\n\n\n\n\n        // that.leftclick = mouseClickListener;\n        // this.ctx.canvas.addEventListener(\"click\", that.leftclick, false);\n    };\n\n    addEntity(entity: any) {\n        this.entities.push(entity);\n    };\n\n    draw() {\n        // Clear the whole canvas with transparent color (rgba(0, 0, 0, 0))\n        this.ctx!.clearRect(0, 0, this.ctx!.canvas.width, this.ctx!.canvas.height);\n\n        this.canvas.style.cursor = \"auto\";\n\n        // Draw the entities in order\n        for (let i = 0; i < this.entities.length; i++) {\n            this.entities[i].draw(this.ctx, this);\n        }\n    };\n\n    update() {\n        // console.log(this.entities);\n        let entitiesCount = this.entities.length;\n\n        // Sort entities based on their zIndex property\n        this.entities.sort((a, b) => a.zIndex - b.zIndex);\n\n        for (let i = 0; i < entitiesCount; i++) {\n            let entity = this.entities[i];\n\n            if (!entity.removeFromWorld) {\n                entity.update();\n            }\n            //If the size of the entity list has changed, update i\n            if(entitiesCount !== this.entities.length) {\n                let diff = entitiesCount - this.entities.length;\n                entitiesCount = this.entities.length;\n                i -= diff;\n            }\n        }\n\n        for (let i = this.entities.length - 1; i >= 0; --i) {\n            if (this.entities[i].removeFromWorld) {\n                this.entities.splice(i, 1);\n            }\n        }\n    };\n\n    loop() {\n        this.clockTick = this.timer!.tick();\n        this.update();\n        this.draw();\n    };\n\n    getSceneManager(): SceneManager {\n        if(!this.sceneManager) {\n            throw new Error(\"SceneManager is not initialized\");\n        }\n        return this.sceneManager;\n    }\n\n    getHUD(): HUD {\n        if(!this.hud) {\n            throw new Error(\"HUD is not initialized\");\n        }\n        return this.hud;\n    }\n\n    getSharedData() {\n        return this.sharedData;\n    }\n\n    getSharedDataByKey(key: string) {\n        return this.sharedData[key];\n    }\n    \n    getSharedDataByKeyAndDefault(key: string, defaultValue: object) {\n        if (this.sharedData[key] === undefined) {\n            return defaultValue;\n        }\n        return this.sharedData[key];\n    }\n    addSharedData(key: string, value: object) {\n        this.sharedData[key] = {...this.sharedData[key], ...value};\n    }\n\n    removeSharedDataByKey(key: string) {\n        delete this.sharedData[key];\n    }\n\n    registerPersistentGameObject(id: string, gameObject: GameObject) {\n        this.persistentGameObjects[id] = gameObject;\n    }\n\n    getPersistentGameObject(id: string) {\n        return this.persistentGameObjects[id];\n    }\n\n    removePersistentGameObject(id: string) {\n        delete this.persistentGameObjects[id];\n    }\n    \n    clearPersistentGameObjects() {\n        this.persistentGameObjects = {};\n    }\n};\n\nclass Point extends GameObject {\n    x: number;\n    y: number;\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.x = x;\n        this.y = y;\n    }\n    update() {\n        \n    }\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.fillStyle = \"red\";\n        ctx.fillRect(this.x, this.y, 5, 5);\n    }\n}","import GameObject from \"./gameObject.js\";\nimport { ASSET_MANAGER } from \"./main.js\";\nimport GameEngine from \"./gameEngine.js\";\n\nexport default class Background extends GameObject {\n    game: GameEngine;\n    spritesheet: HTMLImageElement;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n\n    constructor(game: GameEngine, spritesheet: string, x = 0, y = 0, width = 0, height = 0) {\n        super(game, 'background');\n        this.game = game;\n        this.spritesheet = ASSET_MANAGER.getAsset(spritesheet) as HTMLImageElement;\n        this.x = x;\n        this.y = y;\n\n\n        if (width == 0 && height == 0) {\n            this.width = this.spritesheet.width;\n            this.height = this.spritesheet.height;\n        } else{\n            this.width = width;\n            this.height = height;\n        }\n    }\n\n    update() {\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.spritesheet, this.x, this.y, this.width, this.height);\n    }\n}","import GameObject from \"./gameObject.js\";\nimport { ASSET_MANAGER } from \"./main.js\";\nimport GameEngine from \"./gameEngine.js\";\n\nexport class Button extends GameObject {\n    image: HTMLImageElement | undefined;\n    x: number;\n    y: number;\n    width: any;\n    height: any;\n    bgColor: any;\n    text: string | undefined;\n    hidden: boolean;\n\n\n    constructor(game: GameEngine, x: number, y: number, onClick: () => void) {\n        super(game, 'button');\n        this.x = x;\n        this.y = y;\n        this.onClick = onClick;\n        this.hidden = false;\n        this.zIndex = 90;\n    }\n\n    static imageButton(game: GameEngine, x: number, y: number, image: string, onClick: () => void) {\n        let button = new Button(game, x, y, onClick);\n        Object.assign(button, { image: ASSET_MANAGER.getAsset(image) });\n        return button;\n    }\n\n    static imageButtonWH(game: GameEngine, x: number, y: number, width: number, height: number, image: string, onClick: () => void) {\n        let button = new Button(game, x, y, onClick);\n        Object.assign(button, { width, height, image: ASSET_MANAGER.getAsset(image) });\n        return button;\n    }\n\n    static rectButton(game: GameEngine, x: number, y: number, width: number, height: number, onClick: () => void, text = \"\") {\n        let button = new Button(game, x, y, onClick);\n        Object.assign(button, { width, height, bgColor: \"gray\", text });\n        return button;\n    }\n\n    static rectButtonImage(game: GameEngine, x: number, y: number, width: number, height: number, image: string, onClick: { (): void; (): void; }) {\n        let dnd = new Button(game, x, y, onClick);\n        Object.assign(dnd, { width, height, image: ASSET_MANAGER.getAsset(image), transparent: true });\n\n        dnd.draw = function (ctx) {\n            \n            ctx.fillStyle = \"lightgrey\";\n            ctx.fillRect(this.x, this.y, this.width, this.height);\n\n\n            if (this.image) {\n                const imgSize = Math.min(this.width, this.height) * 0.8;\n                ctx.drawImage(this.image, this.x + (this.width - imgSize) / 2, this.y + (this.height - imgSize) / 2, imgSize, imgSize);\n            } else {\n                console.error(`Image not found for button: ${image}`);\n            }\n        };\n\n        return dnd;\n    }\n\n    update() {\n    }\n\n    onMouseDown(e: MouseEvent) {\n        if (this.hidden) return;\n        if (this.image) {\n            if (e.x > this.x! && e.x < this.x! + this.image.width &&\n                e.y > this.y! && e.y < this.y! + this.image.height) {\n                this.onClick();\n            }\n        } else {\n            if (e.x > this.x! && e.x < this.x + this.width &&\n                e.y > this.y! && e.y < this.y + this.height) {\n                this.onClick();\n            }\n        }\n    }\n    onClick() {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if (this.hidden) return;\n\n        if (this.image && this.width && this.height) {\n            if (this.game.mouse && this.game.mouse.x > this.x && this.game.mouse.x < this.x + this.width &&\n                this.game.mouse.y > this.y && this.game.mouse.y < this.y + this.height) {\n                this.game.canvas.style.cursor = \"pointer\";\n            }\n            ctx.drawImage(this.image, this.x, this.y, this.width, this.height);\n        } else if (this.image) {\n            if (this.game.mouse && this.game.mouse.x > this.x && this.game.mouse.x < this.x + this.image.width &&\n                this.game.mouse.y > this.y && this.game.mouse.y < this.y + this.image.height) {\n                this.game.canvas.style.cursor = \"pointer\";\n            }\n            ctx.drawImage(this.image, this.x!, this.y!);\n        } else {\n            if (this.game.mouse && this.game.mouse.x > this.x && this.game.mouse.x < this.x + this.width &&\n                this.game.mouse.y > this.y && this.game.mouse.y < this.y + this.height) {\n                this.game.canvas.style.cursor = \"pointer\";\n            }\n            ctx.fillStyle = this.bgColor;\n            ctx.fillRect(this.x!, this.y!, this.width, this.height);\n            ctx.lineWidth = 2;\n            ctx.strokeStyle = \"black\";\n            ctx.strokeRect(this.x!, this.y!, this.width, this.height);\n            ctx.fillStyle = \"black\"\n            ctx.font = \"36px serif\";\n            ctx.textAlign = \"center\";\n            ctx.textBaseline = \"middle\";\n            ctx.fillText(this.text!, this.x! + (this.width / 2), this.y! + (this.height / 2) + 5)\n        }\n    }\n}\n\nexport class DnDButton extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    onClick: () => void;\n    dragging: boolean;\n    transparent: boolean | undefined;\n    image: any;\n    bgColor: any;\n    width: number | undefined;\n    height: number | undefined;\n\n    constructor(game: GameEngine, x: number, y: number, onClick: () => void) {\n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.onClick = onClick;\n\n        this.dragging = false;\n    }\n\n    static imageButton(game: GameEngine, x: number, y: number, image: string, onClick: () => {}) {\n        let dnd = new DnDButton(game, x, y, onClick);\n        Object.assign(dnd, { image: ASSET_MANAGER.getAsset(image) });\n        return dnd;\n    }\n\n    static transparentImageButton(game: GameEngine, x: number, y: number, width: number, height: number, image: string, onClick: () => void) {\n        let dnd = new DnDButton(game, x, y, onClick);\n        Object.assign(dnd, { width, height, image: ASSET_MANAGER.getAsset(image), transparent: true });\n        return dnd;\n    }\n\n    static rectButton(game: GameEngine, x: number, y: number, width: number, height: number, color: string, onClick: () => void) {\n        let dnd = new DnDButton(game, x, y, onClick);\n        Object.assign(dnd, { width, height, bgColor: color});\n        return dnd;\n    }\n\n    update() {\n\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if (this.game.options.debugging) {\n            ctx.strokeStyle = \"blue\";\n            ctx.strokeRect(this.x, this.y, this.width!, this.height!);\n            if (this.image) {\n                ctx.strokeStyle = \"green\";\n                //ctx.strokeRect(this.x, this.y, this.image.width, this.image.height);\n            }\n        }\n        if (this.transparent && !this.dragging) return;\n        if (this.image) {\n            if (this.dragging) {\n                ctx.drawImage(this.image, this.game.mouse!.x - this.image.width / 2, this.game.mouse!.y - this.image.height / 2);\n            } else {\n                //console.log(\"drawing image\", this.image, this.x, this.y);\n                ctx.drawImage(this.image, this.x, this.y);\n            }\n\n        } else {\n            if(this.dragging) {\n                ctx.fillStyle = this.bgColor || \"gray\";\n                ctx.fillRect(this.game.mouse!.x - this.width! / 2, this.game.mouse!.y - this.height! / 2, this.width!, this.height!);\n            } else {\n                ctx.fillStyle = this.bgColor || \"gray\";\n                ctx.fillRect(this.x, this.y, this.width!, this.height!);\n                ctx.lineWidth = 2;\n                ctx.strokeStyle = \"black\";\n                ctx.strokeRect(this.x, this.y, this.width!, this.height!);\n            }\n\n        }\n    }\n\n    onMouseDown(e: MouseEvent) {\n        if (this.image && !this.transparent) {\n            if (e.x > this.x && e.x < this.x + this.image.width &&\n                e.y > this.y && e.y < this.y + this.image.height) {\n                this.dragging = true;\n                this.onClick();\n            }\n        } else {\n            if (e.x > this.x && e.x < this.x + this.width! &&\n                e.y > this.y && e.y < this.y + this.height!) {\n                this.dragging = true;\n                this.onClick();\n            }\n        }\n    }\n\n    onMouseUp(e: MouseEvent) {\n        if (this.dragging) {\n            this.dragging = false;\n            const event = new CustomEvent(\"dndDrop\",\n                {\n                    detail: {\n                        x: e.x,\n                        y: e.y,\n                        button: this\n                    }\n                }\n            );\n            document.body.dispatchEvent(event);\n        }\n\n    }\n\n}\n","import { Button } from \"./button\";\nimport GameEngine from \"./gameEngine\";\nimport GameObject from \"./gameObject\";\n\nexport default class Scene {\n    game: GameEngine;\n    gameObjects: Array<GameObject>;\n\n    constructor(game: GameEngine) {\n        if (this.constructor == Scene) {\n            throw new Error(\"Abstract classes can't be instantiated.\");\n        }\n        this.game = game;\n        this.gameObjects = [];\n    }\n\n    initalizeScene() { \n        // This is where you would add all of the game objects to the scene\n    }\n\n    addGameObject(gameObject: GameObject) {\n        this.gameObjects.push(gameObject);\n        this.game.addEntity(gameObject);\n    }\n\n    addPersistantGameObject(id: string) {\n        let obj = this.game.getPersistentGameObject(id);\n        if (!obj) {\n            return false;\n        }\n        this.addGameObject(obj);\n        return true;\n    }\n\n    deload() {\n        this.gameObjects.forEach(gameObject => {\n            if (gameObject.persistent) {\n                return;  \n            }\n            gameObject.deload();\n        })\n        this.gameObjects = []\n    }\n\n    // Stub methods since its technically a game object\n    draw(ctx: CanvasRenderingContext2D) {}\n    update() {}\n}","import GameEngine from \"./gameEngine\";\nimport GameObject from \"./gameObject\";\nimport Customer from \"./scenes/counter/customer\";\nimport { Order } from \"./scenes/counter/food\";\n\ntype OrderState = {\n    customer: Customer\n    order: Order\n}\ntype GameStateType = {\n    money: number\n    gameTime: number;\n    dayStartedAtTime: number;\n    orders: OrderState[]\n    orderWorkingOn: Order | null\n    currentDraggedItem: GameObject | null,\n    stationsComplete: {\n        rice: boolean,\n        roll: boolean,\n        sides: boolean,\n    }\n};\n\nconst DEFAULT_GAME_STATE: GameStateType = {\n    money: 0,\n    gameTime: 0,\n    dayStartedAtTime: -1,\n    orders: [],\n    orderWorkingOn: null,\n    currentDraggedItem: null,\n    stationsComplete: {\n        rice: false,\n        roll: false,\n        sides: false,\n    }\n};\n\nexport default class GameState {\n    private static instance: GameState;\n    private state: GameStateType = { ...DEFAULT_GAME_STATE };\n    \n    private constructor() {}\n    \n    public static getInstance(): GameState {\n        if (!GameState.instance) {\n            GameState.instance = new GameState();\n        }\n        return GameState.instance;\n    }\n    \n    public setState<K extends keyof GameStateType>(key: K, value: GameStateType[K]): GameStateType[K] {\n        this.state[key] = value;\n        return this.state[key];\n    }\n    \n    public getState<K extends keyof GameStateType>(key: K): GameStateType[K] {\n        return this.state[key];\n    }\n\n    public getAndMofifyState<K extends keyof GameStateType>(key: K, modifier: (value: GameStateType[K]) => GameStateType[K]): GameStateType[K] {\n        const currentValue = this.state[key];\n        const newValue = modifier(currentValue);\n        this.state[key] = newValue;\n        return newValue;\n    }\n\n    public addOrder(customer: Customer, order: Order): void {\n        this.state.orders.push({ customer, order });\n    }\n\n    public completeOrder(order: Order): void {\n        this.state.orders = this.state.orders.filter(o => o.order !== order);\n    }\n\n    public resetStationCompletion(game: GameEngine): void {\n        for (const station in this.state.stationsComplete as { [key in keyof typeof this.state.stationsComplete]: boolean }) {\n            this.state.stationsComplete[station as keyof typeof this.state.stationsComplete] = false;\n        }\n        game.removeSharedDataByKey(\"bambooMat\");\n        game.removeSharedDataByKey(\"foodBottom\");\n        //this.state.orderWorkingOn = new Order([], [], null);\n    }\n}","import { ASSET_MANAGER } from \"src/main.js\";\nimport  Background  from \"src/background.js\";\nimport { Button } from \"src/button.js\";\nimport GameEngine from 'src/gameEngine.js';\nimport Scene from 'src/scene.js';\nimport { sceneManage } from \"src/main.js\";\nimport GameState from \"src/gameState\";\n\nexport class TitleScene extends Scene {\n    game: GameEngine;\n        x: number;\n        y: number;\n        startButton: Button | undefined;\n\n    constructor(game: GameEngine, x: number, y: number) { \n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n    };\n\n    initalizeScene() { \n        this.addGameObject(new Background(this.game, \"./assets/backgrounds/Title_Background.png\"));  \n        this.startButton = Button.imageButton(this.game, 426, 400, \"./assets/button/Start_Button.png\", () => {\n            ASSET_MANAGER.playBackgroundMusic('./assets/sounds/background_music.mp3');\n            sceneManage.loadScene(\"order\");\n            if(!this.game.timer) {\n                throw new Error(\"Timer is not initialized\");\n            }\n            GameState.getInstance().setState(\"dayStartedAtTime\", this.game.timer.gameTime);\n        })\n        this.addGameObject(this.startButton);\n        this.game.getHUD().setState(\"hidden\");\n    }\n\n}","import GameEngine from \"src/gameEngine\";\nimport GameObject from \"src/gameObject.js\"\n\nexport default class ProgressBar extends GameObject{\n    game: GameEngine\n    x: number\n    y: number\n    width: number\n    height: number\n    progress: number\n\n    constructor(game: GameEngine, x: number, y: number, width: number, height: number) {\n        super(game);\n        this.game = game\n        this.x = x\n        this.y = y\n        this.width = width\n        this.height = height\n        this.progress = 0.01\n    }\n\n    update() {\n        if(this.progress >= 1) {\n            this.game.win = true\n            const currentData = this.game.getSharedDataByKey(\"riceCooker\");\n            const newAmount = currentData ? currentData.amount + 5 : 5;\n            this.game.addSharedData(\"riceCooker\", {amount: newAmount});\n            setTimeout(() => {\n                this.game.sceneManager.loadScene(\"rice\")\n            }\n            , 2000)\n            return\n        }\n        if(this.game.spinning && this.progress < 1) {\n            this.progress += 0.001\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.fillStyle = 'green';\n        ctx.fillRect(this.x, this.y, this.width * this.progress, this.height);\n    }\n}","/**\n * @param {Number} n\n * @returns Random Integer Between 0 and n-1\n */\nexport const randomInt = (n: number) => Math.floor(Math.random() * n);\n\n/**\n * @param {Number} n\n * @returns Random Number Between start and end\n */\nexport const randomIntRange = (start: number, end: number) => Math.random() * (end - start) + start;\n\n/**\n * @param {Number} r Red Value\n * @param {Number} g Green Value\n * @param {Number} b Blue Value\n * @returns String that can be used as a rgb web color\n */\nexport const rgb = (r: number, g: number, b: number) => `rgba(${r}, ${g}, ${b})`;\n\n/**\n * @param {Number} r Red Value\n * @param {Number} g Green Value\n * @param {Number} b Blue Value\n * @param {Number} a Alpha Value\n * @returns String that can be used as a rgba web color\n */\nexport const rgba = (r: number, g: number, b: number, a: number) => `rgba(${r}, ${g}, ${b}, ${a})`;\n\n/**\n * @param {Number} h Hue\n * @param {Number} s Saturation\n * @param {Number} l Lightness\n * @returns String that can be used as a hsl web color\n */\nexport const hsl = (h: number, s: number, l: number) => `hsl(${h}, ${s}%, ${l}%)`;\n\n/**\n * Returns distance from two points\n * @param {Number} p1, p2 Two objects with x and y coordinates\n * @returns Distance between the two points\n */\ntype Point = {\n    x: number;\n    y: number;\n};\nexport const getDistance = (p1: Point, p2: Point) => {\n    return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n};\n\n/**\n * Checks if two circles are colliding\n * @param {Object} circle1 First circle { x, y, radius }\n * @param {Object} circle2 Second circle { x, y, radius }\n * @returns {Boolean} True if the circles are colliding, otherwise false\n */\ntype Circle = {\n    x: number;\n    y: number;\n    radius: number;\n};\nexport const isColliding = (circle1: Circle, circle2: Circle) => {\n    let distance = getDistance(circle1, circle2);\n    return distance < (circle1.radius + circle2.radius);\n};\n\n\nexport const pointInBoxCollision = (bx: number, by: number, bw: number, bh: number, px: number, py: number) => {\n    return px > bx && px < bx + bw && py > by && py < by + bh;\n}","import GameEngine from \"src/gameEngine\"\nimport GameObject from \"src/gameObject.js\"\nimport { ASSET_MANAGER } from \"src/main.js\"\nimport { getDistance } from \"src/util.js\"\n\nexport class PotTop extends GameObject {\n    game: GameEngine\n    x: number\n    y: number\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game\n        this.x = x\n        this.y = y\n    }\n\n    update() {\n        if(this.game.timer.gameTime - this.game.previousMousePositionsLatest > 0.5) {\n            this.game.previousMousePositions = []\n            this.game.spinning = false\n        }\n        if(this.game.previousMousePositions.length === 15) {\n            let avgPos = this.game.previousMousePositions.reduce((acc: {x: number, y: number}, curr: {x: number, y: number}) => {\n                return {x: acc.x + curr.x, y: acc.y + curr.y}\n            }, {x: 0, y: 0})\n            avgPos.x /= 15\n            avgPos.y /= 15\n\n            if(getDistance(avgPos, {x: this.x, y: this.y}) > 250) {\n                //console.log(\"too far\")\n                this.game.spinning = false\n                return\n            }\n\n            //console.log(avgPos)\n\n            let avgDist = this.game.previousMousePositions.reduce((acc: number, curr: {x: number, y: number}) => {\n                return acc + Math.sqrt(Math.pow(curr.x - avgPos.x, 2) + Math.pow(curr.y - avgPos.y, 2))\n            }, 0)\n            avgDist /= 15\n\n            //console.log(avgDist)\n\n            if(avgDist < 200) {\n                console.log(\"spinning\")\n                this.game.spinning = true\n            } else {\n                this.game.spinning = false\n            }\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        const WIDTH = 750\n        const HEIGHT = 750\n        const sprite = ASSET_MANAGER.getAsset('./assets/pot_top.png')\n        ctx.drawImage(sprite, this.x - (WIDTH / 2), this.y - (HEIGHT / 2), WIDTH, HEIGHT);\n    }\n}\n\nexport class PotTopOutside extends GameObject {\n    game: GameEngine\n    x: number\n    y: number\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game)\n        this.game = game\n        this.x = x\n        this.y = y\n    }\n\n    update() {\n        \n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        const WIDTH = 750\n        const HEIGHT = 750\n        const sprite = ASSET_MANAGER.getAsset('./assets/pot_top_outside.png')\n        ctx.drawImage(sprite, this.x - (WIDTH / 2), this.y - (HEIGHT / 2), WIDTH, HEIGHT);\n    }\n}","import GameEngine from \"src/gameEngine\"\nimport GameObject from \"src/gameObject.js\"\nimport { randomIntRange } from \"src/util.js\"\n\nconst COLORS = [\n    '#f5f5f5',\n    '#f8f8f8',\n    '#fafafa',\n    '#fcfcfc',\n    '#ffffff',\n    '#fefefe',\n    '#fdfdfd',\n    '#fbfbfb',\n    '#f7f7f7',\n    '#f4f4f4'\n]\n\nexport default class RiceGrain extends GameObject{\n    game: GameEngine\n    angle: number\n    distance: number\n    centerX: number\n    centerY: number\n    x: number\n    y: number\n    rotation: number\n    color: string\n\n    constructor(game: GameEngine, angle: number, distance: number, centerX: number, centerY: number) {\n        super(game);\n        this.game = game\n        this.angle = angle\n        this.distance = distance\n        this.centerX = centerX\n        this.centerY = centerY\n        this.x = 0\n        this.y = 0\n        this.rotation = randomIntRange(0, Math.PI * 2)\n        this.color = COLORS[Math.floor(Math.random() * COLORS.length)]\n    }\n\n    update() {\n        if(this.game.spinning) {\n            this.angle += Math.PI / 180\n        }\n        this.x = this.distance * Math.cos(this.angle) + this.centerX\n        this.y = this.distance * Math.sin(this.angle) + this.centerY\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        //console.log(this.x, this.y)\n        ctx.strokeStyle = 'black';\n        ctx.fillStyle = this.color;\n        ctx.beginPath();\n        ctx.ellipse(this.x, this.y, 20, 4, this.rotation, 0, 2 * Math.PI);\n        ctx.stroke();\n        ctx.fill();\n    }\n}","import GameEngine from \"src/gameEngine\"\nimport GameObject from \"src/gameObject.js\"\nimport { ASSET_MANAGER } from \"src/main.js\"\n\nexport default class RotateIcon extends GameObject {\n    game: GameEngine\n    x: number\n    y: number\n    angle: number\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game\n        this.x = x\n        this.y = y\n        this.angle = Math.PI / 3\n    }\n\n    update() {\n        this.angle += Math.PI / 180\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        const WIDTH = 450\n        const HEIGHT = 450\n        const sprite = ASSET_MANAGER.getAsset('./assets/rotate.png')\n        ctx.save();\n        ctx.translate(1024/2,768/2);\n        ctx.rotate(this.angle);\n        ctx.drawImage(sprite, -WIDTH/2, -HEIGHT/2, WIDTH, HEIGHT);\n        ctx.restore();\n        \n    }\n}\n\n","import GameEngine from \"src/gameEngine\";\nimport GameObject from \"src/gameObject.js\"\nimport { ASSET_MANAGER } from \"src/main.js\"\n\nexport default class Hand extends GameObject {\n    game: GameEngine\n    x: number\n    y: number\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game\n        this.x = x\n        this.y = y\n    }\n\n    update() {\n        if (this.game.mouse) {\n            this.x = this.game.mouse.x\n            this.y = this.game.mouse.y\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        const w = 300\n        const h = 300\n        const sprite = ASSET_MANAGER.getAsset('./assets/hand.png')\n        ctx.drawImage(sprite, this.x - (w / 2), this.y - (h / 2), w, h);\n    }\n}","import { ASSET_MANAGER } from \"src/main\";\nimport GameObject from \"src/gameObject\";\nimport GameEngine from \"src/gameEngine\";\n\nexport default class Checkmark extends GameObject{\n    game: GameEngine\n    ASSET_MANAGER: ASSET_MANAGER\n    x: number\n    y: number\n    start: boolean\n    show: boolean\n    timeShown: number\n    timesFlashed: number\n    audioPlayed: boolean\n\n    constructor(game: GameEngine, ASSET_MANAGER: ASSET_MANAGER, x: number, y: number) {\n        super(game);\n        this.game = game\n        this.ASSET_MANAGER = ASSET_MANAGER\n        this.x = x\n        this.y = y\n        this.start = false\n        this.show = false\n        this.timeShown = 0\n        this.timesFlashed = 0\n        this.audioPlayed = false\n    }\n\n    update() {\n        if(this.game.win) {\n            this.start = true\n            if(!this.audioPlayed) {\n                this.ASSET_MANAGER.playAsset('./assets/sounds/jingle.mp3')\n                this.audioPlayed = true\n            }\n        }\n        if (this.start && this.timesFlashed < 6) {\n            this.timeShown++\n            if (this.timeShown >= 20) {\n                this.show = !this.show\n                this.timeShown = 0\n                this.timesFlashed++\n            }\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if(this.show) {\n            const WIDTH = 500\n            const HEIGHT = 500\n            ctx.drawImage(ASSET_MANAGER.getAsset('./assets/checkmark.png'), this.x - (WIDTH / 2), this.y - (HEIGHT / 2), WIDTH, HEIGHT);\n        }\n    }\n}","import { ASSET_MANAGER } from \"src/main.js\";\nimport ProgressBar from \"./progressBar.js\";\nimport { PotTop, PotTopOutside } from \"./pot.js\";\nimport RiceGrain from \"./riceGrain.js\";\nimport RotateIcon from \"./rotate.js\";\nimport Hand from \"./hand.js\";\nimport Checkmark from \"./checkmark.js\";\nimport Scene from \"src/scene.js\";\nimport GameObject from \"src/gameObject.js\";\nimport GameEngine from \"src/gameEngine.js\";\n\nconst WIDTH = 1024\nconst HEIGHT = 768\n\nconst POT_RADIUS = 250\n\nexport class WashThatRiceScene extends Scene {\n    game: GameEngine;\n    x: number;\n    y: number;\n    spritesheet: HTMLImageElement;\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game;\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/backgrounds/Station_Background.png\");\n        this.x = x;\n        this.y = y;\n    }\n\n    initalizeScene() {\n        super.addGameObject(new Background(this.game, 0, 0));\n\n        super.addGameObject(new PotTop(this.game, (WIDTH / 2), (HEIGHT / 2)));\n\n        super.addGameObject(new ProgressBar(this.game, 0, HEIGHT - 20, 1024, 20));\n    \n        \n        let amountOfGrains = 2;\n        for(let distance = 0; distance < POT_RADIUS; distance += 20) {\n            for(let angle = 0; angle < Math.PI * 2; angle += Math.PI * 2 / amountOfGrains) {\n                let rice = new RiceGrain(this.game, angle, distance, (WIDTH / 2), (HEIGHT / 2));\n                super.addGameObject(rice);\n            }\n            amountOfGrains += 10;\n        }\n        \n        super.addGameObject(new PotTopOutside(this.game, (WIDTH / 2), (HEIGHT / 2)));\n    \n        super.addGameObject(new RotateIcon(this.game, (WIDTH / 2), (HEIGHT / 2)));\n        \n        super.addGameObject(new Hand(this.game, 0, 0));\n        \n        super.addGameObject(new Checkmark(this.game, ASSET_MANAGER, (WIDTH / 2), (HEIGHT / 2)));\n    }\n}\n\nclass Background extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    spritesheet: HTMLImageElement;\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/backgrounds/Station_Background.png\");\n    };\n\n    update() {\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.spritesheet, 0, 0);\n    };\n}\n\n\n","import GameObject from \"src/gameObject.js\";\n\nexport default class TimerBar extends GameObject {\n    constructor(gameEngine, totalTime) {\n        super(gameEngine);\n        this.gameEngine = gameEngine;\n        this.totalTime = totalTime; \n        this.elapsedTime = 0; \n        this.isCooking = false; \n        this.isDone = false; \n        this.result = null; \n\n        \n        this.perfectStart = this.totalTime * 0.8;\n        this.perfectEnd = this.totalTime;\n\n        this.x = 237; // X \n        this.y = 650; // Y \n        this.width = 550; // Width \n        this.height = 20; // Height\n    }\n\n    \n    start() {\n        if (!this.isCooking && !this.isDone) {\n            this.isCooking = true;\n            this.elapsedTime = 0;\n            this.result = null;\n            //console.log(\"TimerBar started!\"); \n        }\n    }\n\n    \n    stop() {\n        if (this.isCooking) {\n            this.isCooking = false;\n            this.isDone = true;\n\n            // Determine the result based on elapsed time\n            if (this.elapsedTime < this.perfectStart) {\n                this.result = \"undercooked\";\n            } else if (this.elapsedTime >= this.perfectStart && this.elapsedTime <= this.perfectEnd) {\n                this.result = \"perfect\";\n                const currentData = this.game.getSharedDataByKey(\"riceCooker\");\n                const newAmount = currentData ? currentData.amount + 5 : 5;\n                this.game.addSharedData(\"riceCooker\", {amount: newAmount});\n                setTimeout(() => {\n                    this.game.sceneManager!.loadScene(\"rice\")\n                }\n                , 2000)\n            } else {\n                this.result = \"overcooked\";\n            }\n\n            //console.log(`Cooking stopped! Result: ${this.result}`); \n        }\n    }\n\n    update() {\n        if (this.isCooking) {\n            this.elapsedTime += this.gameEngine.clockTick;\n\n            // Automatically stop if time exceeds totalTime\n            if (this.elapsedTime >= this.totalTime) {\n                this.stop();\n            }\n        }\n    }\n\n    draw(ctx) {\n        \n        ctx.fillStyle = \"lightgray\";\n        ctx.fillRect(this.x, this.y, this.width, this.height);\n\n        \n        const progressWidth = (this.elapsedTime / this.totalTime) * this.width;\n        ctx.fillStyle = \"blue\";\n        ctx.fillRect(this.x, this.y, progressWidth, this.height);\n\n        \n        const perfectStartX = this.x + (this.perfectStart / this.totalTime) * this.width;\n        const perfectEndX = this.x + (this.perfectEnd / this.totalTime) * this.width;\n        ctx.fillStyle = \"rgba(0, 255, 0, 0.3)\"; // Semi-transparent green\n        ctx.fillRect(perfectStartX, this.y, perfectEndX - perfectStartX, this.height);\n\n        \n        if (this.isDone) {\n            ctx.fillStyle = \"black\";\n            ctx.font = \"16px Arial\";\n            ctx.fillText(`Result: ${this.result}`, this.x, this.y + this.height + 20);\n        }\n    }\n}","import GameObject from \"src/gameObject.js\";\nimport { ASSET_MANAGER } from \"src/main.js\";\nimport TimerBar from \"./timerBar.js\";\nimport GameEngine from \"src/gameEngine.js\";\n\nexport default class RiceCooker extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    w: number;\n    h: number;\n\n    constructor(game: GameEngine) {\n        super(game);\n        this.game = game;\n        this.x = 237;\n        this.y = 100;\n        this.w = 550;\n        this.h = 525;\n\n        this.clicked = false;\n    }\n\n    onMouseDown(e: MouseEvent) {\n        if (this.isClicked(e.x, e.y)) {\n            this.handleClick();\n        }\n    }\n\n    onMouseUp(e: MouseEvent) {\n        if(this.isClicked(e.x, e.y)) {\n            this.handleClick();\n        }\n    }\n\n    isClicked(mouseX: number, mouseY: number) {\n        return (\n            mouseX >= this.x &&\n            mouseX <= this.x + this.w &&\n            mouseY >= this.y &&\n            mouseY <= this.y + this.h\n        );\n    }\n\n    handleClick() {\n        const timerBar = this.game.entities.find(entity => entity instanceof TimerBar);\n\n        if (timerBar) {\n            if (!this.clicked) {\n                this.clicked = true;\n                timerBar.start();\n                //console.log(\"RiceCooker clicked! Timer started.\");\n            } else {\n                this.clicked = false;\n                timerBar.stop();\n                //console.log(\"RiceCooker clicked again! Timer stopped.\");\n            }\n        }\n    }\n\n    update() {\n        \n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        //console.log(\"RiceCooker draw method called\");\n        const off = ASSET_MANAGER.getAsset(\"./assets/objects/RiceCooker_Off.png\") as HTMLImageElement;\n        const on = ASSET_MANAGER.getAsset(\"./assets/objects/RiceCooker_On.png\") as HTMLImageElement;\n\n        ctx.drawImage(off, this.x, this.y, this.w, this.h);\n\n        if (this.clicked) {\n            ctx.drawImage(on, this.x, this.y, this.w, this.h);\n            ctx.strokeStyle = \"red\";\n            ctx.lineWidth = 3;\n            ctx.strokeRect(this.x, this.y, this.w, this.h);\n        }\n    }\n}","import RiceCooker from \"./ricecooker.js\";\nimport TimerBar from \"./timerBar.js\";\nimport { ASSET_MANAGER } from \"src/main.js\";\nimport Scene from \"src/scene.js\";\nimport GameEngine from \"src/gameEngine.js\";\nimport GameObject from \"src/gameObject.js\";\n\n\nexport class DontBurnRiceScene extends Scene {\n    game: GameEngine;\n    x: number;\n    y: number;\n    \n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n    };\n\n    initalizeScene() {\n        this.addGameObject(new Background(this.game, 0, 0));\n        let timeBar = new TimerBar(this.game, 10);\n        let riceCooker = new RiceCooker(this.game);\n        this.addGameObject(riceCooker);\n        this.addGameObject(timeBar);\n\n    }\n}\n\nclass Background extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    spritesheet: HTMLImageElement;\n    \n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/backgrounds/Minigame_Background.png\") as HTMLImageElement;\n    };\n\n    update() {\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.spritesheet, 0, 0);\n    };\n}\n","import GameEngine from \"src/gameEngine\";\nimport GameObject from \"src/gameObject.js\";\nimport { ASSET_MANAGER } from \"src/main.js\";\n\nexport default class Pot extends GameObject {\n    game: GameEngine;\n    liters: number;\n    spritesheet: HTMLImageElement;\n    width: number;\n    height: number;\n    x: number;\n    y: number;\n    \n    constructor(game: GameEngine) {\n        super(game);\n        this.game = game;\n        this.liters = 0;\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/objects/Pot_Animation.png\") as HTMLImageElement;\n        this.width = 380;\n        this.height = 300;\n        this.x = 322;\n        this.y = 386;\n    };\n\n    update() {\n        \n\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if (this.liters == 0) {\n            ctx.drawImage(this.spritesheet, 0, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 100) {\n            ctx.drawImage(this.spritesheet, 380, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 200) {\n            ctx.drawImage(this.spritesheet, 760, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 300) {\n            ctx.drawImage(this.spritesheet, 1140, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 400) {\n            ctx.drawImage(this.spritesheet, 1520, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 500) {\n            ctx.drawImage(this.spritesheet, 1900, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 600) {\n            ctx.drawImage(this.spritesheet, 2280, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 700) {\n            ctx.drawImage(this.spritesheet, 2660, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 800) {\n            ctx.drawImage(this.spritesheet, 3040, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else {\n            ctx.drawImage(this.spritesheet, 3420, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        }\n    };\n}\n","import Pot from \"./pot.js\";\nimport Faucet from \"./faucet.js\";\nimport { ASSET_MANAGER } from \"src/main.js\";\nimport Scene from \"src/scene.js\";\nimport GameObject from \"src/gameObject.js\";\nimport GameEngine from \"src/gameEngine.js\";\n\n\nexport class FillThePotScene extends Scene {\n    game: GameEngine;\n    x: number;\n    y: number;\n    \n    constructor(game: GameEngine, x: number, y: number) {\n        super(game)\n        this.game = game;\n        this.x = x;\n        this.y = y;\n    };\n\n    initalizeScene() {\n        this.addGameObject(new Background(this.game, 0, 0));\n        const pot = new Pot(this.game)\n        this.addGameObject(pot);\n        this.addGameObject(new Faucet(this.game, pot));\n    }\n}\n\nclass Background extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    spritesheet: HTMLImageElement;\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/backgrounds/FillThePot_Background.png\") as HTMLImageElement;\n    };\n\n    update() {\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.spritesheet, 0, 0);\n    };\n}","export class Order {\n    id: number;\n    static idCounter = 1;\n    ingredients: Ingredient[];\n    sides: Side[];\n    condiment: Condiment | null;\n    completed: boolean;\n    \n    constructor(ingredients: Ingredient[], sides: Side[], condiment: Condiment | null) {\n        if(ingredients.length === 0 && sides.length === 0 && condiment === null) {\n            this.id = -1; // Blank order for player to make\n        } else {\n            this.id = Order.idCounter++;\n        }\n        this.ingredients = ingredients;\n        this.sides = sides;\n        this.condiment = condiment;\n        this.completed = false;\n    }\n}\n\nexport default class Ingredient {\n    name: string;\n    img: string;\n\n    constructor(type: string, img: string = '') {\n        this.name = type\n        this.img = img\n    }\n}\n\nexport class Side {\n    name: string;\n    type: Ingredient[];\n    \n    constructor(name: string, type: Ingredient[]) {\n        this.name = name;\n        this.type = type;\n    }\n}\n\nclass Condiment {\n    type: string;\n\n    constructor(type: string) {\n        this.type = type\n    }\n}\n\nexport const NORI = new Ingredient('nori', './assets/objects/Nori.png');\nexport const RICE = new Ingredient('rice', './assets/objects/Rice.png');\nexport const RICE_CARRY = './assets/objects/Rice_Cooked.png';\n\nconst AVOCADO = new Ingredient('avocado', './assets/assembly/avocado.png');\nconst CRAB = new Ingredient('crab', './assets/assembly/crab.png');\nconst CUCUMBER = new Ingredient('cucumber', './assets/assembly/cucumber.png');\nconst OCTOPUS = new Ingredient('octopus', './assets/assembly/octopus.png');\nconst SALMON = new Ingredient('salmon', './assets/assembly/salmon.png');\nconst TUNA = new Ingredient('tuna', './assets/assembly/tuna.png');\nconst UNI = new Ingredient('uni', './assets/assembly/uni.png');\nconst TAMAGO = new Ingredient('tamago', './assets/assembly/tamago.png');\n\nexport const WRAP = [\n    NORI, RICE\n]\n\nexport const FILLINGS = [\n    AVOCADO, CRAB, CUCUMBER, OCTOPUS, SALMON, TUNA, UNI, TAMAGO\n]\n\n\n// rolls\nexport const CALIFORNIA_ROLL = [\n    NORI,\n    RICE,\n    CRAB,\n    AVOCADO\n]\n\nexport const SPICY_TUNA_ROLL = [\n    NORI,\n    RICE,\n    TUNA,\n]\n\nexport const ALASKAN_ROLL = [\n    NORI,\n    RICE,\n    AVOCADO,\n    CRAB,\n    SALMON,\n]\n\n// sides\nexport const KARAAGE = new Side('karaage', [\n    new Ingredient('chicken')\n]);\n\nexport const MISOSOUP = new Side('miso soup', [\n    new Ingredient('miso'),\n    new Ingredient('green onion'),\n    new Ingredient('tofu')\n]);\n\nexport const EDAMAME = new Side('edamame', [\n    new Ingredient('edamame')\n]);\n\nexport const GYOZA = new Side('gyoza', [\n    new Ingredient('chicken'),\n    new Ingredient('green onions')\n]);\n\nexport const SIDES = [\n    KARAAGE,\n    MISOSOUP,\n    EDAMAME,\n    GYOZA\n]\n\n// condiments\nexport const WASABI = new Condiment('wasabi');\nexport const GINGER = new Condiment('ginger');\nexport const SOY = new Condiment('soy sauce');\n\nexport const CONDIMENTS = [\n    WASABI,\n    GINGER,\n    SOY\n]","import GameState from \"src/gameState\";\nimport { ASSET_MANAGER } from \"src/main\";\nimport Ingredient, { CONDIMENTS, Order, WRAP } from \"src/scenes/counter/food\";\n\nconst WIDTH = 200;\nconst HEIGHT = 360;\n\nconst SIDE_HEIGHT = 40\n\nconst LINES = 8\nconst LINE_HEIGHT = (HEIGHT - SIDE_HEIGHT) / LINES\n\nconst FOOD_WIDTH = LINE_HEIGHT\nconst FOOD_HEIGHT = FOOD_WIDTH\n\nexport default function drawTicket(ctx: CanvasRenderingContext2D, order: Order, x: number, y: number) {\n    ctx.font = \"20px Arial\";\n    ctx.textAlign = \"center\";\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(x, y, WIDTH, HEIGHT);\n    ctx.strokeStyle = \"black\";\n    ctx.fillStyle = \"#ff7f7f\";\n    if(order.id === -1) {\n        ctx.fillText(\"You made\", x + (WIDTH / 2), y + 25);\n    } else {\n        ctx.fillText(\"#\" + order.id, x + (WIDTH / 2), y + 25);\n    }\n    \n    ctx.fillStyle = \"white\";\n    for(let i = 2; i < LINES; i++) {\n        ctx.fillStyle = ctx.fillStyle === \"#ffffff\" ? \"#ff7f7f\" : \"#ffffff\";\n        ctx.fillRect(x, y + (i * LINE_HEIGHT), WIDTH, LINE_HEIGHT);\n    }\n    ctx.fillStyle = \"#ff9999\"\n    ctx.fillRect(x, y + (HEIGHT - SIDE_HEIGHT), WIDTH, SIDE_HEIGHT);\n    ctx.strokeRect(x, y + (HEIGHT - SIDE_HEIGHT), WIDTH, SIDE_HEIGHT);\n\n    ctx.strokeRect(x, y, WIDTH, HEIGHT);\n    \n    \n    let itemY = y + (LINE_HEIGHT * (LINES - 1))\n    const centerX = x + (WIDTH / 2)\n    ctx.fillStyle = \"black\";\n    order.ingredients.forEach((ingredient: Ingredient) => {\n        ctx.fillText(ingredient.name, centerX + FOOD_WIDTH, itemY + (LINE_HEIGHT / 2));\n        if(ingredient.name === \"rice\") {\n            ctx.fillStyle = \"gray\";\n            ctx.fillRect(centerX - FOOD_WIDTH, itemY, FOOD_WIDTH, FOOD_HEIGHT);\n            ctx.fillStyle = \"black\";\n        }\n        const sprite = ASSET_MANAGER.getAsset(ingredient.img) as HTMLImageElement;\n        ctx.drawImage(sprite, centerX - FOOD_WIDTH, itemY, FOOD_WIDTH, FOOD_HEIGHT); // Adjust for sprite height\n        itemY -= LINE_HEIGHT\n    });\n    let sideText = order.sides.length === 0 ? \"No sides\" : \"Sides: \"\n    order.sides.forEach((side) => {\n        sideText += side.name + \", \"\n    })\n    if(order.sides.length > 0) {\n        sideText = sideText.slice(0, -2)\n    }\n    ctx.fillStyle = \"black\";\n    ctx.textAlign = \"left\";\n    ctx.fillText(sideText, x + 6, y + (HEIGHT - (SIDE_HEIGHT / 2)));\n}","import GameObject from \"src/gameObject.js\";\nimport { ASSET_MANAGER } from \"src/main.js\";\nimport { Order, FILLINGS, WRAP, CONDIMENTS, SIDES } from \"./food.js\";\nimport { Button } from \"src/button.js\";\nimport GameEngine from \"src/gameEngine.js\";\nimport Scene from \"src/scene.js\";\nimport { randomIntRange } from \"src/util.js\";\nimport GameState from \"src/gameState.js\";\nimport drawTicket from \"src/hud/ticket.js\";\n\nexport default class Customer extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    yDrawOffset: number;\n    spritesheet: HTMLImageElement;\n    exclamationSprite: HTMLImageElement;\n    width: number;\n    height: number;\n    state: string;\n    order: Order | null;\n    okButton: Button | undefined;\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game, 'customer', true);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.yDrawOffset = 0;\n        this.spritesheet = ASSET_MANAGER.getAsset(this.randomCustomer()) as HTMLImageElement;\n        this.exclamationSprite = ASSET_MANAGER.getAsset(\"./assets/button/exclam.png\") as HTMLImageElement;\n        this.width = 400;\n        this.height = 600;\n        this.state = \"init\"\n        this.order = null;\n        this.addButton();\n        ASSET_MANAGER.playAsset('./assets/sounds/doorchime.mp3');\n        console.log(\"Customer created\");\n    };\n\n    update() {\n        let npc = this;\n        switch (this.state) {\n            case \"init\":\n                this.state = \"walking\";\n                \n                async function startWalk() {\n                    await npc.walkTo(100, 100);\n                    npc.state = \"waitingToOrder\";\n                }\n                startWalk();\n                break;\n            case \"walking\":\n                break;\n            case \"waitingToOrder\":\n                break;\n            case \"order\":\n                break;\n            case \"waitingToEat\":\n                break;\n            case \"leaving\":\n                this.state = \"walking\";\n                async function startWalk2() {\n                    await npc.walkTo(-400, 100);\n                    npc.removeFromWorld = true;\n                }\n                startWalk2();\n                break;\n            default:\n                break;\n        }\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if(this.game.options.debugging) {\n            ctx.strokeStyle = \"red\";\n            ctx.strokeRect(this.x, this.y, this.width, this.height);\n        }\n        ctx.drawImage(this.spritesheet, this.x, this.y + this.yDrawOffset, this.width, this.height);\n        switch (this.state) {\n            case \"init\":\n                break;\n            case \"walking\":\n                break;\n            case \"waitingToOrder\":\n                ctx.drawImage(this.exclamationSprite, this.x + (this.spritesheet.width / 2) - (this.exclamationSprite.width / 2) - 10, this.y - 30, 100, 100);\n                break;\n            case \"order\":\n                this.drawOrder(ctx);\n                break;\n            case \"waitingToEat\":\n                break;\n            default:\n                break;\n        }\n    };\n\n    drawOrder(ctx: CanvasRenderingContext2D) {\n        if (!this.order) return;\n        const orderX = 500\n        const orderY = 100\n        drawTicket(ctx, this.order, orderX, orderY);\n    }\n\n    async walkTo(x: number, y: number) {\n        let npc: Customer = this;\n        return new Promise((resolve) => {\n            let t = 0;\n            function step() {\n                const speed = 5;\n                const xDiff = Math.abs(npc.x - x);\n                const yDiff = Math.abs(npc.y - y);\n                const dx = x - npc.x;\n                const dy = y - npc.y;\n                const length = Math.sqrt(dx * dx + dy * dy);\n                const nx = dx / length;\n                const ny = dy / length;\n                const xChange = Math.min(nx * speed, xDiff);\n                const yChange = Math.min(ny * speed, yDiff);\n                if (npc.x !== x) {\n                    npc.x += xChange\n                }\n                if (npc.x !== x) {\n                    npc.y += yChange\n                }\n                if (npc.x === x && npc.y === y) {\n                    resolve(true);\n                    return;\n                }\n\n                npc.yDrawOffset = (Math.sin((Math.PI / 4) * t) * 10);\n                requestAnimationFrame(step);\n                t += 0.1;\n            }\n            step()\n        })\n        // let intervalID = setInterval(() => {\n        //     if(this.y === y) {\n        //         clearInterval(intervalID);\n        //         this.hasWalked = true;\n        //     }\n        //     if (this.y < y) {\n        //         this.y += 5;\n        //     }\n        //     if (this.y > y) {\n        //         this.y -= 5;\n        //     }\n        // }, 20);\n    }\n\n    displayOrder() {\n        this.order = this.randomOrder();\n    }\n\n    init() {\n        if (this.game.currentScene && this.okButton) this.game.currentScene.addGameObject(this.okButton);\n        if (this.state === \"order\" && this.okButton) {\n            this.okButton.restore()\n            this.okButton.hidden = false;\n            console.log(\"make not hidden\")\n        }\n        console.log(this.game.entities)\n        console.log(this.okButton)\n    }\n\n\n    onOkButton() {\n        if(!this.okButton) return;\n        console.log(\"OK button pressed\");\n        console.log(this.okButton);\n        this.okButton.hidden = true;\n        GameState.getInstance().addOrder(this, this.order!);\n        this.state = \"waitingToEat\";\n    }\n\n    addButton() {\n        console.log(\"Adding button\");\n        if(!this.game.currentScene) {\n            throw new Error(\"No current scene found\");\n        }\n        this.okButton = Button.rectButton(this.game, 750, 400, 100, 50, () => this.onOkButton(), \"OK\")\n        this.okButton.hidden = true;\n        if (this.game.currentScene) this.game.currentScene.addGameObject(this.okButton);\n    }\n\n    randomOrder() {\n        // Helper function to get random elements from an array\n        function getRandomElements(array: any[], count: number) {\n            let shuffled = array.slice().sort(() => 0.5 - Math.random()); // Shuffle the array\n            return shuffled.slice(0, count); // Pick the first 'count' elements\n        }\n\n        const numWrap = randomIntRange(2, WRAP.length);\n        const numIngredients = randomIntRange(1, 4);\n        const numSides = randomIntRange(0, 2);\n\n        const selectedWraps = getRandomElements(WRAP, numWrap);\n        const selectedIngredients = getRandomElements(FILLINGS, numIngredients);\n        const selectedCondiments = getRandomElements(CONDIMENTS, 1);\n        const selectedSides = getRandomElements(SIDES, numSides);\n\n        return new Order(\n            [...selectedWraps, ...selectedIngredients],\n            [ ...selectedSides], selectedCondiments[0]\n        );\n    }\n\n    randomCustomer() {\n        const customerNum = Math.floor(Math.random() * (5 - 0 + 1)) + 0;\n        return \"./assets/characters/Customer_\" + customerNum + \".png\";\n    }\n\n    onMouseDown(e: MouseEvent): void {\n        if (this.state === \"waitingToOrder\") {\n            if (e.x > this.x && e.x < this.x + this.width && e.y > this.y && e.y < this.y + this.height) {\n                this.displayOrder();\n                this.okButton!.hidden = false;\n                this.state = \"order\";\n            }\n        }\n    }\n\n}","import  Background  from \"src/background.js\";\nimport Customer from './customer.js';\nimport GameEngine from 'src/gameEngine.js';\nimport Scene from 'src/scene.js';\nimport { ASSET_MANAGER } from \"src/main.js\";\nimport GameObject from \"src/gameObject.js\";\nimport GameState from \"src/gameState.js\";\nimport Ingredient, { Order, Side } from \"./food.js\";\nimport { randomIntRange } from \"src/util.js\";\nimport drawTicket from \"src/hud/ticket.js\";\n\nexport class CounterScene extends Scene {\n    game: GameEngine;\n    x: number;\n    y: number;\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n    };\n\n    initalizeScene() { \n        this.addGameObject(new Background(this.game, \"./assets/backgrounds/Order_Background.png\"));\n        if(!this.addPersistantGameObject(\"customer\")) {\n            console.log(\"Did not find customer\");\n            this.addGameObject(new Customer(this.game, 500, 25));\n        }\n        const foreground = new Background(this.game, \"./assets/backgrounds/Order_Foreground.png\")\n        foreground.zIndex = 101;\n        this.addGameObject(foreground); \n        const customer = this.game.getPersistentGameObject(\"customer\") as Customer;\n        customer.init();\n        const orderWorkingOn = GameState.getInstance().getState('orderWorkingOn');\n        console.log(orderWorkingOn)\n        if (orderWorkingOn && orderWorkingOn.completed) {\n            console.log(\"Adding rating handler\")\n            this.addGameObject(new RatingHandler(this.game, 500, 25, customer));\n        }\n    \n    }\n\n    newCustomer() {\n        console.log(\"New Customer\");\n        const customer = new Customer(this.game, 700, 25)\n        customer.addButton();\n        this.addGameObject(customer);\n        GameState.getInstance().setState('orderWorkingOn', new Order([], [], null));\n        GameState.getInstance().setState('orders', []);\n    }\n\n    deload() {\n        super.deload();\n        const customer = this.game.getPersistentGameObject(\"customer\") as Customer;\n        if(customer.state === \"order\") {\n            console.log(\"missed ok button\")\n            customer.onOkButton();\n        }\n        \n    }\n}\n\nclass RatingHandler extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    rating: number;\n    customer: Customer;\n    state: string;\n\n    constructor(game: GameEngine, x: number, y: number, customer: Customer) {\n        super(game, 'rating');\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.rating = 0;\n        this.customer = customer;\n        this.state = \"judging\";\n        setTimeout(() => {\n            this.state = \"rating\";\n            this.rating = this.calculateRating();\n            console.log(\"Rating: \" + this.rating);\n        }, 2000);\n        setTimeout(() => {\n            this.state = \"done\";\n            let money = GameState.getInstance().getState('money');\n            const moneyToAdd = (randomIntRange(6, 11) * this.rating);\n            GameState.getInstance().setState('money', money + moneyToAdd);\n            console.log(\"Money to add: \" + moneyToAdd, this.rating);\n            this.game.addEntity(new MoneyAdd(this.game, this.customer.x + (this.customer.spritesheet.width / 2), this.customer.y));\n            this.customer.state = \"leaving\";\n            let scene = this.game.currentScene as CounterScene;\n            scene.newCustomer();\n        }, 3000);\n    }\n\n    update(): void {\n        //Call this when the customer has rated to reset the order\n        //this.state.orderWorkingOn = new Order([], [], null);\n    }\n\n    draw(ctx: CanvasRenderingContext2D): void {\n        ctx.font = \"72px Arial\";\n        ctx.fillStyle = \"black\";\n        ctx.textAlign = \"center\";\n        \n        switch(this.state) {\n            case \"judging\":\n                ctx.fillText(\"...\", this.customer.x + (this.customer.spritesheet.width / 2), this.customer.y + 60);\n                drawTicket(ctx, this.customer.order!, 500, 100);\n                drawTicket(ctx, GameState.getInstance().getState('orderWorkingOn')!, 750, 100);\n                break;\n            case \"rating\":\n                \n                if(this.rating >= 90) {\n                    ctx.fillStyle = \"green\";\n                } else if(this.rating >= 70) {\n                    ctx.fillStyle = \"yellow\";\n                } else {\n                    ctx.fillStyle = \"red\";\n                }\n                ctx.fillText(\"%\" + (this.rating * 100).toFixed(0), this.customer.x + (this.customer.spritesheet.width / 2), this.customer.y + 60);\n            default:\n                break;\n        }\n    }\n\n    calculateRating() {\n        let orderMade = GameState.getInstance().getState('orderWorkingOn')!\n        let ordered = this.customer.order!;\n        const ENTREE_P = 0.8;\n        const SIDE_P = 0.2;\n        let correctIngredients = 0;\n        let totalIngredients = ordered.ingredients.length;\n\n        ordered.ingredients.forEach((ingredient: Ingredient, index: number) => {\n            if (orderMade.ingredients[index] === ingredient) {\n                correctIngredients++;\n            }\n        });\n\n        let percentIngredientsCorrect = (correctIngredients / totalIngredients) || 1;\n        console.log(\"Ingredient Score: \" + percentIngredientsCorrect);\n\n        let correctSides = 0;\n        let totalSides = ordered.sides.length;\n\n        ordered.sides.forEach((side: Side, index: number) => {\n            if (orderMade.sides[index] === side) {\n                correctSides++;\n            }\n        });\n\n        let percentSidesCorrect = (correctSides / totalSides) || 1;\n        console.log(\"Side Score: \" + percentSidesCorrect);\n\n        let percentCorrect = (percentIngredientsCorrect * ENTREE_P) + (percentSidesCorrect * SIDE_P);\n        console.log(\"Total Score: \" + percentCorrect);\n        return percentCorrect;\n    }\n}\n\nclass MoneyAdd extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    sprite: HTMLImageElement;\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game, \"moneyAdd\", true);\n        this.game = game;\n        this.x = x\n        this.y = y;\n        this.width = 50;\n        this.height = 50;\n        this.sprite = ASSET_MANAGER.getAsset(\"./assets/objects/coin_add.png\") as HTMLImageElement;\n        this.zIndex = 100;\n        setTimeout(() => {\n            this.removeFromWorld = true;\n        }, 3000);\n    }\n\n    update(): void {\n        this.y -= 2;\n    }\n    draw(ctx: CanvasRenderingContext2D): void {\n        ctx.drawImage(this.sprite, this.x, this.y, this.width, this.height);\n    }\n\n}","import { ASSET_MANAGER } from \"src/main.js\";\nimport Background from \"src/background.js\";\nimport Scene from \"src/scene.js\";\nimport GameObject from \"src/gameObject.js\";\nimport { DnDButton } from \"src/button.js\";\nimport Ingredient, { NORI, Order, RICE, RICE_CARRY } from \"src/scenes/counter/food.js\";\nimport GameEngine from \"src/gameEngine\";\nimport GameState from \"src/gameState\";\n\nexport class RiceStationScene extends Scene {\n    game: GameEngine;\n\n    constructor(game: GameEngine) {\n        super(game);\n        this.game = game;\n    };\n\n    initalizeScene() {\n        super.addGameObject(new Background(this.game, \"./assets/backgrounds/Station_Background.png\"));\n\n        super.addGameObject(new BambooMat(this.game, 450, 375));\n\n        const riceCooker = new RiceCooker(this.game, 10, 10, 430, 430)\n        super.addGameObject(riceCooker);\n\n        const nori = new Nori(this.game, 500, 80, 450, 300)\n        super.addGameObject(nori);\n\n    }\n}\n\nclass RiceCooker extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    amount: number;\n    cookerClicked: boolean;\n    spritesheet: HTMLImageElement;\n    dnd!: DnDButton;\n\n    constructor(game: GameEngine, x: number, y: number, width: number, height: number) {\n        super(game, 'riceCooker');\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.amount = 1;\n        this.cookerClicked = false;\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/objects/RiceCooker.png\") as HTMLImageElement;\n        this.addButton();\n        super.loadSharedData();\n    }\n\n    addButton() {\n        this.dnd = DnDButton.transparentImageButton(this.game, this.x, this.y, this.width, this.height, RICE_CARRY, () => {\n            console.log(\"clicked on rice cooker\");\n            this.cookerClicked = true;\n        });\n        this.dnd.width = this.width;\n        this.dnd.height = this.height;\n        this.dnd.food = RICE;\n        this.dnd.id = 'ricesourcebuttons';\n        if (this.game.currentScene) this.game.currentScene.addGameObject(this.dnd);\n    }\n\n    update() {\n        if (this.cookerClicked) {\n\n            if (this.amount == 0) {\n                this.beginMinigame();\n                this.amount = 5;\n            }\n            this.amount--;\n            this.cookerClicked = false;\n        }\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.spritesheet, this.x, this.y);\n        if (this.game.options.debugging) {\n            ctx.strokeStyle = \"red\";\n            //ctx.strokeRect(this.x, this.y, this.width, this.height);\n        }\n        ctx.fillStyle = \"red\";\n        ctx.font = \"36px Arial\";\n        ctx.textAlign = \"center\";\n        let amountString = this.amount.toString();\n        if (this.amount == 0) {\n            amountString = \"Needs Refill!\";\n        }\n        ctx.fillText(amountString, this.x + (this.spritesheet.width / 2), this.y + 200);\n    };\n\n    beginMinigame() {\n        const minigame = Math.floor(Math.random() * 3);\n        console.log(minigame);\n        if (minigame == 0) {\n            this.game.getSceneManager().loadScene(\"fill\");\n            console.log(\"minigame 1\")\n        } else if (minigame == 1) {\n            this.game.getSceneManager().loadScene(\"burn\");\n            console.log(\"minigame 2\")\n        } else if (minigame == 2) {\n            this.game.getSceneManager().loadScene(\"wash\");\n            console.log(\"minigame 3\")\n        }\n    }\n\n    deload(): void {\n        super.deload();\n        this.game.addSharedData(\"riceCooker\", { amount: this.amount });\n    }\n}\n\nclass Nori extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    noriSourceSprite: HTMLImageElement;\n    dnd!: DnDButton;\n\n    constructor(game: GameEngine, x: number, y: number, width: number, height: number) {\n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.noriSourceSprite = ASSET_MANAGER.getAsset(\"./assets/objects/Nori_Source.png\") as HTMLImageElement;\n        this.addButton();\n    };\n\n    addButton() {\n        this.dnd = DnDButton.transparentImageButton(this.game, this.x, this.y, this.width, this.height, NORI.img, () => { });\n        this.dnd.width = this.width;\n        this.dnd.height = this.height;\n        this.dnd.food = NORI;\n        if (this.game.currentScene) this.game.currentScene.addGameObject(this.dnd);\n    }\n\n    update() {\n\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.noriSourceSprite, this.x, this.y);\n\n    };\n}\n\nclass BambooMat extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    spritesheet: HTMLImageElement;\n    sliding: boolean;\n    disabled: boolean;\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game, \"bambooMat\");\n        this.game = game;\n        this.x = x;\n        this.y = y\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/objects/BambooMat.png\") as HTMLImageElement;\n        this.sliding = false;\n        this.disabled = false;\n        super.loadSharedData();\n    };\n\n    update() {\n        \n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if(this.disabled) return;\n\n        ctx.drawImage(this.spritesheet, this.x, this.y);\n        const centerX = this.x + (this.spritesheet.width / 2)\n        const centerY = this.y + (this.spritesheet.height / 2)\n\n        // Draw the ingredients on top of the bamboo mat\n        const orderWorkingOn = GameState.getInstance().getState('orderWorkingOn');\n        if (!orderWorkingOn) return;\n        orderWorkingOn.ingredients.forEach(element => {\n            const img = ASSET_MANAGER.getAsset(element.img) as HTMLImageElement;\n            ctx.drawImage(img, this.x, this.y);\n            // ctx.drawImage(img, centerX - (img.width / 2) + element.xOffset, centerY - (img.height / 2) + element.yOffset, img.width, img.height);\n        });\n\n        if (this.sliding) return;\n        if (orderWorkingOn.ingredients.length == 2) {\n            setTimeout(() => {\n                let interval = setInterval(() => {\n                    this.x += 10\n                    if (this.x > 1024) {\n                        this.removeFromWorld = true\n                        this.disabled = true\n                        this.game.addSharedData(\"bambooMat\", { disabled: true });\n                        clearInterval(interval)\n                    }\n                }, 10)\n            }, 1000)\n            this.sliding = true\n            this.game.addSharedData(\"bambooMat\", { sliding: true });\n            GameState.getInstance().getState('stationsComplete').rice = true;\n            return;\n        }\n    };\n\n    onDnDDrop(e: CustomEvent) {\n        if(this.disabled || this.sliding) return;\n        // console.log(e);\n        // console.log(e.detail)\n        // console.log(e.detail.y);\n        if (e.detail.x >= this.x && e.detail.x <= this.x + this.spritesheet.width &&\n            e.detail.y >= this.y && e.detail.y <= this.y + this.spritesheet.height) {\n            console.log(\"dropped in food bottom\");\n            let orderWorkingOn = GameState.getInstance().getState('orderWorkingOn')\n            if (!orderWorkingOn) {\n                let newOrder = new Order([], [], null);\n                orderWorkingOn = GameState.getInstance().setState('orderWorkingOn', newOrder);\n            }\n            orderWorkingOn!.ingredients.push(e.detail.button.food);\n        }\n    }\n}\n","import Background from 'src/background.js';\nimport Scene from 'src/scene.js';\nimport { ASSET_MANAGER } from \"src/main.js\";\nimport { Button, DnDButton } from \"src/button.js\";\nimport { FILLINGS } from \"src/scenes/counter/food.js\";\nimport GameObject from 'src/gameObject.js';\nimport GameEngine from 'src/gameEngine';\nimport GameState from 'src/gameState';\n\nexport class RiceAssemblyScene extends Scene {\n    game: GameEngine;\n    foodBottom: FoodBottom | undefined;\n    rollButton: Button | undefined;\n\n    \n    constructor(game: GameEngine) {\n        super(game);\n        this.game = game;\n    };\n\n    initalizeScene() {\n\n        this.addGameObject(new Background(this.game, \"./assets/backgrounds/Station_Background.png\"));\n        this.addGameObject(new Background(this.game, \"./assets/assembly/case.jpg\", 0, 150, 1024, 197));\n        const stationsComplete = GameState.getInstance().getState('stationsComplete');\n        if(stationsComplete.rice && !stationsComplete.roll) {\n            this.foodBottom = new FoodBottom(this.game, 227, 375, 570, 300);\n            this.addGameObject(this.foodBottom);\n        }\n        const binWidth = 80;\n        const binHeight = 80;\n        const foods = FILLINGS;\n        let curFood = 0;\n        let y = 240;\n        for(let x = 0; x < foods.length; x++) {\n            const foodBin = new FoodBin(this.game, foods[curFood], 10 + x * (binWidth + 4), y, binWidth, binHeight);\n            this.addGameObject(foodBin);\n            foodBin.addButton(); // add the button to the scene after the bin is added\n            curFood++;\n        }\n\n        this.rollButton = Button.imageButton(this.game, 750, 475, \"./assets/button/Roll_Button2.png\", () => {\n            console.log(\"Clicked roll button\");\n            this.roll();\n        });\n        // this.rollButton = Button.rectButton(this.game, 0, 0, 300, 300, () => {\n        //     console.log(\"Clicked roll button\");\n        //     this.roll();\n        // }, \"ROLL\");\n        this.rollButton.hidden = true;\n        this.addGameObject(this.rollButton);\n        \n    }\n\n    roll() {\n        console.log(\"rolling\");\n        this.rollButton!.removeFromWorld = true;\n        this.foodBottom!.rolled = true;\n        this.game.addSharedData('foodBottom', {rolled: true});\n    }\n}\n\nclass FoodBin extends GameObject {\n    game: GameEngine;\n    food: {name: string, img: string};\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    dnd: DnDButton | undefined;\n\n    constructor(game: GameEngine, food: {name: string, img: string}, x: number, y: number, width: number, height: number) {\n        super(game, 'foodbin');\n        this.game = game;\n        this.food = food;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    };\n\n    addButton() {\n        this.dnd = DnDButton.transparentImageButton(this.game, this.x, this.y, this.width, this.height, this.food.img, () => {\n            console.log(\"clicked on food bin\", this.food);\n        });\n        this.dnd.width = this.width;\n        this.dnd.height = this.height;\n        this.dnd.food = this.food;\n        if(this.game.currentScene) this.game.currentScene.addGameObject(this.dnd);\n    }\n\n    update() {\n        \n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        // ctx.drawImage(ASSET_MANAGER.getAsset(\"./assets/assembly/tray.jpg\") as HTMLImageElement, this.x, this.y, this.width, this.height);\n        ctx.drawImage(ASSET_MANAGER.getAsset(\"./assets/trays/tray_\" + this.food.name + \".png\") as HTMLImageElement, this.x, this.y, this.width, this.height);\n        \n        const bottomWidth = 80\n        const bottomHeight = 35\n        const xOffset = this.width - bottomWidth\n        const yOffset = this.height - (bottomHeight)\n        const xCount = 3\n        const xSpace = bottomWidth / xCount\n        const yCount = 3\n        const ySpace = bottomHeight / yCount;\n        // for(let row = 0; row < yCount; row++) {\n        //     for(let col = 0; col < xCount; col++) {\n        //         ctx.drawImage(ASSET_MANAGER.getAsset(this.food.img) as HTMLImageElement, this.x + xOffset + (xSpace * col), this.y + (yOffset / 2) - 5 + (ySpace * row))\n        //     }\n        // }\n    };\n}\n\nconst UNROLLED_HEIGHT = 120\nconst ROLLED_HEIGHT = 75\n\nclass FoodBottom extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    rolled: boolean;\n    chops: number;\n    cut: boolean;\n    sliding: boolean;\n\n    constructor(game: GameEngine, x: number, y: number, width: number, height: number) {\n        super(game, 'foodBottom');\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.rolled = false;\n        this.chops = 0;\n        this.cut = false;\n        this.sliding = false;\n        this.rollx = 0;\n        super.loadSharedData()\n    };\n\n    update() {\n        if(!this.rolled) return;\n        if(this.chops >= 15) {\n            this.cut = true\n            GameState.getInstance().getState('stationsComplete').roll = true;\n            console.log(\"Cut sushi\");\n        }\n        if(this.game.down) {\n            if(this.game.timer!.gameTime - this.game.previousMousePositionsLatest > 0.1) {\n                this.game.previousMousePositions = []\n            }\n            if(this.game.previousMousePositions.length === 15) {\n                this.game.previousMousePositions.forEach((pos: { x: number, y: number }, index: number) => {\n                    if(pos.x > this.x - (this.width / 2) && pos.x < this.x + (this.width / 2) && pos.y > this.y && pos.y < this.y + ROLLED_HEIGHT) {\n                        this.chops += 1\n                    }\n               })\n            }\n        } else {\n            this.game.previousMousePositions = []\n        }\n        \n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        let currentOrder = GameState.getInstance().getState('orderWorkingOn');\n        if(!currentOrder) return;\n        if (currentOrder?.ingredients.length > 0) {\n            if(this.cut) {\n                const img = ASSET_MANAGER.getAsset(\"./assets/objects/Roll_Cut.png\") as HTMLImageElement;\n                ctx.drawImage(img, this.rollx, 100);\n                if(this.sliding) return;\n                setTimeout(() => {\n                    setInterval(() => {\n                        this.rollx += 10\n                        if(this.rollx > 1024) {\n                            this.removeFromWorld = true\n                        }\n                    }, 10)\n                }, 1000)\n                this.sliding = true\n                return;    \n            }\n            if(this.rolled) {\n                const img = ASSET_MANAGER.getAsset(\"./assets/objects/Roll.png\") as HTMLImageElement;\n                ctx.drawImage(img, 0, 100);\n                if(this.game.down) {\n                    ctx.beginPath()\n                    this.game.previousMousePositions.forEach((pos: { x: number; y: number; }, index: number) => {\n                        if(index === 0) {\n                            ctx.moveTo(pos.x, pos.y);\n                        } else {\n                            ctx.lineTo(pos.x, pos.y);\n                        }\n                    })\n                    ctx.stroke()\n                }\n                return;\n            }\n        \n            const bambooMatImg = ASSET_MANAGER.getAsset(\"./assets/objects/BambooMat.png\") as HTMLImageElement;\n            ctx.drawImage(bambooMatImg, this.x, this.y);\n\n            //Draw rice and nori\n            currentOrder.ingredients.filter(element => element.name === 'rice' || element.name === 'nori').forEach(element => {\n                if (element.name == 'rice' || element.name == 'nori') {\n                    const img = ASSET_MANAGER.getAsset(element.img) as HTMLImageElement;\n                    ctx.drawImage(img, this.x, this.y);\n                }\n            })\n            //Draw fillings\n            currentOrder.ingredients.filter(element => element.name != 'rice' && element.name != 'nori').forEach(element => {\n                const img = ASSET_MANAGER.getAsset(element.img) as HTMLImageElement;\n                const xOffset = 50;\n                const spacing = (this.width - xOffset - 130) / 4;\n                for(let i = 0; i < 4; i++) {\n                    ctx.drawImage(img, this.x + (i * spacing) + xOffset, this.y + 75, img.width, img.height);\n                } \n            });\n        }\n    \n    };\n    \n\n    onDnDDrop(e: CustomEvent) {\n        let orderWorkingOn = GameState.getInstance().getState('orderWorkingOn');\n        if(!orderWorkingOn) return;\n        if(e.detail.x >= this.x && e.detail.x <= this.x + this.width && e.detail.y >= this.y && e.detail.y <= this.y + this.height && orderWorkingOn?.ingredients.length > 0) {\n            console.log(\"dropped in food bottom\");\n            orderWorkingOn.ingredients.push(e.detail.button.food);\n            e.detail.button.game.currentScene.rollButton.hidden = false;\n        }\n    }\n}","import Scene from '../../scene.js';\nimport GameObject from '../../gameObject.js';\nimport { ASSET_MANAGER, sceneManage } from \"../../main.js\";\nimport { Button, DnDButton } from \"../../button.js\";\nimport GameState from 'src/gameState.js';\nimport Ingredient from \"src/scenes/counter/food.js\";\nimport GameEngine from 'src/gameEngine.js';\n\n\nexport class SidesAssemblyScene extends Scene {\n  game: GameEngine;\n  x: number;\n  y: number;\n  foodMessage: string | null;\n  microwave: undefined | Microwave;\n  completeButton: Button | undefined;\n\n  constructor(game: GameEngine, x: number, y: number) {\n    super(game);\n    this.game = game;\n    this.x = x;\n    this.y = y;\n    this.foodMessage = null;\n  };\n\n  initalizeScene() {\n    this.addGameObject(new Background(this.game));\n    const stationsComplete = GameState.getInstance().getState('stationsComplete');\n    if(stationsComplete.roll) {\n      this.addGameObject(new FoodTray(this.game, 225, 325, 175, 100));\n    }    \n\n    this.microwave = new Microwave(this.game, 200, 0, 600, 300);\n    this.addGameObject(this.microwave);\n    this.microwave.addButtons();\n\n    const condiments = [\n      {\n        name: \"soy sauce\",\n        img: \"./assets/sides/soysauce.png\",\n        x: 800,\n        y: 300\n      },\n      {\n        name: \"ginger\",\n        img:  \"./assets/sides/Ginger.png\",\n        x: 900,\n        y: 300\n      },\n      {\n        name: \"wasabi\",\n        img:  \"./assets/sides/wasabi.png\",\n        x: 850,\n        y: 370\n      }\n    ];\n\n    condiments.forEach(item => {\n      this.addGameObject(new DraggableObject(this.game, item, item.x, item.y, 80, 80));\n    })\n\n    this.completeButton = Button.rectButton(this.game, 800, 500, 200, 50, () => {\n      const orderWorkingOn = GameState.getInstance().getState('orderWorkingOn');\n      orderWorkingOn!.completed = true;\n      GameState.getInstance().resetStationCompletion(this.game);\n      sceneManage.loadScene(\"order\");\n    }, \"Completed\");\n    this.addGameObject(this.completeButton);\n  \n  }\n}\n\nclass Background extends GameObject {\n  game: GameEngine;\n  sprite: HTMLImageElement;\n\n  constructor(game: GameEngine) {\n      super(game);\n      this.game = game;\n      this.sprite = ASSET_MANAGER.getAsset(\"./assets/backgrounds/Station_Background.png\") as HTMLImageElement;\n  }\n\n  update() {}\n\n  draw(ctx: CanvasRenderingContext2D) {\n      ctx.drawImage(this.sprite, 0, 0, 1024, 683);\n  }\n}\n\nclass Microwave extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    recipes: {\n        name: string;\n        ingredients: string[];\n        img: string;\n    }[]\n    cookButton: Button | null;\n    ingredientButtons: Button[] | undefined;\n    ingredients: Ingredient[] = [];\n    microwaveSprite: HTMLImageElement;\n\n    constructor(game: GameEngine, x: number, y: number, width: number, height: number) {\n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.recipes = [\n            { name: \"Miso Soup\", ingredients: [\"Miso Paste\", \"Tofu\", \"Green Onions\"], img: \"./assets/sides/MisoSoup.png\" },\n            { name: \"Edamame\", ingredients: [\"Edamame\"], img: \"./assets/sides/cookedEdamame.png\" },\n            { name: \"Gyoza\", ingredients: [\"Green Onions\", \"Chicken\"], img: \"./assets/sides/Gyoza.png\" },\n            { name: \"Karaage\", ingredients: [\"Chicken\"], img: \"./assets/sides/Karaage.png\" }\n        ];\n\n        this.cookButton = null;\n\n        this.microwaveSprite = ASSET_MANAGER.getAsset(\"./assets/sides/microwaveYuh.png\") as HTMLImageElement;\n    }\n\n    addButtons() {\n        let xStart = 585;\n        let yStart = 80;\n        const buttonSize = 80;\n        const xSpacing = 100;\n        const ySpacing = 65;\n        const columns = 2;\n\n        this.ingredientButtons = [];\n\n        const ingredientList = [\n            { name: \"Miso Paste\", img: \"./assets/sides/MisoBin.png\" },\n            { name: \"Edamame\", img: \"./assets/sides/edamame.png\" },\n            { name: \"Tofu\", img: \"./assets/sides/Tofu.png\" },\n            { name: \"Green Onions\", img: \"./assets/sides/greenonions.png\" },\n            { name: \"Chicken\", img: \"./assets/sides/chicken.png\" }\n        ];\n\n        for (let i = 0; i < ingredientList.length; i++) {\n            let ingredient = ingredientList[i];\n\n\n            let col = i % columns;\n            let row = Math.floor(i / columns);\n\n            console.log(`Placing ${ingredient.name} at col=${col}, row=${row}`);\n\n            const inButton = Button.rectButtonImage(\n                this.game,\n                xStart + col * xSpacing,\n                yStart + row * ySpacing,\n                buttonSize, buttonSize,\n                ingredient.img,\n                () => {\n                    console.log(`Clicked ${ingredient.name}`);\n                    this.foodMessage = `${ingredient.name} added!`;\n                    this.addIngredient(new Ingredient(ingredient.name));\n                }\n            );\n\n            this.ingredientButtons.push(inButton);\n            this.game.currentScene!.addGameObject(inButton);\n        }\n\n        const cookButtonX = 687;\n        const cookButtonY = 220;\n\n        this.cookButton = Button.rectButton(\n            this.game,\n            cookButtonX, cookButtonY, // Position\n            75, 75, // Size\n            () => { this.cookSideDish(); }, // onClick function\n            //\"red\", // Background color\n            \"Cook!\" // Button text\n        );\n\n        this.cookButton.disabled = true;\n        this.game.currentScene!.addGameObject(this.cookButton);\n    }\n\n    addIngredient(ingredient: Ingredient) {\n        if (!ingredient || !ingredient.name) {\n            console.error(\"invalid ingredient added!\");\n            return;\n        }\n        this.ingredients.push(ingredient);\n        console.log(`added ${ingredient.name} to microwave.`);\n    }\n\n    cookSideDish() {\n        console.log(\"cooking!\");\n\n        const ingredientNames = this.ingredients.map((ing: Ingredient) => ing.name);\n\n        for (let recipe of this.recipes) {\n            if (recipe.ingredients.every(req => ingredientNames.includes(req)) &&\n                ingredientNames.length === recipe.ingredients.length) {\n\n                console.log(`${recipe.name} created`);\n                this.foodMessage = `${recipe.name} created!`;\n                console.log(this.foodMessage);\n\n                this.cookedSide = new DraggableObject(\n                    this.game,\n                    { name: recipe.name, img: recipe.img },\n                    317,\n                    100,\n                    100,\n                    100\n                );\n  \n                this.game.currentScene!.addGameObject(this.cookedSide);\n                this.ingredients = []; // clears microwave after cooking\n\n                return;\n            }\n        }\n\n        console.log(\"not matching recipe\");\n        this.foodMessage = `No matching recipe!`;\n        console.log(this.foodMessage);\n        this.ingredients = [];\n    }\n\n    update() {\n        if (this.cookButton) {\n            this.cookButton.disabled = this.ingredients.length === 0;\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.microwaveSprite, this.x, this.y, this.width, this.height);\n\n        if (this.cookedSide && this.cookedSide.img) {\n            const cookedImage = ASSET_MANAGER.getAsset(this.cookedSide.img) as HTMLImageElement;\n            if (cookedImage) {\n                ctx.drawImage(cookedImage, 317, 100, 100, 100);\n            } else {\n                console.warn(` no image for ${this.cookedSide.name}`);\n            }\n        }\n        if (this.foodMessage) {  // Only draw if there’s a message\n          ctx.fillStyle = \"white\";\n          ctx.font = \"20px Arial\";\n          ctx.textAlign = \"center\";\n          ctx.fillText(this.foodMessage, 675, 47);\n       }       \n    }\n}\n\nclass FoodTray extends GameObject {\n  game: GameEngine;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  condiment: { name: string, img: string }[];\n\n  constructor(game: GameEngine, x: number, y: number, width: number, height: number) {\n    super(game);\n    this.game = game;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n\n    this.sideDishX = x;\n    this.sideDishY = y;\n    this.sideDishWidth = width;\n    this.sideDishHeight = height;\n\n    this.condiment = [];\n  };\n\n  update() {};\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const sprite = ASSET_MANAGER.getAsset(\"./assets/sides/Tray.png\") as HTMLImageElement;\n    ctx.drawImage(sprite, -125, -50, sprite.width + 150, sprite.height + 150);\n\n    this.condiment.forEach(element => {\n      const img = ASSET_MANAGER.getAsset(element.img) as HTMLImageElement;\n      ctx.drawImage(img, this.x + 45 , this.y + 15);\n    });\n\n    // Draw the bounds\n    ctx.save();\n    ctx.strokeStyle = \"red\";\n    ctx.lineWidth = 2;\n    ctx.setLineDash([5, 5]);\n\n\n    ctx.strokeRect(\n        this.sideDishX,\n        this.sideDishY,\n        this.sideDishWidth,\n        this.sideDishHeight\n    );\n\n    ctx.restore();\n    let currentOrder = GameState.getInstance().getState('orderWorkingOn');\n    if (currentOrder && currentOrder?.ingredients.length > 0) {\n      const sprite = ASSET_MANAGER.getAsset(\"./assets/objects/Roll_Cut.png\") as HTMLImageElement;\n      ctx.drawImage(sprite, 0, 100);\n    }\n\n  };\n\n  onDnDDrop(e: CustomEvent) {\n\n    if(e.detail.x > this.sideDishX && e.detail.x < this.sideDishX + this.sideDishWidth && e.detail.y > this.sideDishY && e.detail.y < this.sideDishY + this.sideDishHeight) {\n      console.log(\"dropped in food tray\");\n      this.condiment.push(e.detail.button.food);\n      console.log(e.detail.button.food);\n      const orderWorkingOn = GameState.getInstance().getState(\"orderWorkingOn\");\n      if(!orderWorkingOn) return;\n      orderWorkingOn.ingredients.push(new Ingredient(e.detail.button.food.name));\n      //e.detail.button.game.currentScene.rollButton.hidden = false;\n    }\n  }\n\n\n}\n\nclass DraggableObject extends GameObject {\n  game: GameEngine;\n  food: { name: string, img: string };\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  dnd!: DnDButton;\n  \n  constructor(game: GameEngine, food: { name: string; img: string; x?: number; y?: number; }, x: number, y: number, width: number, height: number) {\n    super(game);\n    this.game = game;\n    this.food = food;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.addButton();\n  };\n\n  addButton() {\n    this.dnd = DnDButton.transparentImageButton(this.game, this.x, this.y, this.width, this.height, this.food.img, () => {\n      console.log(\"clicked on object\", this.food);\n    });\n    this.dnd.width = this.width;\n    this.dnd.height = this.height;\n    this.dnd.food = this.food;\n    if(this.game.currentScene) this.game.currentScene.addGameObject(this.dnd);\n  }\n\n  update() {};\n\n  draw(ctx: CanvasRenderingContext2D) {\n    ctx.drawImage(ASSET_MANAGER.getAsset(this.food.img) as HTMLImageElement, this.x, this.y, this.width, this.height);\n  };\n}","import { ASSET_MANAGER } from \"src/main.js\";\nimport  Background  from \"src/background.js\";\nimport { Button } from \"src/button.js\";\nimport GameEngine from 'src/gameEngine.js';\nimport Scene from 'src/scene.js';\nimport { sceneManage } from \"src/main.js\";\nimport GameState from \"src/gameState\";\nimport GameObject from \"src/gameObject\";\n\nexport class GameOverScene extends Scene {\n    game: GameEngine;\n    x: number;\n    y: number;\n\n    constructor(game: GameEngine) { \n        super(game);\n        this.game = game;\n        this.x = 0;\n        this.y = 0;\n    };\n\n    initalizeScene() { \n        this.addGameObject(new Background(this.game, \"./assets/backgrounds/Title_Background.png\"));\n        this.addGameObject(new Score(this.game));\n    }\n\n}\n\nclass Score extends GameObject {\n    \n    game: GameEngine;\n\n    constructor(game: GameEngine) {\n        super(game);\n        this.game = game;\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        const money = GameState.getInstance().getState(\"money\");\n        ctx.fillStyle = \"black\";\n        ctx.textAlign = \"center\";\n        ctx.font = \"30px Arial\";\n        const centerX = 512\n        const y = 400\n        ctx.fillText(\"Game Over\", centerX, y);\n        ctx.fillText(\"Score: \" + money, centerX, y + 50);\n        ctx.fillText(\"Thank you for playing!\", centerX, y + 100);\n        ctx.fillText(\"Created by Christina Situ, Claire Nguyen, Melissa Harvey, & Quienten Miller\", centerX, y + 150);\n    }\n}","import GameEngine from \"./gameEngine.js\";\nimport Scene from \"./scene.js\";\n\n// Scene Imports\nimport { TitleScene } from \"./scenes/title/scene.js\";\nimport { WashThatRiceScene } from \"./scenes/washThatRice/scene.js\";\nimport { DontBurnRiceScene } from \"./scenes/dontBurnRice/scene.js\";\nimport { FillThePotScene } from \"./scenes/fillThePot/scene.js\";\nimport SwatTheFliesScene from \"./scenes/swatTheFlies/scene.js\";\nimport { CounterScene } from \"./scenes/counter/scene.js\";\nimport { RiceStationScene } from \"./scenes/riceStation/scene.js\";\nimport { RiceAssemblyScene } from \"./scenes/assembly/scene.js\";\nimport { SidesAssemblyScene } from \"./scenes/sides/scene.js\";\nimport { GameOverScene } from \"./scenes/gameOver/scene.js\";\n\nexport default class SceneManager {\n    game: GameEngine;\n    scenes: { [key: string]: Scene };\n    currentScene: string | null;\n    zIndex: number;\n\n    constructor(game: GameEngine){\n        this.game = game;\n        this.scenes = {};\n        this.currentScene = null;\n        this.zIndex = -1;\n\n        this.registerScene(\"title\", new TitleScene(this.game, 0, 0));\n\n        this.registerScene(\"order\", new CounterScene(this.game, 0, 0));\n        this.registerScene(\"rice\", new RiceStationScene(this.game));\n        this.registerScene(\"roll\", new RiceAssemblyScene(this.game));\n        this.registerScene(\"sides\", new SidesAssemblyScene(this.game, 0, 0));\n\n        this.registerScene(\"burn\", new DontBurnRiceScene(this.game, 0, 0));\n        this.registerScene(\"fill\", new FillThePotScene(this.game, 0, 0));\n        this.registerScene(\"wash\", new WashThatRiceScene(this.game, 0, 0));\n\n        this.registerScene(\"gameOver\", new GameOverScene(this.game));\n\n        this.loadScene(\"title\");\n        //this.onDeload = null;\n    };\n\n    registerScene(id: string, scene: Scene) {\n        //console.log(\"registering scene: \" + id);\n        this.scenes[id] = scene;\n    }\n\n    loadScene(scene: string) {\n        if(this.currentScene === scene) return;\n        if(!this.scenes[scene]) {\n            throw new Error(\"Scene \" + scene + \" not found\");\n        }\n\n        if(this.currentScene) {\n            //console.log(\"deloading scene: \" + this.currentScene);\n            this.scenes[this.currentScene].deload();\n        }\n\n        //console.log(\"loading scene: \" + scene);\n        this.currentScene = scene;\n        this.game.currentScene = this.scenes[scene];\n        \n        this.game.getHUD().setState(\"main\");\n        this.scenes[scene].initalizeScene();\n    };\n\n    update() {};\n    draw(ctx: CanvasRenderingContext2D) {};\n\n}\n\n","import GameObject from \"src/gameObject.js\";\nimport { Button } from \"../button.js\";\nimport GameEngine from \"../gameEngine.js\";\nimport GameState from \"src/gameState.js\";\nimport Ingredient, { CONDIMENTS, Order, WRAP } from \"src/scenes/counter/food.js\";\nimport { ASSET_MANAGER } from \"src/main.js\";\nimport drawTicket from \"./ticket.js\";\n\nexport default class HUD extends GameObject {\n    game: GameEngine;\n    state: string;\n    orderButton: Button;\n    riceButton: Button;\n    rollButton: Button;\n    sidesButton: Button;\n    trashButton: Button;\n    orderDisplay: OrderDisplay;\n    coin_ui: HTMLImageElement;\n\n    constructor(game: GameEngine) {\n        super(game)\n        this.game = game;\n        this.state = \"main\";\n\n        this.orderButton = Button.imageButton(game, 102, 694, \"./assets/button/Order_Button.JPG\", () => this.loadSceneCallback(\"order\"));\n        this.riceButton = Button.imageButton(game, 318, 694, \"./assets/button/Rice_Button.JPG\", () => this.loadSceneCallback(\"rice\"));\n        this.rollButton = Button.imageButton(game, 534, 694, \"./assets/button/Roll_Button.JPG\", () => this.loadSceneCallback(\"roll\"));\n        this.sidesButton = Button.imageButton(game, 750, 694, \"./assets/button/Side_Button.JPG\", () => this.loadSceneCallback(\"sides\"));\n        this.trashButton = Button.imageButtonWH(game, 940, 694, 64, 64, \"./assets/button/trash.png\", this.trashFood);\n\n        game.addEntity(this.orderButton);\n        game.addEntity(this.riceButton);\n        game.addEntity(this.rollButton);\n        game.addEntity(this.sidesButton);\n        game.addEntity(this.trashButton);\n\n        this.orderDisplay = new OrderDisplay(game);\n        game.addEntity(this.orderDisplay);\n\n        this.coin_ui = ASSET_MANAGER.getAsset(\"./assets/objects/coin_ui.png\") as HTMLImageElement;\n\n        this.zIndex = 100\n    }\n\n    loadSceneCallback(scene: string) {\n        if (!this.game.sceneManager) {\n            throw new Error(\"SceneManager is not initialized\");\n        }\n        this.game.sceneManager.loadScene(scene);\n    }\n\n    update() {\n        switch (this.state) {\n            case \"main\":\n                this.orderButton.hidden = false;\n                this.riceButton.hidden = false;\n                this.rollButton.hidden = false;\n                this.sidesButton.hidden = false;\n                this.trashButton.hidden = false;\n                break;\n            case \"hidden\":\n                this.orderButton.hidden = true;\n                this.riceButton.hidden = true;\n                this.rollButton.hidden = true;\n                this.sidesButton.hidden = true;\n                this.trashButton.hidden = true;\n                break;\n            default:\n                console.warn(`Unknown state: ${this.state}`);\n                break;\n        }\n    }\n\n    drawMoney(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.coin_ui, 1024-60, -6, 64, 64);\n        ctx.fillStyle = \"yellow\";\n        ctx.font = \"24px Arial\";\n        ctx.textAlign = \"right\"\n        ctx.fillText(GameState.getInstance().getState(\"money\").toFixed(2), 1024-60, 36);\n\n    }\n\n    formatTime() {\n        if(!this.game.timer) return;\n        const dayLength = 60 * 3; // 3 minutes\n        const time = dayLength - (this.game.timer.gameTime - GameState.getInstance().getState(\"dayStartedAtTime\"));\n        if(time <= 0) {\n            this.game.sceneManager?.loadScene(\"gameOver\");\n            return \"00:00\";\n        }\n        const minutes = Math.floor(time / 60);\n        const seconds = Math.floor(time % 60);\n        return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n    }\n\n    drawTimer(ctx: CanvasRenderingContext2D) {\n        if(!this.game.timer) return;\n        ctx.fillStyle = \"lightblue\";\n        ctx.font = \"24px Arial\";\n        ctx.textAlign = \"right\"\n        let time = this.formatTime();\n        ctx.fillText(\"Timer: \" + time, 1024-140, 36);\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if(this.state === \"hidden\") return;\n        this.drawMoney(ctx);\n        this.drawTimer(ctx);\n    }\n\n    setState(state: string) {\n        this.state = state;\n    }\n\n    trashFood() {\n        console.log(\"trash food\");\n        let newOrder = new Order([], [], null);\n        GameState.getInstance().setState('orderWorkingOn', newOrder);\n    }\n}\n\nclass OrderDisplay extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    state: string;\n\n    constructor(game: GameEngine) {\n        super(game, \"orderDisplay\", true);\n        this.game = game;\n        this.x = 0\n        this.y = 0;\n        this.width = 1024;\n        this.height = 50;\n        this.zIndex = 100;\n        this.state = \"collapsed\";\n    }\n\n    pointInRect(x: number, y: number) {\n        return x > this.x && x < this.x + this.width && y > this.y && y < this.y + this.height;\n    }\n\n    update() {\n        switch (this.game.getHUD().state) {\n            case \"main\":\n                if (this.game.mouse && this.pointInRect(this.game.mouse.x, this.game.mouse.y)) {\n                    this.state = \"expanded\";\n                } else {\n                    this.state = \"collapsed\";\n                }\n                break;\n            case \"hidden\":\n                break;\n            default:\n                break;\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        switch (this.game.getHUD().state) {\n            case \"main\":\n                if (this.game.options.debugging) {\n                    ctx.fillStyle = \"black\";\n                    ctx.fillRect(this.x, this.y, this.width, this.height);\n                }\n                ctx.globalAlpha = 0.5; // Set transparency (0.0 = fully transparent, 1.0 = fully opaque)\n                ctx.fillStyle = \"gray\"; // Fill color\n                ctx.fillRect(this.x, this.y, this.width, this.height); // Draw rectangle\n                ctx.globalAlpha = 1.0; // Reset transparency\n                const orders = GameState.getInstance().getState(\"orders\");\n                for (let i = 0; i < orders.length; i++) {\n                    const order = orders[i].order;\n                    const orderX = this.x + 10 + 210 * i;\n                    const orderY = this.y + 10;\n                    ctx.fillStyle = \"white\";\n                    ctx.fillRect(orderX, orderY, 200, 20);\n                    ctx.fillStyle = \"black\";\n                    ctx.strokeRect(orderX, orderY, 200, 20);\n                }\n                if (this.state !== \"expanded\") return;\n                for (let i = 0; i < orders.length; i++) {\n                    const order = orders[i].order;\n                    drawTicket(ctx, order, this.x + 10 + (210 * i), this.y + 10);\n                }\n                break;\n            case \"hidden\":\n                break;\n            default:\n                break;\n        }\n    }\n}","import AssetManager from \"./assetManager.js\";\nimport GameEngine from \"./gameEngine.js\";\nimport SceneManager from \"./sceneManager.js\";\nimport HUD from \"./hud/hud.js\";\n\n\n\nexport const ASSET_MANAGER = new AssetManager();\nexport let sceneManage: SceneManager;\n\n// sprites\n\n// backgrounds\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Rice_Background.JPG\");\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Roll_Background.JPG\");\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Order_Background.png\");\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Order_Foreground.png\");\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Station_Background.png\");\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Minigame_Background.png\");\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Title_Background.png\");\n\n// rice station\nASSET_MANAGER.queueDownload(\"./assets/objects/RiceCooker.png\");\nASSET_MANAGER.queueDownload(\"./assets/objects/BambooMat.png\");\nASSET_MANAGER.queueDownload(\"./assets/objects/Rice.png\");\nASSET_MANAGER.queueDownload(\"./assets/objects/Rice_Cooked.png\");\nASSET_MANAGER.queueDownload(\"./assets/objects/Nori.png\");\nASSET_MANAGER.queueDownload(\"./assets/objects/Nori_Source.png\");\n\n// buttons\nASSET_MANAGER.queueDownload(\"./assets/button/Rice_Button.JPG\");\nASSET_MANAGER.queueDownload(\"./assets/button/Roll_Button.JPG\");\nASSET_MANAGER.queueDownload(\"./assets/button/Roll_Button2.png\");\nASSET_MANAGER.queueDownload(\"./assets/button/Side_Button.JPG\");\nASSET_MANAGER.queueDownload(\"./assets/button/Order_Button.JPG\");\nASSET_MANAGER.queueDownload(\"./assets/button/Start_Button.png\");\n\n//sushi assembly\nASSET_MANAGER.queueDownload(\"./assets/assembly/case.jpg\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/tray.jpg\");\nASSET_MANAGER.queueDownload(\"./assets/objects/Roll.png\");\nASSET_MANAGER.queueDownload(\"./assets/objects/Roll_Cut.png\");\n\n//Wash that rice\nASSET_MANAGER.queueDownload('./assets/hand.png');\nASSET_MANAGER.queueDownload('./assets/pot_top.png');\nASSET_MANAGER.queueDownload('./assets/pot_top_outside.png');\nASSET_MANAGER.queueDownload('./assets/rotate.png');\nASSET_MANAGER.queueDownload('./assets/checkmark.png');\n\n// fill the pot\nASSET_MANAGER.queueDownload('./assets/objects/Faucet_Off.png');\nASSET_MANAGER.queueDownload('./assets/objects/Faucet_On.png');\nASSET_MANAGER.queueDownload('./assets/objects/Pot_Animation.png');\nASSET_MANAGER.queueDownload('./assets/backgrounds/FillThePot_Background.png');\n\n// Don't burn the rice.\nASSET_MANAGER.queueDownload('./assets/objects/RiceCooker_On.png');\nASSET_MANAGER.queueDownload('./assets/objects/RiceCooker_Off.png');\n\n// Swat the flies\nASSET_MANAGER.queueDownload(\"./assets/flies.png\");\nASSET_MANAGER.queueDownload(\"./assets/swatter.png\");\n\n//Counter\nASSET_MANAGER.queueDownload(\"./assets/characters/dummy.png\");\nASSET_MANAGER.queueDownload(\"./assets/button/exclam.png\");\n\n// Food bits\nASSET_MANAGER.queueDownload(\"./assets/assembly/crab.png\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/cucumber.png\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/tuna.png\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/avocado.png\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/salmon.png\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/uni.png\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/tamago.png\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/octopus.png\");\n\n// Customers\nASSET_MANAGER.queueDownload(\"./assets/characters/Customer_0.png\");\nASSET_MANAGER.queueDownload(\"./assets/characters/Customer_1.png\");\nASSET_MANAGER.queueDownload(\"./assets/characters/Customer_2.png\");\nASSET_MANAGER.queueDownload(\"./assets/characters/Customer_3.png\");\nASSET_MANAGER.queueDownload(\"./assets/characters/Customer_4.png\");\nASSET_MANAGER.queueDownload(\"./assets/characters/Customer_5.png\");\n\n// Trays\nASSET_MANAGER.queueDownload(\"./assets/trays/tray_avocado.png\");\nASSET_MANAGER.queueDownload(\"./assets/trays/tray_crab.png\");\nASSET_MANAGER.queueDownload(\"./assets/trays/tray_cucumber.png\");\nASSET_MANAGER.queueDownload(\"./assets/trays/tray_octopus.png\");\nASSET_MANAGER.queueDownload(\"./assets/trays/tray_salmon.png\");\nASSET_MANAGER.queueDownload(\"./assets/trays/tray_tamago.png\");\nASSET_MANAGER.queueDownload(\"./assets/trays/tray_tuna.png\");\nASSET_MANAGER.queueDownload(\"./assets/trays/tray_uni.png\");\nASSET_MANAGER.queueDownload(\"./assets/trays/tray_empty.png\");\n\nASSET_MANAGER.queueDownload(\"./assets/sides/microwaveYuh.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/Tofu.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/MisoBin.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/greenonions.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/Ginger.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/edamame.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/Tray.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/soysauce.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/wasabi.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/Gyoza.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/MisoSoup.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/Karaage.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/chicken.png\");\nASSET_MANAGER.queueDownload(\"./assets/sides/cookedEdamame.png\");\n\nASSET_MANAGER.queueDownload(\"./assets/button/trash.png\");\n\n// SOUNDS\nASSET_MANAGER.queueDownload('./assets/sounds/jingle.mp3');\nASSET_MANAGER.queueDownload('./assets/sounds/doorchime.mp3');\nASSET_MANAGER.queueDownload('./assets/sounds/background_music.mp3');\n\nASSET_MANAGER.queueDownload('./assets/objects/coin_add.png');\nASSET_MANAGER.queueDownload('./assets/objects/coin_ui.png');\n\n\nASSET_MANAGER.downloadAll(() => {\n    const gameEngine = new GameEngine({\n        debugging: false,\n    });\n\n\tconst canvas = document.getElementById(\"gameWorld\") as HTMLCanvasElement;\n    if (!canvas) {\n        throw new Error(\"Canvas element not found\");\n    }\n\tconst ctx = canvas.getContext(\"2d\");\n    if (!ctx) {\n        throw new Error(\"Canvas context not found\");\n    }\n\n\tgameEngine.init(ctx);\n\n    let hud = new HUD(gameEngine);\n    gameEngine.addEntity(hud);\n    gameEngine.hud = hud;\n\n    sceneManage = new SceneManager(gameEngine);\n\tgameEngine.addEntity(sceneManage);\n    gameEngine.sceneManager = sceneManage;\n\n    // this won't play because of autoplay\n    // ASSET_MANAGER.playAsset('./assets/sounds/background_music.mp3');\n    \n\n\tgameEngine.start();\n\n});\n\n/** Creates an alias for requestAnimationFrame for backwards compatibility */\n//@ts-expect-error\nwindow.requestAnimFrame = (() => {\n    return window.requestAnimationFrame || // @ts-expect-error\n        window.webkitRequestAnimationFrame || // @ts-expect-error\n        window.mozRequestAnimationFrame || // @ts-expect-error\n        window.oRequestAnimationFrame || // @ts-expect-error\n        window.msRequestAnimationFrame ||\n        /**\n         * Compatibility for requesting animation frames in older browsers\n         * @param {Function} callback Function\n         * @param {DOM} element DOM ELEMENT\n         */\n        ((callback: TimerHandler, element: any) => {\n            window.setTimeout(callback, 1000 / 60);\n        });\n})();"],"names":["AssetManager","__publicField","path","callback","i","that","ext","img","aud","audio","err","clone","bgm","mute","key","asset","volume","Timer","current","delta","gameDelta","GameObject","game","id","persistent","data","ctx","e","Faucet","pot","currentData","newAmount","ASSET_MANAGER","mouseX","mouseY","GameEngine","options","gameLoop","getXandY","bounds","scaleX","scaleY","x","y","realCoords","modifiedEvent","entity","Point","event","entitiesCount","a","b","diff","defaultValue","value","gameObject","spritesheet","width","height","Button","onClick","image","button","text","dnd","imgSize","DnDButton","color","Scene","obj","DEFAULT_GAME_STATE","_GameState","modifier","currentValue","newValue","customer","order","o","station","GameState","TitleScene","Background","sceneManage","ProgressBar","randomIntRange","start","end","getDistance","p1","p2","PotTop","avgPos","acc","curr","avgDist","sprite","PotTopOutside","COLORS","RiceGrain","angle","distance","centerX","centerY","RotateIcon","Hand","Checkmark","WIDTH","HEIGHT","POT_RADIUS","WashThatRiceScene","amountOfGrains","rice","TimerBar","gameEngine","totalTime","progressWidth","perfectStartX","perfectEndX","timerBar","off","on","DontBurnRiceScene","timeBar","riceCooker","RiceCooker","Pot","FillThePotScene","_Order","ingredients","sides","condiment","Order","Ingredient","type","Side","name","Condiment","NORI","RICE","RICE_CARRY","AVOCADO","CRAB","CUCUMBER","OCTOPUS","SALMON","TUNA","UNI","TAMAGO","WRAP","FILLINGS","KARAAGE","MISOSOUP","EDAMAME","GYOZA","SIDES","WASABI","GINGER","SOY","CONDIMENTS","SIDE_HEIGHT","LINES","LINE_HEIGHT","FOOD_WIDTH","FOOD_HEIGHT","drawTicket","itemY","ingredient","sideText","side","Customer","npc","startWalk","startWalk2","resolve","t","step","xDiff","yDiff","dx","dy","length","nx","ny","xChange","yChange","getRandomElements","array","count","numWrap","numIngredients","numSides","selectedWraps","selectedIngredients","selectedCondiments","selectedSides","CounterScene","foreground","orderWorkingOn","RatingHandler","money","moneyToAdd","MoneyAdd","orderMade","ordered","ENTREE_P","SIDE_P","correctIngredients","totalIngredients","index","percentIngredientsCorrect","correctSides","totalSides","percentSidesCorrect","percentCorrect","RiceStationScene","BambooMat","nori","Nori","amountString","minigame","element","interval","newOrder","RiceAssemblyScene","stationsComplete","FoodBottom","binWidth","binHeight","foods","curFood","foodBin","FoodBin","food","bottomWidth","bottomHeight","ROLLED_HEIGHT","pos","currentOrder","bambooMatImg","xOffset","spacing","SidesAssemblyScene","FoodTray","Microwave","item","DraggableObject","xStart","yStart","buttonSize","xSpacing","ySpacing","columns","ingredientList","col","row","inButton","cookButtonX","cookButtonY","ingredientNames","ing","recipe","req","cookedImage","GameOverScene","Score","SceneManager","scene","HUD","OrderDisplay","time","_a","minutes","seconds","state","orders","orderX","orderY","canvas","hud"],"mappings":"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"}
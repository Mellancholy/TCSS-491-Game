{"version":3,"file":"index-ZPaZeAin.js","sources":["../../src/assetManager.ts","../../src/timer.ts","../../src/gameObject.ts","../../src/scenes/fillThePot/faucet.ts","../../src/gameEngine.ts","../../src/button.ts","../../src/orderManager.ts","../../src/scenes/washThatRice/progressBar.ts","../../src/util.ts","../../src/scenes/washThatRice/pot.ts","../../src/scenes/washThatRice/riceGrain.ts","../../src/scenes/washThatRice/rotate.ts","../../src/scenes/washThatRice/hand.ts","../../src/scenes/washThatRice/checkmark.ts","../../src/scene.ts","../../src/scenes/washThatRice/scene.ts","../../src/scenes/dontBurnRice/timerBar.ts","../../src/scenes/dontBurnRice/ricecooker.ts","../../src/scenes/dontBurnRice/scene.ts","../../src/scenes/fillThePot/pot.ts","../../src/scenes/fillThePot/scene.ts","../../src/background.ts","../../src/scenes/counter/food.ts","../../src/scenes/counter/customer.ts","../../src/scenes/counter/scene.ts","../../src/scenes/riceStation/scene.ts","../../src/scenes/assembly/scene.ts","../../src/sceneManager.ts","../../src/stationSwitcher.ts","../../src/rollManager.ts","../../src/main.ts"],"sourcesContent":["export default class AssetManager {\n    successCount: number;\n    errorCount: number;\n    cache: { [key: string]: HTMLImageElement | HTMLAudioElement };\n    downloadQueue: string[];\n\n    constructor() {\n        this.successCount = 0;\n        this.errorCount = 0;\n        this.cache = {};\n        this.downloadQueue = [];\n    };\n\n    queueDownload(path: string) {\n        console.log(\"Queueing \" + path);\n        this.downloadQueue.push(path);\n    };\n\n    isDone() {\n        return this.downloadQueue.length === this.successCount + this.errorCount;\n    };\n\n    downloadAll(callback: () => void) {\n        if (this.downloadQueue.length === 0) setTimeout(callback, 10);\n        for (var i = 0; i < this.downloadQueue.length; i++) {\n            var that = this;\n\n            var path = this.downloadQueue[i];\n            console.log(path);\n            var ext = path.substring(path.length - 3).toLowerCase();\n\n            switch (ext) {\n                case 'jpg':\n                case 'png':\n                    var img = new Image();\n                    img.addEventListener(\"load\", function () {\n                        console.log(\"Loaded \" + this.src);\n                        that.successCount++;\n                        if (that.isDone()) callback();\n                    });\n\n                    img.addEventListener(\"error\", function () {\n                        console.log(\"Error loading \" + this.src);\n                        that.errorCount++;\n                        if (that.isDone()) callback();\n                    });\n\n                    img.src = path;\n                    this.cache[path] = img;\n                    break;\n                case 'wav':\n                case 'mp3':\n                case 'mp4':\n                    var aud = new Audio();\n                    aud.addEventListener(\"loadeddata\", function () {\n                        console.log(\"Loaded \" + this.src);\n                        that.successCount++;\n                        if (that.isDone()) callback();\n                    });\n\n                    aud.addEventListener(\"error\", function () {\n                        console.log(\"Error loading \" + this.src);\n                        that.errorCount++;\n                        if (that.isDone()) callback();\n                    });\n\n                    aud.addEventListener(\"ended\", function () {\n                        aud.pause();\n                        aud.currentTime = 0;\n                    });\n\n                    aud.src = path;\n                    aud.load();\n\n                    this.cache[path] = aud;\n                    break;\n            }\n        }\n    };\n\n    getAsset(path: string) {\n        return this.cache[path];\n    };\n\n    playAsset(path: string) {\n        let audio = this.cache[path] as HTMLAudioElement;\n        if (audio.currentTime != 0) {\n            let bak = audio.cloneNode() as HTMLAudioElement;\n            bak.currentTime = 0;\n            bak.volume = audio.volume;\n            bak.play();\n        } else {\n            audio.currentTime = 0;\n            audio.play();\n        }\n    };\n\n    muteAudio(mute: boolean) {\n        for (var key in this.cache) {\n            let asset = this.cache[key];\n            if (asset instanceof Audio) {\n                asset.muted = mute;\n            }\n        }\n    };\n\n    adjustVolume(volume: number) {\n        for (var key in this.cache) {\n            let asset = this.cache[key];\n            if (asset instanceof Audio) {\n                asset.volume = volume;\n            }\n        }\n    };\n\n    pauseBackgroundMusic() {\n        for (var key in this.cache) {\n            let asset = this.cache[key];\n            if (asset instanceof Audio) {\n                asset.pause();\n                asset.currentTime = 0;\n            }\n        }\n    };\n\n    autoRepeat(path: string) {\n        var aud = this.cache[path] as HTMLAudioElement;\n        aud.addEventListener(\"ended\", function () {\n            aud.play();\n        });\n    };\n};\n\n","// This game shell was happily modified from Googler Seth Ladd's \"Bad Aliens\" game and his Google IO talk in 2011\n\nexport default class Timer {\n    gameTime: number;\n    maxStep: number;\n    lastTimestamp: number;\n\n    constructor() {\n        this.gameTime = 0;\n        this.maxStep = 0.05;\n        this.lastTimestamp = 0;\n    };\n\n    tick() {\n        const current = Date.now();\n        const delta = (current - this.lastTimestamp) / 1000;\n        this.lastTimestamp = current;\n\n        const gameDelta = Math.min(delta, this.maxStep);\n        this.gameTime += gameDelta;\n        return gameDelta;\n    };\n};","import GameEngine from \"./gameEngine\";\n\nexport default class GameObject { \n    game: GameEngine;\n    id: string = \"\";\n    persistent: boolean = false;\n    removeFromWorld: boolean = false;\n    hidden: boolean | undefined = false;\n    [key: string]: any;\n\n    constructor(game: GameEngine, id: string = \"\", persistent: boolean = false) {\n        if (this.constructor == GameObject) {\n            throw new Error(\"Abstract classes can't be instantiated.\");\n        }\n\n        this.game = game;\n        this.id = id;\n        this.persistent = persistent;\n\n        if(persistent) {\n            game.registerPersistentGameObject(id, this)\n        }\n    }\n\n    init() {\n        // Initialize the game object\n        // This method should be overridden by subclasses\n        throw new Error(\"Method 'init()' must be implemented.\");\n    }\n\n    loadSharedData() {\n        const data = this.game.getSharedDataByKey(this.id)\n        for (const key in data) {\n            this[key] = data[key];\n        }\n        this.game.removeSharedDataByKey(this.id);\n    }\n\n    update() {\n        throw new Error(\"Method 'update()' must be implemented.\");\n    }\n\n    draw(ctx : CanvasRenderingContext2D) {\n        throw new Error(\"Method 'draw()' must be implemented.\");\n    }\n\n    deload() {\n        this.removeFromWorld = true;\n    }\n\n    restore() {\n        this.removeFromWorld = false;\n    }\n    \n\n    onMouseDown(e: MouseEvent) {\n\n    }\n\n    onMouseUp(e: MouseEvent) {\n\n    }\n}","import GameEngine from \"src/gameEngine\";\nimport GameObject from \"src/gameObject.js\";\nimport { ASSET_MANAGER } from \"src/main.js\";\nimport Pot from \"./pot\";\n\nexport default class Faucet extends GameObject {\n    game: GameEngine;\n    pot: Pot;\n    isOn: boolean;\n    gameWon: boolean;\n    gameOver: boolean;\n    \n    constructor(game: GameEngine, pot: Pot) {\n        super(game);\n        this.game = game;\n        this.isOn = false;\n        this.pot = pot\n        this.gameWon = false;\n        this.gameOver = false;\n    };\n\n    update() {\n        // If faucet is on, add water to pot\n        if (this.isOn) {\n            this.pot.liters++;\n            console.log(this.pot.liters);\n        }\n\n        if (!this.isOn && this.pot.liters > 0) {\n            if (this.pot.liters >= 700 && this.pot.liters < 800 && !this.gameWon) {\n                this.gameWon = true; \n                console.log(this.gameWon); // debugging\n                const currentData = this.game.getSharedDataByKey(\"riceCooker\");\n                const newAmount = currentData ? currentData.amount + 5 : 5;\n                this.game.addSharedData(\"riceCooker\", {amount: newAmount});\n                setTimeout(() => {\n                    this.game.sceneManager!.loadScene(\"rice\")\n                }\n                , 2000)\n            } else {\n                this.gameWon = false;\n            }\n            this.gameOver = true;\n        }\n\n        \n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if (this.isOn) {\n            ctx.drawImage(ASSET_MANAGER.getAsset(\"./assets/objects/Faucet_On.png\") as HTMLImageElement, 565, 248);\n        } else {\n            ctx.drawImage(ASSET_MANAGER.getAsset(\"./assets/objects/Faucet_Off.png\") as HTMLImageElement, 565, 285);\n        }\n\n        // Drawing hit box\n        ctx.beginPath();\n        ctx.strokeStyle = \"red\";\n        ctx.rect(550, 285, 50, 50);\n        ctx.stroke();\n    };\n\n    faucetManager(mouseX: number, mouseY: number) {\n        if (mouseX >= 550 && mouseX <= 550 + 50 && mouseY >= 285 && mouseY <= 285 + 45 && !this.isOn) {\n            this.isOn = true;\n            console.log(this.isOn);\n        } else if (mouseX >= 550 && mouseX <= 550 + 50 && mouseY >= 285 && mouseY <= 285 + 45 && this.isOn) {\n            this.isOn = false;\n            console.log(this.isOn);\n        }\n    }\n}","import Timer from \"./timer.js\";\nimport Faucet from \"./scenes/fillThePot/faucet.js\";\nimport SceneManager from \"./sceneManager.js\";\nimport Scene from \"./scene.js\";\nimport GameObject from \"./gameObject.js\";\n\n\n// This game shell was happily modified from Googler Seth Ladd's \"Bad Aliens\" game and his Google IO talk in 2011\n\nexport default class GameEngine {\n    ctx: CanvasRenderingContext2D | null;\n    entities: any[];\n    persistentGameObjects: {[key: string]: any};\n    click: { x: number, y: number } | null;\n    mouse: { x: number, y: number } | null;\n    move: { x: number, y: number } | null | undefined;\n    down: boolean | null;\n    previousMousePositionsDelay: number;\n    previousMousePositionsDelayCounter: number;\n    previousMousePositions: { x: number, y: number }[];\n    previousMousePositionsLatest: number;\n    wheel: WheelEvent | null;\n    keys: {[key: string]: boolean};\n    currentDraggedItem: any | null;\n    options: { debugging: boolean };\n    sceneManager: SceneManager | null;\n    currentScene: Scene | null;\n    sharedData: {[key: string]: any};\n    timer: Timer | undefined;\n    running: boolean | undefined;\n    rightclick: { x: number; y: number; } | undefined;\n    clockTick: number | undefined;\n\n\n    constructor(options: { debugging: boolean } | null) {\n        // What you will use to draw\n        // Documentation: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D\n        this.ctx = null;\n\n        // Everything that will be updated and drawn each frame\n        this.entities = [];\n        this.persistentGameObjects = {};\n\n        // Information on the input\n        this.click = null;\n        this.mouse = null;\n        this.down = null;\n        this.previousMousePositionsDelay = 3;\n        this.previousMousePositionsDelayCounter = 0;\n        this.previousMousePositions = [];\n        this.previousMousePositionsLatest = 0;\n        this.wheel = null;\n        this.keys = {};\n        this.currentDraggedItem = null;\n\n\n\n        // Options and the Details\n        this.options = options || {\n            debugging: false,\n        };\n\n        this.sceneManager = null;\n        this.currentScene = null;\n        this.sharedData = {};\n    };\n\n    init(ctx: CanvasRenderingContext2D) {\n        this.ctx = ctx;\n        this.startInput();\n        this.timer = new Timer();\n    };\n\n    start() {\n        this.running = true;\n        const gameLoop = () => {\n            this.loop();\n            // @ts-expect-error\n            requestAnimFrame(gameLoop, this.ctx!.canvas);\n        };\n        gameLoop();\n    };\n\n    startInput() {\n        var getXandY = (e: MouseEvent) => {\n            var x = e.clientX - this.ctx!.canvas.getBoundingClientRect().left;\n            var y = e.clientY - this.ctx!.canvas.getBoundingClientRect().top;\n\n            return { x: x , y: y };\n        }\n        \n        this.ctx!.canvas.addEventListener(\"mousemove\", e => {\n            this.move = getXandY(e);\n            if (this.options.debugging) {\n                console.log(\"MOUSE_MOVE\", getXandY(e));\n            }\n            this.mouse = getXandY(e);\n            this.previousMousePositionsDelayCounter++;\n\n            if(this.previousMousePositionsDelayCounter >= this.previousMousePositionsDelay) {\n                if (this.previousMousePositions.length >= 15) {\n                    this.previousMousePositions.shift();\n                }\n                this.previousMousePositions.push(this.mouse);\n                this.previousMousePositionsDelayCounter = 0;\n                this.previousMousePositionsLatest = this.timer!.gameTime\n            }\n        });\n\n        this.ctx!.canvas.addEventListener(\"mouseup\", e => {\n            this.down = false;\n            // Stop dragging\n            this.entities.forEach(entity => {\n                if(entity.onMouseUp) entity.onMouseUp(e);\n            });\n\n             console.log(\"Mouse Up\");  // Check if this is firing\n        }, false);\n\n        this.ctx!.canvas.addEventListener(\"mousedown\", (e) => {\n            this.down = true;\n            this.entities.forEach(entity => {\n                if(entity.onMouseDown) entity.onMouseDown(e);\n            });\n        }, false);\n\n        this.ctx!.canvas.addEventListener(\"click\", e => {\n            this.entities.forEach(entity => {\n                if (entity instanceof Faucet) {\n                    entity.faucetManager(getXandY(e).x, getXandY(e).y);\n                }\n            });\n            if (this.options.debugging) {\n                console.log(\"CLICK\", getXandY(e));\n            }\n            this.click = getXandY(e);\n            // console.log(\"Mouse Clicked\");\n        });\n\n        this.ctx!.canvas.addEventListener(\"wheel\", e => {\n            if (this.options.debugging) {\n                //@ts-ignore\n                console.log(\"WHEEL\", getXandY(e), e.wheelDelta);\n            }\n            e.preventDefault(); // Prevent Scrolling\n            this.wheel = e;\n        });\n\n        this.ctx!.canvas.addEventListener(\"contextmenu\", e => {\n            if (this.options.debugging) {\n                console.log(\"RIGHT_CLICK\", getXandY(e));\n            }\n            e.preventDefault(); // Prevent Context Menu\n            this.rightclick = getXandY(e);\n        });\n\n        document.body.addEventListener(\"dndDrop\", e => {\n            this.entities.forEach(entity => {\n                if(entity.onDnDDrop) entity.onDnDDrop(e);\n            });\n        }, false);\n\n\n        this.ctx!.canvas.addEventListener(\"keydown\", event => this.keys[event.key] = true);\n        this.ctx!.canvas.addEventListener(\"keyup\", event => this.keys[event.key] = false);\n\n\n\n\n        // that.leftclick = mouseClickListener;\n        // this.ctx.canvas.addEventListener(\"click\", that.leftclick, false);\n    };\n\n    addEntity(entity: any) {\n        this.entities.push(entity);\n    };\n\n    draw() {\n        // Clear the whole canvas with transparent color (rgba(0, 0, 0, 0))\n        this.ctx!.clearRect(0, 0, this.ctx!.canvas.width, this.ctx!.canvas.height);\n\n        // Draw the entities in order\n        for (let i = 0; i < this.entities.length; i++) {\n            this.entities[i].draw(this.ctx, this);\n        }\n    };\n\n    update() {\n        // console.log(this.entities);\n        let entitiesCount = this.entities.length;\n        for (let i = 0; i < entitiesCount; i++) {\n            let entity = this.entities[i];\n\n            if (!entity.removeFromWorld) {\n                entity.update();\n            }\n            //If the size of the entity list has changed, update i\n            if(entitiesCount !== this.entities.length) {\n                let diff = entitiesCount - this.entities.length;\n                entitiesCount = this.entities.length;\n                i -= diff;\n            }\n        }\n\n        for (let i = this.entities.length - 1; i >= 0; --i) {\n            if (this.entities[i].removeFromWorld) {\n                this.entities.splice(i, 1);\n            }\n        }\n    };\n\n    loop() {\n        this.clockTick = this.timer!.tick();\n        this.update();\n        this.draw();\n    };\n\n    getSharedData() {\n        return this.sharedData;\n    }\n\n    getSharedDataByKey(key: string) {\n        return this.sharedData[key];\n    }\n    \n    getSharedDataByKeyAndDefault(key: string, defaultValue: object) {\n        if (this.sharedData[key] === undefined) {\n            return defaultValue;\n        }\n        return this.sharedData[key];\n    }\n    addSharedData(key: string, value: object) {\n        this.sharedData[key] = {...value};\n    }\n\n    removeSharedDataByKey(key: string) {\n        delete this.sharedData[key];\n    }\n\n    registerPersistentGameObject(id: string, gameObject: GameObject) {\n        this.persistentGameObjects[id] = gameObject;\n    }\n\n    getPersistentGameObject(id: string) {\n        return this.persistentGameObjects[id];\n    }\n\n    removePersistentGameObject(id: string) {\n        delete this.persistentGameObjects[id];\n    }\n    \n    clearPersistentGameObjects() {\n        this.persistentGameObjects = {};\n    }\n};","import GameObject from \"./gameObject.js\";\nimport { ASSET_MANAGER } from \"./main.js\";\nimport GameEngine from \"./gameEngine.js\";\n\nexport class Button extends GameObject {\n    image: HTMLImageElement | undefined;\n    x: number | undefined;\n    y: number | undefined;\n    width: any;\n    height: any;\n    bgColor: any;\n    text: string | undefined;\n    \n\n    constructor(game: GameEngine, x: number, y: number, onClick: () => void) {\n        super(game, 'button');\n        Object.assign(this, { game, x, y, onClick, hidden: false });\n    }\n\n    static imageButton(game: GameEngine, x: number, y: number, image: string, onClick: () => void) {\n        let button = new Button(game, x, y, onClick);\n        Object.assign(button, { image: ASSET_MANAGER.getAsset(image) });\n        return button;\n    }\n\n    static rectButton(game: GameEngine, x: number, y:number , width: number, height: number, onClick: () => void, text=\"\") {\n        let button = new Button(game, x, y, onClick);\n        Object.assign(button, { width, height, bgColor: \"gray\", text });\n        return button;\n    }\n\n    update() {\n    }\n\n    onMouseDown(e: MouseEvent) {\n        if(this.hidden) return;\n        if(this.image) {\n            if (e.offsetX > this.x! && e.offsetX < this.x! + this.image.width &&\n                e.offsetY > this.y! && e.offsetY < this.y! + this.image.height) {\n                    this.onClick();\n            }\n        } else {\n            if (e.offsetX > this.x! && e.offsetX < this.x + this.width &&\n                e.offsetY > this.y! && e.offsetY < this.y + this.height) {\n                    this.onClick();\n            }\n        }\n    }\n    onClick() {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if(this.hidden) return;\n        if(this.image) {\n            ctx.drawImage(this.image, this.x!, this.y!);\n        } else {\n            ctx.fillStyle = this.bgColor;\n            ctx.fillRect(this.x!, this.y!, this.width, this.height);\n            ctx.lineWidth = 2;\n            ctx.strokeStyle = \"black\";\n            ctx.strokeRect(this.x!, this.y!, this.width, this.height);\n            ctx.fillStyle = \"black\"\n            ctx.font = \"36px serif\";\n            ctx.textAlign = \"center\";\n            ctx.textBaseline = \"middle\";\n            ctx.fillText(this.text!, this.x! + (this.width / 2), this.y! + (this.height / 2) + 5)\n        }\n    }\n}\n\nexport class DnDButton extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    onClick: () => void;\n    dragging: boolean;\n    transparent: boolean | undefined;\n    image: any;\n    bgColor: any;\n    width: number | undefined;\n    height: number | undefined;\n\n    constructor(game: GameEngine, x: number, y: number, onClick: () => void) {\n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.onClick = onClick;\n\n        this.dragging = false;\n    }\n\n    static imageButton(game: GameEngine, x: number, y: number, image: string, onClick: () => {}) {\n        let dnd = new DnDButton(game, x, y, onClick);\n        Object.assign(dnd, { image: ASSET_MANAGER.getAsset(image) });\n        return dnd;\n    }\n\n    static transparentImageButton(game: GameEngine, x: number, y: number, width: number, height: number, image: string, onClick: () => void) {\n        let dnd = new DnDButton(game, x, y, onClick);\n        Object.assign(dnd, { width, height, image: ASSET_MANAGER.getAsset(image), transparent: true });\n        return dnd;\n    }\n\n    static rectButton(game: GameEngine, x: number, y: number, width: number, height: number, color: string, onClick: () => void) {\n        let dnd = new DnDButton(game, x, y, onClick);\n        Object.assign(dnd, { width, height, bgColor: color });\n        return dnd;\n    }\n\n\n    update() {\n        \n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if(this.transparent && !this.dragging) return;\n        if(this.image) {\n            if(this.dragging) {\n                ctx.drawImage(this.image, this.game.mouse!.x - this.image.width / 2, this.game.mouse!.y - this.image.height / 2);\n            } else {\n                //console.log(\"drawing image\", this.image, this.x, this.y);\n                ctx.drawImage(this.image, this.x, this.y);\n            }\n            \n        } else {\n            if(this.dragging) {\n                ctx.fillStyle = this.bgColor;\n                ctx.fillRect(this.game.mouse!.x - this.width! / 2, this.game.mouse!.y - this.height! / 2, this.width!, this.height!);\n            } else {\n                ctx.fillStyle = this.bgColor;\n                ctx.fillRect(this.x, this.y, this.width!, this.height!);\n                ctx.lineWidth = 2;\n                ctx.strokeStyle = \"black\";\n                ctx.strokeRect(this.x, this.y, this.width!, this.height!);\n            }\n            \n        }\n    }\n\n    onMouseDown(e: MouseEvent) {\n        console.log(\"mouse down dnd button\");\n        if(this.image && !this.transparent) {\n            if (e.offsetX > this.x && e.offsetX < this.x + this.image.width &&\n                e.offsetY > this.y && e.offsetY < this.y + this.image.height) {\n                    this.dragging = true;\n                    this.onClick();\n            }\n        } else {\n            if (e.offsetX > this.x && e.offsetX < this.x + this.width! &&\n                e.offsetY > this.y && e.offsetY < this.y + this.height!) {\n                    this.dragging = true;\n                    this.onClick();\n            }\n        }\n    }\n\n    onMouseUp(e: MouseEvent) {\n        if(this.dragging) {\n            this.dragging = false;\n            const event = new CustomEvent(\"dndDrop\",\n                {\n                    detail: {\n                        x: e.offsetX,\n                        y: e.offsetY,\n                        button: this\n                    }\n                }\n            );\n            document.body.dispatchEvent(event);\n        }\n        \n    }\n\n}\n","// import { WRAP, CONDIMENTS } from \"./food.js\";\nimport { Button } from \"./button.js\";\nimport GameEngine from \"./gameEngine.js\";\nimport { ASSET_MANAGER } from \"./main.js\";\n\nexport default class OrderManager {\n    game: GameEngine;\n    activeOrders: any[];\n    orderButton!: Button;\n    showOrder: boolean;\n\n    constructor(game: GameEngine) {\n        this.game = game;\n        this.activeOrders = [];\n        this.showOrder = false;\n        this.addButton();\n    }\n\n    addOrder(order: any) {\n        this.activeOrders.push(order);\n    }\n\n    removeOrder(order: any) {\n        this.activeOrders = this.activeOrders.filter(o => o !== order);\n    }\n\n    getOrders() {\n        return this.activeOrders;\n    }   \n\n    getOrderLength () {\n        return this.activeOrders.length;\n    }\n\n    addButton() {\n        this.orderButton = Button.rectButton(this.game, 150, 0, 200, 50, () => {\n            this.showOrder = !this.showOrder;\n            console.log(this.showOrder)\n            console.log(this.activeOrders.length);\n        }, \"ORDERS\") \n        this.orderButton.persistent = true;\n        this.orderButton.hidden = false;\n        this.game.addEntity(this.orderButton);\n    }\n\n    update() {\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if (this.showOrder && this.activeOrders.length > 0) {\n            console.log(\"draw method\")\n            const length = 8 * 40\n            ctx.fillStyle = \"white\";\n            ctx.fillRect(150, 50, 200, length);\n            ctx.fillStyle = \"black\";\n            ctx.strokeRect(150, 50, 200, length);\n\n            ctx.font = \"20px Arial\";\n            ctx.textAlign = \"center\";\n            const order = this.activeOrders[0];\n            \n            const placement = length + 95;\n            for (let i = 0; i < order.ingredients.length + order.sides.length; i++) {\n                let yOffset = placement - i * 30; // Increment placement upwards as index increases\n                    if (i < order.ingredients.length) {\n                        if (order.ingredients[i].type === \"rice\" || order.ingredients[i].type === \"nori\") {\n                            ctx.fillText(order.ingredients[i].type, 150, yOffset);\n                        } else {\n                            const sprite = ASSET_MANAGER.getAsset(order.ingredients[i].img) as HTMLImageElement;\n                            ctx.drawImage(sprite, 150 - sprite.width / 2, yOffset - sprite.height); // Adjust for sprite height\n                        }\n                    } else if (order.sides.length > 0) {\n                        ctx.fillText(order.sides[i - order.ingredients.length].type, 150, yOffset);\n                    }\n            }\n        }\n        \n    };\n}  \n    ","import GameEngine from \"src/gameEngine\";\nimport GameObject from \"src/gameObject.js\"\n\nexport default class ProgressBar extends GameObject{\n    game: GameEngine\n    x: number\n    y: number\n    width: number\n    height: number\n    progress: number\n\n    constructor(game: GameEngine, x: number, y: number, width: number, height: number) {\n        super(game);\n        this.game = game\n        this.x = x\n        this.y = y\n        this.width = width\n        this.height = height\n        this.progress = 0.01\n    }\n\n    update() {\n        if(this.progress >= 1) {\n            this.game.win = true\n            const currentData = this.game.addSharedData(\"riceCooker\");\n            const newAmount = currentData ? currentData.amount + 5 : 5;\n            this.game.addSharedData(\"riceCooker\", {amount: newAmount});\n            setTimeout(() => {\n                this.game.sceneManager.loadScene(\"rice\")\n            }\n            , 2000)\n            return\n        }\n        if(this.game.spinning && this.progress < 1) {\n            this.progress += 0.001\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.fillStyle = 'green';\n        ctx.fillRect(this.x, this.y, this.width * this.progress, this.height);\n    }\n}","/**\n * @param {Number} n\n * @returns Random Integer Between 0 and n-1\n */\nexport const randomInt = (n: number) => Math.floor(Math.random() * n);\n\n/**\n * @param {Number} n\n * @returns Random Number Between start and end\n */\nexport const randomIntRange = (start: number, end: number) => Math.random() * (end - start) + start;\n\n/**\n * @param {Number} r Red Value\n * @param {Number} g Green Value\n * @param {Number} b Blue Value\n * @returns String that can be used as a rgb web color\n */\nexport const rgb = (r: number, g: number, b: number) => `rgba(${r}, ${g}, ${b})`;\n\n/**\n * @param {Number} r Red Value\n * @param {Number} g Green Value\n * @param {Number} b Blue Value\n * @param {Number} a Alpha Value\n * @returns String that can be used as a rgba web color\n */\nexport const rgba = (r: number, g: number, b: number, a: number) => `rgba(${r}, ${g}, ${b}, ${a})`;\n\n/**\n * @param {Number} h Hue\n * @param {Number} s Saturation\n * @param {Number} l Lightness\n * @returns String that can be used as a hsl web color\n */\nexport const hsl = (h: number, s: number, l: number) => `hsl(${h}, ${s}%, ${l}%)`;\n\n/**\n * Returns distance from two points\n * @param {Number} p1, p2 Two objects with x and y coordinates\n * @returns Distance between the two points\n */\ntype Point = {\n    x: number;\n    y: number;\n};\nexport const getDistance = (p1: Point, p2: Point) => {\n    return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n};\n\n/**\n * Checks if two circles are colliding\n * @param {Object} circle1 First circle { x, y, radius }\n * @param {Object} circle2 Second circle { x, y, radius }\n * @returns {Boolean} True if the circles are colliding, otherwise false\n */\ntype Circle = {\n    x: number;\n    y: number;\n    radius: number;\n};\nexport const isColliding = (circle1: Circle, circle2: Circle) => {\n    let distance = getDistance(circle1, circle2);\n    return distance < (circle1.radius + circle2.radius);\n};\n\n\nexport const pointInBoxCollision = (bx: number, by: number, bw: number, bh: number, px: number, py: number) => {\n    return px > bx && px < bx + bw && py > by && py < by + bh;\n}","import GameEngine from \"src/gameEngine\"\nimport GameObject from \"src/gameObject.js\"\nimport { ASSET_MANAGER } from \"src/main.js\"\nimport { getDistance } from \"src/util.js\"\n\nexport class PotTop extends GameObject {\n    game: GameEngine\n    x: number\n    y: number\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game\n        this.x = x\n        this.y = y\n    }\n\n    update() {\n        if(this.game.timer.gameTime - this.game.previousMousePositionsLatest > 0.5) {\n            this.game.previousMousePositions = []\n            this.game.spinning = false\n        }\n        if(this.game.previousMousePositions.length === 15) {\n            let avgPos = this.game.previousMousePositions.reduce((acc: {x: number, y: number}, curr: {x: number, y: number}) => {\n                return {x: acc.x + curr.x, y: acc.y + curr.y}\n            }, {x: 0, y: 0})\n            avgPos.x /= 15\n            avgPos.y /= 15\n\n            if(getDistance(avgPos, {x: this.x, y: this.y}) > 250) {\n                //console.log(\"too far\")\n                this.game.spinning = false\n                return\n            }\n\n            //console.log(avgPos)\n\n            let avgDist = this.game.previousMousePositions.reduce((acc: number, curr: {x: number, y: number}) => {\n                return acc + Math.sqrt(Math.pow(curr.x - avgPos.x, 2) + Math.pow(curr.y - avgPos.y, 2))\n            }, 0)\n            avgDist /= 15\n\n            //console.log(avgDist)\n\n            if(avgDist < 200) {\n                console.log(\"spinning\")\n                this.game.spinning = true\n            } else {\n                this.game.spinning = false\n            }\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        const WIDTH = 750\n        const HEIGHT = 750\n        const sprite = ASSET_MANAGER.getAsset('./assets/pot_top.png')\n        ctx.drawImage(sprite, this.x - (WIDTH / 2), this.y - (HEIGHT / 2), WIDTH, HEIGHT);\n    }\n}\n\nexport class PotTopOutside extends GameObject {\n    game: GameEngine\n    x: number\n    y: number\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game)\n        this.game = game\n        this.x = x\n        this.y = y\n    }\n\n    update() {\n        \n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        const WIDTH = 750\n        const HEIGHT = 750\n        const sprite = ASSET_MANAGER.getAsset('./assets/pot_top_outside.png')\n        ctx.drawImage(sprite, this.x - (WIDTH / 2), this.y - (HEIGHT / 2), WIDTH, HEIGHT);\n    }\n}","import GameEngine from \"src/gameEngine\"\nimport GameObject from \"src/gameObject.js\"\nimport { randomIntRange } from \"src/util.js\"\n\nconst COLORS = [\n    '#f5f5f5',\n    '#f8f8f8',\n    '#fafafa',\n    '#fcfcfc',\n    '#ffffff',\n    '#fefefe',\n    '#fdfdfd',\n    '#fbfbfb',\n    '#f7f7f7',\n    '#f4f4f4'\n]\n\nexport default class RiceGrain extends GameObject{\n    game: GameEngine\n    angle: number\n    distance: number\n    centerX: number\n    centerY: number\n    x: number\n    y: number\n    rotation: number\n    color: string\n\n    constructor(game: GameEngine, angle: number, distance: number, centerX: number, centerY: number) {\n        super(game);\n        this.game = game\n        this.angle = angle\n        this.distance = distance\n        this.centerX = centerX\n        this.centerY = centerY\n        this.x = 0\n        this.y = 0\n        this.rotation = randomIntRange(0, Math.PI * 2)\n        this.color = COLORS[Math.floor(Math.random() * COLORS.length)]\n    }\n\n    update() {\n        if(this.game.spinning) {\n            this.angle += Math.PI / 180\n        }\n        this.x = this.distance * Math.cos(this.angle) + this.centerX\n        this.y = this.distance * Math.sin(this.angle) + this.centerY\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        //console.log(this.x, this.y)\n        ctx.strokeStyle = 'black';\n        ctx.fillStyle = this.color;\n        ctx.beginPath();\n        ctx.ellipse(this.x, this.y, 20, 4, this.rotation, 0, 2 * Math.PI);\n        ctx.stroke();\n        ctx.fill();\n    }\n}","import GameEngine from \"src/gameEngine\"\nimport GameObject from \"src/gameObject.js\"\nimport { ASSET_MANAGER } from \"src/main.js\"\n\nexport default class RotateIcon extends GameObject {\n    game: GameEngine\n    x: number\n    y: number\n    angle: number\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game\n        this.x = x\n        this.y = y\n        this.angle = Math.PI / 3\n    }\n\n    update() {\n        this.angle += Math.PI / 180\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        const WIDTH = 450\n        const HEIGHT = 450\n        const sprite = ASSET_MANAGER.getAsset('./assets/rotate.png')\n        ctx.save();\n        ctx.translate(1024/2,768/2);\n        ctx.rotate(this.angle);\n        ctx.drawImage(sprite, -WIDTH/2, -HEIGHT/2, WIDTH, HEIGHT);\n        ctx.restore();\n        \n    }\n}\n\n","import GameEngine from \"src/gameEngine\";\nimport GameObject from \"src/gameObject.js\"\nimport { ASSET_MANAGER } from \"src/main.js\"\n\nexport default class Hand extends GameObject {\n    game: GameEngine\n    x: number\n    y: number\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game\n        this.x = x\n        this.y = y\n    }\n\n    update() {\n        if (this.game.mouse) {\n            this.x = this.game.mouse.x\n            this.y = this.game.mouse.y\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        const w = 300\n        const h = 300\n        const sprite = ASSET_MANAGER.getAsset('./assets/hand.png')\n        ctx.drawImage(sprite, this.x - (w / 2), this.y - (h / 2), w, h);\n    }\n}","import { ASSET_MANAGER } from \"src/main\";\nimport GameObject from \"src/gameObject\";\nimport GameEngine from \"src/gameEngine\";\n\nexport default class Checkmark extends GameObject{\n    game: GameEngine\n    ASSET_MANAGER: ASSET_MANAGER\n    x: number\n    y: number\n    start: boolean\n    show: boolean\n    timeShown: number\n    timesFlashed: number\n    audioPlayed: boolean\n\n    constructor(game: GameEngine, ASSET_MANAGER: ASSET_MANAGER, x: number, y: number) {\n        super(game);\n        this.game = game\n        this.ASSET_MANAGER = ASSET_MANAGER\n        this.x = x\n        this.y = y\n        this.start = false\n        this.show = false\n        this.timeShown = 0\n        this.timesFlashed = 0\n        this.audioPlayed = false\n    }\n\n    update() {\n        if(this.game.win) {\n            this.start = true\n            if(!this.audioPlayed) {\n                this.ASSET_MANAGER.playAsset('./assets/sounds/jingle.mp3')\n                this.audioPlayed = true\n            }\n        }\n        if (this.start && this.timesFlashed < 6) {\n            this.timeShown++\n            if (this.timeShown >= 20) {\n                this.show = !this.show\n                this.timeShown = 0\n                this.timesFlashed++\n            }\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if(this.show) {\n            const WIDTH = 500\n            const HEIGHT = 500\n            ctx.drawImage(ASSET_MANAGER.getAsset('./assets/checkmark.png'), this.x - (WIDTH / 2), this.y - (HEIGHT / 2), WIDTH, HEIGHT);\n        }\n    }\n}","import GameEngine from \"./gameEngine\";\nimport GameObject from \"./gameObject\";\n\nexport default class Scene {\n    game: GameEngine;\n    gameObjects: Array<GameObject>;\n\n    constructor(game: GameEngine) {\n        if (this.constructor == Scene) {\n            throw new Error(\"Abstract classes can't be instantiated.\");\n        }\n        this.game = game;\n        this.gameObjects = [];\n    }\n\n    initalizeScene() { \n        // This is where you would add all of the game objects to the scene\n    }\n\n    addGameObject(gameObject: GameObject) {\n        console.log(this)\n        this.gameObjects.push(gameObject);\n        this.game.addEntity(gameObject);\n    }\n\n    addPersistantGameObject(id: string) {\n        let obj = this.game.getPersistentGameObject(id);\n        if (!obj) {\n            return false;\n        }\n        this.addGameObject(obj);\n        return true;\n    }\n\n    deload() {\n        this.gameObjects.forEach(gameObject => {\n            if (gameObject.persistent) {\n                return;  \n            }\n            gameObject.deload();\n        })\n        this.gameObjects = []\n    }\n\n    // Stub methods since its technically a game object\n    draw(ctx: CanvasRenderingContext2D) {}\n    update() {}\n}","import { ASSET_MANAGER } from \"src/main.js\";\nimport ProgressBar from \"./progressBar.js\";\nimport { PotTop, PotTopOutside } from \"./pot.js\";\nimport RiceGrain from \"./riceGrain.js\";\nimport RotateIcon from \"./rotate.js\";\nimport Hand from \"./hand.js\";\nimport Checkmark from \"./checkmark.js\";\nimport Scene from \"src/scene.js\";\nimport GameObject from \"src/gameObject.js\";\nimport GameEngine from \"src/gameEngine.js\";\n\nconst WIDTH = 1024\nconst HEIGHT = 768\n\nconst POT_RADIUS = 250\n\nexport class WashThatRiceScene extends Scene {\n    game: GameEngine;\n    x: number;\n    y: number;\n    spritesheet: HTMLImageElement;\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game;\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/backgrounds/Station_Background.png\");\n        this.x = x;\n        this.y = y;\n    }\n\n    initalizeScene() {\n        super.addGameObject(new Background(this.game, 0, 0));\n\n        super.addGameObject(new ProgressBar(this.game, 0, HEIGHT - 20, 1024, 20));\n\t\n        super.addGameObject(new PotTop(this.game, (WIDTH / 2), (HEIGHT / 2)));\n    \n        \n        let amountOfGrains = 2;\n        for(let distance = 0; distance < POT_RADIUS; distance += 20) {\n            for(let angle = 0; angle < Math.PI * 2; angle += Math.PI * 2 / amountOfGrains) {\n                let rice = new RiceGrain(this.game, angle, distance, (WIDTH / 2), (HEIGHT / 2));\n                super.addGameObject(rice);\n            }\n            amountOfGrains += 10;\n        }\n        \n        super.addGameObject(new PotTopOutside(this.game, (WIDTH / 2), (HEIGHT / 2)));\n    \n        super.addGameObject(new RotateIcon(this.game, (WIDTH / 2), (HEIGHT / 2)));\n        \n        super.addGameObject(new Hand(this.game, 0, 0));\n        \n        super.addGameObject(new Checkmark(this.game, ASSET_MANAGER, (WIDTH / 2), (HEIGHT / 2)));\n    }\n}\n\nclass Background extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    spritesheet: HTMLImageElement;\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/backgrounds/Station_Background.png\");\n    };\n\n    update() {\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.spritesheet, 0, 0);\n    };\n}\n\n\n","import GameObject from \"src/gameObject.js\";\n\nexport default class TimerBar extends GameObject {\n    constructor(gameEngine, totalTime) {\n        super(gameEngine);\n        this.gameEngine = gameEngine;\n        this.totalTime = totalTime; \n        this.elapsedTime = 0; \n        this.isCooking = false; \n        this.isDone = false; \n        this.result = null; \n\n        \n        this.perfectStart = this.totalTime * 0.8;\n        this.perfectEnd = this.totalTime;\n\n        this.x = 237; // X \n        this.y = 650; // Y \n        this.width = 550; // Width \n        this.height = 20; // Height\n    }\n\n    \n    start() {\n        if (!this.isCooking && !this.isDone) {\n            this.isCooking = true;\n            this.elapsedTime = 0;\n            this.result = null;\n            //console.log(\"TimerBar started!\"); \n        }\n    }\n\n    \n    stop() {\n        if (this.isCooking) {\n            this.isCooking = false;\n            this.isDone = true;\n\n            // Determine the result based on elapsed time\n            if (this.elapsedTime < this.perfectStart) {\n                this.result = \"undercooked\";\n            } else if (this.elapsedTime >= this.perfectStart && this.elapsedTime <= this.perfectEnd) {\n                this.result = \"perfect\";\n                const currentData = this.game.addSharedData(\"riceCooker\");\n                const newAmount = currentData ? currentData.amount + 5 : 5;\n                this.game.addSharedData(\"riceCooker\", {amount: newAmount});\n                setTimeout(() => {\n                    this.game.sceneManager.loadScene(\"rice\")\n                }\n                , 2000)\n            } else {\n                this.result = \"overcooked\";\n            }\n\n            //console.log(`Cooking stopped! Result: ${this.result}`); \n        }\n    }\n\n    update() {\n        if (this.isCooking) {\n            this.elapsedTime += this.gameEngine.clockTick;\n\n            // Automatically stop if time exceeds totalTime\n            if (this.elapsedTime >= this.totalTime) {\n                this.stop();\n            }\n        }\n    }\n\n    draw(ctx) {\n        \n        ctx.fillStyle = \"lightgray\";\n        ctx.fillRect(this.x, this.y, this.width, this.height);\n\n        \n        const progressWidth = (this.elapsedTime / this.totalTime) * this.width;\n        ctx.fillStyle = \"blue\";\n        ctx.fillRect(this.x, this.y, progressWidth, this.height);\n\n        \n        const perfectStartX = this.x + (this.perfectStart / this.totalTime) * this.width;\n        const perfectEndX = this.x + (this.perfectEnd / this.totalTime) * this.width;\n        ctx.fillStyle = \"rgba(0, 255, 0, 0.3)\"; // Semi-transparent green\n        ctx.fillRect(perfectStartX, this.y, perfectEndX - perfectStartX, this.height);\n\n        \n        if (this.isDone) {\n            ctx.fillStyle = \"black\";\n            ctx.font = \"16px Arial\";\n            ctx.fillText(`Result: ${this.result}`, this.x, this.y + this.height + 20);\n        }\n    }\n}","import GameObject from \"src/gameObject.js\";\nimport { ASSET_MANAGER } from \"src/main.js\";\nimport TimerBar from \"./timerBar.js\";\nimport GameEngine from \"src/gameEngine.js\";\n\nexport default class RiceCooker extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    w: number;\n    h: number;\n\n    constructor(game: GameEngine) {\n        super(game);\n        this.game = game;\n        this.x = 237;\n        this.y = 100;\n        this.w = 550;\n        this.h = 525;\n\n        this.clicked = false;\n    }\n\n    onMouseDown(e: MouseEvent) {\n        if (this.isClicked(e.clientX, e.clientY)) {\n            this.handleClick();\n        }\n    }\n\n    onMouseUp(e: MouseEvent) {\n        if(this.isClicked(e.clientX, e.clientY)) {\n            this.handleClick();\n        }\n    }\n\n    isClicked(mouseX: number, mouseY: number) {\n        return (\n            mouseX >= this.x &&\n            mouseX <= this.x + this.w &&\n            mouseY >= this.y &&\n            mouseY <= this.y + this.h\n        );\n    }\n\n    handleClick() {\n        const timerBar = this.game.entities.find(entity => entity instanceof TimerBar);\n\n        if (timerBar) {\n            if (!this.clicked) {\n                this.clicked = true;\n                timerBar.start();\n                //console.log(\"RiceCooker clicked! Timer started.\");\n            } else {\n                this.clicked = false;\n                timerBar.stop();\n                //console.log(\"RiceCooker clicked again! Timer stopped.\");\n            }\n        }\n    }\n\n    update() {\n        \n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        //console.log(\"RiceCooker draw method called\");\n        const off = ASSET_MANAGER.getAsset(\"./assets/objects/RiceCooker_Off.png\") as HTMLImageElement;\n        const on = ASSET_MANAGER.getAsset(\"./assets/objects/RiceCooker_On.png\") as HTMLImageElement;\n\n        ctx.drawImage(off, this.x, this.y, this.w, this.h);\n\n        if (this.clicked) {\n            ctx.drawImage(on, this.x, this.y, this.w, this.h);\n            ctx.strokeStyle = \"red\";\n            ctx.lineWidth = 3;\n            ctx.strokeRect(this.x, this.y, this.w, this.h);\n        }\n    }\n}","import RiceCooker from \"./ricecooker.js\";\nimport TimerBar from \"./timerBar.js\";\nimport { ASSET_MANAGER } from \"src/main.js\";\nimport Scene from \"src/scene.js\";\nimport GameEngine from \"src/gameEngine.js\";\nimport GameObject from \"src/gameObject.js\";\n\n\nexport class DontBurnRiceScene extends Scene {\n    game: GameEngine;\n    x: number;\n    y: number;\n    \n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n    };\n\n    initalizeScene() {\n        this.addGameObject(new Background(this.game, 0, 0));\n        let timeBar = new TimerBar(this.game, 10);\n        let riceCooker = new RiceCooker(this.game);\n        this.addGameObject(riceCooker);\n        this.addGameObject(timeBar);\n\n    }\n}\n\nclass Background extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    spritesheet: HTMLImageElement;\n    \n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/backgrounds/Minigame_Background.png\") as HTMLImageElement;\n    };\n\n    update() {\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.spritesheet, 0, 0);\n    };\n}\n","import GameEngine from \"src/gameEngine\";\nimport GameObject from \"src/gameObject.js\";\nimport { ASSET_MANAGER } from \"src/main.js\";\n\nexport default class Pot extends GameObject {\n    game: GameEngine;\n    liters: number;\n    spritesheet: HTMLImageElement;\n    width: number;\n    height: number;\n    x: number;\n    y: number;\n    \n    constructor(game: GameEngine) {\n        super(game);\n        this.game = game;\n        this.liters = 0;\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/objects/Pot_Animation.png\") as HTMLImageElement;\n        this.width = 380;\n        this.height = 300;\n        this.x = 322;\n        this.y = 386;\n    };\n\n    update() {\n        \n\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if (this.liters == 0) {\n            ctx.drawImage(this.spritesheet, 0, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 100) {\n            ctx.drawImage(this.spritesheet, 380, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 200) {\n            ctx.drawImage(this.spritesheet, 760, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 300) {\n            ctx.drawImage(this.spritesheet, 1140, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 400) {\n            ctx.drawImage(this.spritesheet, 1520, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 500) {\n            ctx.drawImage(this.spritesheet, 1900, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 600) {\n            ctx.drawImage(this.spritesheet, 2280, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 700) {\n            ctx.drawImage(this.spritesheet, 2660, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else if (this.liters <= 800) {\n            ctx.drawImage(this.spritesheet, 3040, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        } else {\n            ctx.drawImage(this.spritesheet, 3420, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n        }\n    };\n}\n","import Pot from \"./pot.js\";\nimport Faucet from \"./faucet.js\";\nimport { ASSET_MANAGER } from \"src/main.js\";\nimport Scene from \"src/scene.js\";\nimport GameObject from \"src/gameObject.js\";\nimport GameEngine from \"src/gameEngine.js\";\n\n\nexport class FillThePotScene extends Scene {\n    game: GameEngine;\n    x: number;\n    y: number;\n    \n    constructor(game: GameEngine, x: number, y: number) {\n        super(game)\n        this.game = game;\n        this.x = x;\n        this.y = y;\n    };\n\n    initalizeScene() {\n        this.addGameObject(new Background(this.game, 0, 0));\n        const pot = new Pot(this.game)\n        this.addGameObject(pot);\n        this.addGameObject(new Faucet(this.game, pot));\n    }\n}\n\nclass Background extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    spritesheet: HTMLImageElement;\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/backgrounds/FillThePot_Background.png\") as HTMLImageElement;\n    };\n\n    update() {\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.spritesheet, 0, 0);\n    };\n}","import GameObject from \"./gameObject.js\";\nimport { ASSET_MANAGER } from \"./main.js\";\nimport GameEngine from \"./gameEngine.js\";\n\nexport default class Background extends GameObject {\n    game: GameEngine;\n    spritesheet: HTMLImageElement;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n\n    constructor(game: GameEngine, spritesheet: string, x = 0, y = 0, width = 0, height = 0) {\n        super(game, 'background');\n        this.game = game;\n        this.spritesheet = ASSET_MANAGER.getAsset(spritesheet) as HTMLImageElement;\n        this.x = x;\n        this.y = y;\n\n\n        if (width == 0 && height == 0) {\n            this.width = this.spritesheet.width;\n            this.height = this.spritesheet.height;\n        } else{\n            this.width = width;\n            this.height = height;\n        }\n    }\n\n    update() {\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.spritesheet, this.x, this.y, this.width, this.height);\n    }\n}","export class Order {\n    ingredients: Ingredient[]\n    sides: Side[]\n\n    constructor(ingredients: Ingredient[], sides: Side[]) {\n        this.ingredients = ingredients\n        this.sides = sides\n    }\n}\n\nexport default class Ingredient {\n    type: string\n    img: string\n\n    constructor(type: string, img: string) {\n        this.type = type;\n        this.img = img;\n    }\n}\n\nclass Wrap extends Ingredient {\n    type: string\n    img: string\n    \n    constructor(type: string, img: string) {\n        super(type, img);\n        this.type = type;\n        this.img = img;\n    }\n}\n\nclass Side {\n    type: string;\n\n    constructor(type: string) {\n        this.type = type\n    }\n}\n\n\nexport const WRAP = [\n    new Wrap('rice', \"./assets/objects/Rice_Cooked.png\"),\n    new Wrap('nori', \"./assets/objects/Nori.png\"),\n]\n\nexport const INGREDIENTS = [\n    new Ingredient('crab', \"./assets/assembly/crab.png\"),\n    new Ingredient('avocado', \"./assets/assembly/avocado.png\"),\n    new Ingredient('cucmber', \"./assets/assembly/cucumber.png\"),\n    new Ingredient('salmon', \"./assets/assembly/salmon.png\"),\n    new Ingredient('tamago', \"./assets/assembly/tamago.png\"),\n    new Ingredient('tuna',  \"./assets/assembly/tuna.png\"),\n    new Ingredient('uni',  \"./assets/assembly/uni.png\"),\n\n]\n\nexport const CONDIMENTS = [\n    new Side('wasabi'),\n    new Side('ginger')\n]\n\nexport const SIDES = [\n    new Side('miso soup'),\n    new Side('karaage'),\n    new Side('edamame'),\n    new Side('takoyaki')\n]\n","import GameObject from \"src/gameObject.js\"; \nimport { ASSET_MANAGER, orderManage } from \"src/main.js\";\nimport { Order, INGREDIENTS, WRAP, CONDIMENTS, SIDES } from \"./food.js\";\nimport { Button } from \"src/button.js\";\nimport GameEngine from \"src/gameEngine.js\";\nimport Scene from \"src/scene.js\";\nimport { randomIntRange } from \"src/util.js\";\n\nexport default class Customer extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game, 'customer', true);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/characters/dummy.png\");\n        this.width = 400;\n        this.height = 600;\n        this.order = null;\n        this.showOrder = false;\n        this.orderAdded = false;\n        this.showCustomer = false;\n        this.hasWalked = false;\n        this.addButton();\n    };\n\n    update() {\n        if (!this.hasWalked) {\n            this.walkTo(100);\n            this.hasWalked = true;\n        } else {\n            if (!this.showOrder && !this.orderAdded) {\n                this.displayOrder();\n            }\n        }\n\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.spritesheet, this.x, this.y, this.width, this.height);\n        if(this.showOrder && !this.orderAdded) {\n            const length = (WRAP.length + 3 + CONDIMENTS.length + 1) * 40\n            ctx.fillStyle = \"white\";\n            ctx.fillRect(500, 100, 200, length);\n            ctx.fillStyle = \"black\";\n            ctx.strokeRect(500, 100, 200, length);\n            const placement = length + 95;\n            ctx.font = \"20px Arial\";\n            ctx.textAlign = \"center\";\n            for (let i = 0; i < this.order.ingredients.length + this.order.sides.length; i++) {\n                let yOffset = placement - i * 30; // Increment placement upwards as index increases\n                if (i < this.order.ingredients.length) {\n                    if (this.order.ingredients[i].type === \"rice\" || this.order.ingredients[i].type === \"nori\") {\n                        ctx.fillText(this.order.ingredients[i].type, 600, yOffset);\n                    } else {\n                        const sprite = ASSET_MANAGER.getAsset(this.order.ingredients[i].img) as HTMLImageElement;\n                        ctx.drawImage(sprite, 600 - sprite.width / 2, yOffset - sprite.height); // Adjust for sprite height\n                    }\n                } else if (this.order.sides.length > 0) {\n                    ctx.fillText(this.order.sides[i - this.order.ingredients.length].type, 600, yOffset);\n                }\n            }\n            this.okButton.hidden = false;\n        }\n    };\n\n    walkTo(y: number) {\n        let intervalID = setInterval(() => {\n            if(this.y === y) {\n                clearInterval(intervalID);\n                this.hasWalked = true;\n            }\n            if (this.y < y) {\n                this.y += 5;\n            }\n            if (this.y > y) {\n                this.y -= 5;\n            }\n        }, 20);\n    }\n\n    displayOrder() {\n        this.order = this.randomOrder();\n        this.showOrder = true;\n    }\n\n    addButton() {\n        this.okButton = Button.rectButton(this.game, 750, 400, 100, 50, () => {\n            this.orderAdded = true;\n            this.okButton.hidden = true;\n            orderManage.addOrder(this.order);\n        }, \"OK\") \n        this.okButton.persistent = true;\n        this.okButton.hidden = true;\n        if(this.game.currentScene) this.game.currentScene.addGameObject(this.okButton);\n\n    }\n\n    randomOrder() {\n        // Helper function to get random elements from an array\n        function getRandomElements(array: any[], count: number) {\n            let shuffled = array.slice().sort(() => 0.5 - Math.random()); // Shuffle the array\n            return shuffled.slice(0, count); // Pick the first 'count' elements\n        }\n\n        const numWrap = randomIntRange(2, WRAP.length);\n        const numIngredients = randomIntRange(1, 3);\n        const numCondiments = randomIntRange(0, CONDIMENTS.length);\n        const numSides = randomIntRange(0, 1);\n\n        const selectedWraps = getRandomElements(WRAP, numWrap);\n        const selectedIngredients = getRandomElements(INGREDIENTS, numIngredients);\n        const selectedCondiments = getRandomElements(CONDIMENTS, numCondiments);\n        const selectedSides = getRandomElements(SIDES, numSides);\n\n        return new Order(\n            [...selectedWraps, ...selectedIngredients],\n            [...selectedCondiments, ...selectedSides]\n        );\n    }\n\n}","\nimport Scene from 'src/scene.js';\nimport  Background  from \"src/background.js\";\nimport GameObject from 'src/gameObject.js'; \nimport { ASSET_MANAGER, customerManage, orderManage } from \"src/main.js\";\nimport Customer from './customer.js'; \nimport { Button } from \"src/button.js\";\nimport GameEngine from 'src/gameEngine.js';\n\nexport class CounterScene extends Scene {\n    game: GameEngine;\n    x: number;\n    y: number;\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game);\n        this.game = game;\n        this.x = x;\n        this.y = y;\n    };\n\n    initalizeScene() { \n        this.addGameObject(new Background(this.game, \"./assets/backgrounds/Order_Background.png\"));\n        if(!this.addPersistantGameObject(\"customer\")) {\n            console.log(\"Did not find customer\");\n            this.addGameObject(new Customer(this.game, 100, 200));\n        }\n        this.addGameObject(new Background(this.game, \"./assets/backgrounds/Order_Foreground.png\")); \n    \n    }\n}\n","import { ASSET_MANAGER } from \"src/main.js\";\nimport  Background  from \"src/background.js\";\nimport Scene from \"src/scene.js\";\nimport GameObject from \"src/gameObject.js\";\nimport { sceneManage, rollManage } from 'src/main.js';\nimport { DnDButton } from \"src/button.js\";\nimport Ingredient from \"src/scenes/counter/food.js\";\nimport { WRAP } from \"src/scenes/counter/food.js\";\nimport GameEngine from \"src/gameEngine\";\n\nexport class RiceStationScene extends Scene { \n    game: GameEngine;\n    \n    constructor(game: GameEngine) {\n            super(game);\n            this.game = game;\n        };\n\n    initalizeScene() {\n            super.addGameObject(new Background(this.game, \"./assets/backgrounds/Station_Background.png\"));\n\n            super.addGameObject(new BambooMat(this.game, 450, 375));\n\n            const riceCooker = new RiceCooker(this.game, 10, 10, 512, 512)\n            super.addGameObject(riceCooker);\n\n            const nori = new Nori(this.game, 500, 80, 450, 300)\n            super.addGameObject(nori);\n\n        }\n}\n\nclass RiceCooker extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    amount: number;\n    cookerClicked: boolean;\n    spritesheet: HTMLImageElement;\n    dnd!: DnDButton;\n    \n    constructor(game: GameEngine, x: number, y: number, width: number, height: number) {\n        super(game, 'riceCooker');\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.amount = 0;\n        this.cookerClicked = false;\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/objects/RiceCooker.png\") as HTMLImageElement;\n        this.addButton();\n        super.loadSharedData();\n    }\n\n    addButton() {\n        this.dnd = DnDButton.transparentImageButton(this.game, this.x, this.y, this.width, this.height, WRAP[0].img, () => {\n            console.log(\"clicked on rice cooker\");\n            this.cookerClicked = true;\n        });\n        this.dnd.width = this.width;\n        this.dnd.height = this.height;\n        this.dnd.food = WRAP[0];\n        this.dnd.persistent = true;\n        this.dnd.id = 'ricesourcebuttons';\n        if(this.game.currentScene) this.game.currentScene.addGameObject(this.dnd);\n    }\n\n    update() {\n        if (this.cookerClicked) {\n            \n            if (this.amount == 0) {\n                this.beginMinigame();\n                this.amount = 5;\n            }\n            this.amount--;\n            this.cookerClicked = false;\n        }\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.spritesheet, this.x, this.y);\n    };\n\n    beginMinigame() {\n        const minigame = Math.floor(Math.random() * 3);\n        console.log(minigame);\n        if (minigame == 0) {\n            sceneManage.loadScene(\"fill\");\n            console.log(\"minigame 1\")\n        } else if (minigame == 1) {\n            sceneManage.loadScene(\"burn\");\n            console.log(\"minigame 2\")\n        } else if (minigame == 2) {\n            sceneManage.loadScene(\"wash\");\n            console.log(\"minigame 3\")\n        }\n    }   \n}\n\nclass Nori extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    spritesheet: HTMLImageElement;\n    dnd: DnDButton;\n\n    constructor(game: GameEngine, x: number, y: number, width: number, height: number) {\n        super(game, 'norisource');\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/objects/Nori_Source.png\");\n        this.addButton();\n    };\n\n    addButton() {\n        this.dnd = DnDButton.transparentImageButton(this.game, this.x, this.y, this.width, this.height, WRAP[1].img, () => {\n        });\n        this.dnd.width = this.width;\n        this.dnd.height = this.height;\n        this.dnd.food = WRAP[1];\n        this.dnd.persistent = true;\n        this.dnd.id = 'norisourcebutton'\n        if(this.game.currentScene) this.game.currentScene.addGameObject(this.dnd);\n    }\n\n    update() {\n\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.spritesheet, this.x, this.y);\n\n    };\n}\n\nclass BambooMat extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    ingredients: Ingredient[];\n    spritesheet: HTMLImageElement;\n\n    constructor(game: GameEngine, x: number, y: number) {\n        super(game, 'bamboomat');\n        this.x = x;\n        this.y = y\n        this.ingredients = [];\n        this.spritesheet = ASSET_MANAGER.getAsset(\"./assets/objects/BambooMat.png\");\n    };\n\n    update() {\n        \n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.spritesheet, this.x, this.y);\n        const centerX = this.x + (this.spritesheet.width / 2)\n        const centerY = this.y + (this.spritesheet.height / 2)\n\n        // Draw the ingredients on top of the bamboo mat\n        this.ingredients.forEach(element => {\n            const img = ASSET_MANAGER.getAsset(element.img)\n            ctx.drawImage(img, this.x, this.y);\n            // ctx.drawImage(img, centerX - (img.width / 2) + element.xOffset, centerY - (img.height / 2) + element.yOffset, img.width, img.height);\n        });\n    };\n\n    onDnDDrop(e: CustomEvent) {\n        // console.log(e);\n        // console.log(e.detail)\n        // console.log(e.detail.y);\n        if(e.detail.x >= this.x && e.detail.x <= this.x + 512 &&\n            e.detail.y >= this.y && e.detail.y <= this.y + 512) {\n            console.log(\"dropped in food bottom\");\n            this.ingredients.push(e.detail.button.food);\n            rollManage.addIngredient(new Ingredient(e.detail.button.food.type, e.detail.button.food.img));\n        }\n    }\n}\n","import Background from 'src/background.js';\nimport Scene from 'src/scene.js';\nimport GameObject from 'src/gameObject.js';\nimport { ASSET_MANAGER } from \"src/main.js\";\nimport { Button, DnDButton } from \"src/button.js\";\nimport { rollManage , orderManage } from 'src/main.js';\nimport Ingredient from \"src/scenes/counter/food.js\";\nimport GameEngine from 'src/gameEngine';\n\nexport class RiceAssemblyScene extends Scene {\n    game: GameEngine;\n    foodBottom: FoodBottom | undefined;\n    rollButton: Button | undefined;\n    \n    constructor(game: GameEngine) {\n        super(game);\n        this.game = game;\n    };\n\n    initalizeScene() {\n\n        super.addGameObject(new Background(this.game, \"./assets/backgrounds/Station_Background.png\"));\n        super.addGameObject(new Background(this.game, \"./assets/assembly/case.jpg\", 0, 150, 1024, 197));\n        this.foodBottom = new FoodBottom(this.game, 227, 375, 570, 300);\n        super.addGameObject(this.foodBottom);\n        const binWidth = 80;\n        const binHeight = 80;\n        const foods = [\n            {\n                name: \"rice\",\n                img: \"./assets/assembly/crab.png\",\n            },\n            {\n                name: \"avocado\",\n                img: \"./assets/assembly/avocado.png\",\n            },\n            {\n                name: \"crab\",\n                img: \"./assets/assembly/crab.png\",\n            },\n            {\n                name: \"cucumber\",\n                img: \"./assets/assembly/cucumber.png\",\n            },\n            {\n                name: \"salmon\",\n                img: \"./assets/assembly/salmon.png\",\n            },\n            {\n                name: \"tuna\",\n                img: \"./assets/assembly/tuna.png\",\n            },\n            {\n                name: \"shrimp\",\n                img: \"./assets/assembly/cucumber.png\",\n            },\n            {\n                name: \"eel\",\n                img: \"./assets/assembly/cucumber.png\",\n            },\n            {\n                name: \"uni\",\n                img: \"./assets/assembly/uni.png\",\n            },\n            {\n                name: \"tamago\",\n                img: \"./assets/assembly/tamago.png\",\n            },\n            {\n                name: \"idk\",\n                img: \"./assets/assembly/cucumber.png\",\n            },\n            {\n                name: \"idk\",\n                img: \"./assets/assembly/cucumber.png\",\n            }\n        ]\n        let curFood = 0;\n        let y = 240;\n        for(let x = 0; x < 12; x++) {\n            const foodBin = new FoodBin(this.game, foods[curFood], 10 + x * (binWidth + 4), y, binWidth, binHeight);\n            super.addGameObject(foodBin);\n            foodBin.addButton(); // add the button to the scene after the bin is added\n            curFood++;\n        }\n\n        this.rollButton = Button.rectButton(this.game, 600, 320, 100, 50, () => {\n            console.log(\"Clicked roll button\");\n            this.roll()\n            rollManage!.completeRoll();\n        }, \"Roll\") \n        this.rollButton.hidden = true;\n        super.addGameObject(this.rollButton)\n        super.addGameObject(new SceneUpdater(this.game, this));\n        \n    }\n\n    roll() {\n        console.log(\"rolling\");\n        this.rollButton!.removeFromWorld = true;\n        this.foodBottom!.rolled = true;\n    }\n}\n\nclass FoodBin extends GameObject {\n    game: GameEngine;\n    food: {name: string, img: string};\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    dnd: DnDButton | undefined;\n\n    constructor(game: GameEngine, food: {name: string, img: string}, x: number, y: number, width: number, height: number) {\n        super(game, 'foodbin');\n        this.game = game;\n        this.food = food;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    };\n\n    addButton() {\n        this.dnd = DnDButton.transparentImageButton(this.game, this.x, this.y, this.width, this.height, this.food.img, () => {\n            console.log(\"clicked on food bin\", this.food);\n        });\n        this.dnd.width = this.width;\n        this.dnd.height = this.height;\n        this.dnd.food = this.food;\n        if(this.game.currentScene) this.game.currentScene.addGameObject(this.dnd);\n    }\n\n    update() {\n        \n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(ASSET_MANAGER.getAsset(\"./assets/assembly/tray.jpg\") as HTMLImageElement, this.x, this.y, this.width, this.height);\n        \n        const bottomWidth = 80\n        const bottomHeight = 35\n        const xOffset = this.width - bottomWidth\n        const yOffset = this.height - (bottomHeight)\n        const xCount = 3\n        const xSpace = bottomWidth / xCount\n        const yCount = 3\n        const ySpace = bottomHeight / yCount;\n        for(let row = 0; row < yCount; row++) {\n            for(let col = 0; col < xCount; col++) {\n                ctx.drawImage(ASSET_MANAGER.getAsset(this.food.img) as HTMLImageElement, this.x + xOffset + (xSpace * col), this.y + (yOffset / 2) - 5 + (ySpace * row))\n            }\n        }\n    };\n}\n\nconst UNROLLED_HEIGHT = 120\nconst ROLLED_HEIGHT = 75\n\nclass FoodBottom extends GameObject {\n    game: GameEngine;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    foods: {name: string, img: string}[];\n    rolled: boolean;\n    chops: number;\n    cut: boolean;\n\n    constructor(game: GameEngine, x: number, y: number, width: number, height: number) {\n        super(game, 'foodbottom');\n        this.game = game;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.foods = [];\n        this.rolled = false;\n        this.chops = 0;\n        this.cut = false;\n    };\n\n    update() {\n        if(!this.rolled) return;\n        if(this.chops >= 15) {\n            this.cut = true\n            console.log(\"Cut sushi\");\n        }\n        if(this.game.down) {\n            if(this.game.timer!.gameTime - this.game.previousMousePositionsLatest > 0.1) {\n                this.game.previousMousePositions = []\n            }\n            if(this.game.previousMousePositions.length === 15) {\n                this.game.previousMousePositions.forEach((pos: { x: number, y: number }, index: number) => {\n                    if(pos.x > this.x - (this.width / 2) && pos.x < this.x + (this.width / 2) && pos.y > this.y && pos.y < this.y + ROLLED_HEIGHT) {\n                        this.chops += 1\n                    }\n               })\n            }\n        } else {\n            this.game.previousMousePositions = []\n        }\n        \n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if (rollManage.activeIngredients.length > 0) {\n            if(this.cut) {\n                ctx.fillStyle = \"green\";\n                const cutWidth = (this.width - 50) / 6\n                for(let i = 0; i < 6; i++) {\n                    ctx.fillRect(this.x - 5 + ((cutWidth + 5) * i), this.y + 100, cutWidth, ROLLED_HEIGHT); \n                }\n                if(this.game.sliding) return;\n                setTimeout(() => {\n                    setInterval(() => {\n                        this.x += 10\n                        if(this.x > 1024) {\n                            super.removeFromWorld = true\n                        }\n                    }, 10)\n                }, 1000)\n                this.game.sliding = true\n                return;    \n            }\n            if(this.rolled) {\n                ctx.fillStyle = \"green\";\n                ctx.fillRect(this.x, this.y + 100, this.width - 50, ROLLED_HEIGHT);\n                if(this.game.down) {\n                    ctx.beginPath()\n                    this.game.previousMousePositions.forEach((pos: { x: number; y: number; }, index: number) => {\n                        if(index === 0) {\n                            ctx.moveTo(pos.x, pos.y);\n                        } else {\n                            ctx.lineTo(pos.x, pos.y);\n                        }\n                    })\n                    ctx.stroke()\n                }\n                return;\n            }\n        \n            const bambooMatImg = ASSET_MANAGER.getAsset(\"./assets/objects/BambooMat.png\") as HTMLImageElement;\n            ctx.drawImage(bambooMatImg, this.x, this.y);\n\n            rollManage.activeIngredients.forEach(element => {\n                if (element.type == 'rice' || element.type == 'nori') {\n                    const img = ASSET_MANAGER.getAsset(element.img) as HTMLImageElement;\n                    ctx.drawImage(img, this.x, this.y);\n                }\n            })\n            this.foods.forEach(element => {\n                const img = ASSET_MANAGER.getAsset(element.img) as HTMLImageElement;\n                const xOffset = 50;\n                const spacing = (this.width - xOffset - 50) / 6;\n                for(let i = 0; i < 6; i++) {\n                    ctx.drawImage(img, this.x + (i * spacing) + xOffset, this.y + 100, img.width * 2, img.height * 2);\n                } \n            });\n        }\n    \n    };\n    \n\n    onDnDDrop(e: CustomEvent) {\n        //console.log(\"dropped\");\n        //console.log(e);\n        //console.log(e.detail)\n        if(e.detail.x >= this.x && e.detail.x <= this.x + this.width && e.detail.y >= this.y && e.detail.y <= this.y + this.height && rollManage.activeIngredients.length > 0) {\n            console.log(\"dropped in food bottom\");\n            this.foods.push(e.detail.button.food);\n            rollManage.addIngredient(new Ingredient(e.detail.button.food.name));\n            e.detail.button.game.currentScene.rollButton.hidden = false;\n        }\n    }\n}\n\nclass SceneUpdater extends GameObject {\n    game: GameEngine;\n    scene: RiceAssemblyScene;\n    orderManageButtonExists: boolean;\n\n    constructor(game: GameEngine, scene: RiceAssemblyScene) {\n        super(game);\n        this.game = game;\n        this.scene = scene;\n        this.orderManageButtonExists = false;\n    }\n\n    update() {\n\n        if (!this.orderManageButtonExists) {\n            this.orderManageButtonExists = true;\n            orderManage.orderButton.removeFromWorld = false\n            this.scene.addGameObject(orderManage.orderButton);\n        }\n    };\n\n    draw(ctx: CanvasRenderingContext2D) {\n    };\n}","import { WashThatRiceScene } from \"./scenes/washThatRice/scene.js\";\nimport { DontBurnRiceScene } from \"./scenes/dontBurnRice/scene.js\";\nimport { FillThePotScene } from \"./scenes/fillThePot/scene.js\";\nimport SwatTheFliesScene from \"./scenes/swatTheFlies/scene.js\";\nimport { CounterScene } from \"./scenes/counter/scene.js\";\nimport { RiceStationScene } from \"./scenes/riceStation/scene.js\";\nimport { RiceAssemblyScene } from \"./scenes/assembly/scene.js\";\nimport GameEngine from \"./gameEngine.js\";\nimport Scene from \"./scene.js\";\n\nexport default class SceneManager {\n    game: GameEngine;\n    scenes: { [key: string]: Scene };\n    currentScene: string | null;\n\n    constructor(game: GameEngine){\n        this.game = game;\n        this.scenes = {};\n        this.currentScene = null;\n\n        this.registerScene(\"order\", new CounterScene(this.game, 0, 0));\n        this.registerScene(\"rice\", new RiceStationScene(this.game));\n        this.registerScene(\"roll\", new RiceAssemblyScene(this.game));\n        this.registerScene(\"sides\", new WashThatRiceScene(this.game, 0, 0));\n\n        this.registerScene(\"burn\", new DontBurnRiceScene(this.game, 0, 0));\n        this.registerScene(\"fill\", new FillThePotScene(this.game, 0, 0));\n        this.registerScene(\"wash\", new WashThatRiceScene(this.game, 0, 0));\n\n        this.loadScene(\"order\");\n        //this.onDeload = null;\n    };\n\n    registerScene(id: string, scene: Scene) {\n        //console.log(\"registering scene: \" + id);\n        this.scenes[id] = scene;\n    }\n\n    loadScene(scene: string) {\n        if(this.currentScene === scene) return;\n        if(!this.scenes[scene]) {\n            //console.log(\"error: scene not found: \" + scene);\n            return;\n        }\n\n        if(this.currentScene) {\n            //console.log(\"deloading scene: \" + this.currentScene);\n            this.scenes[this.currentScene].deload();\n        }\n\n        //console.log(\"loading scene: \" + scene);\n        this.currentScene = scene;\n        this.game.currentScene = this.scenes[scene];\n        \n        this.scenes[scene].initalizeScene();\n    };\n\n    update() {};\n    draw(ctx: CanvasRenderingContext2D) {};\n\n}\n\n","import { Button } from \"./button.js\";\nimport GameEngine from \"./gameEngine.js\";\n\nexport default class StationSwitcher {\n    game: GameEngine;\n    orderButton: Button;\n    riceButton: Button;\n    rollButton: Button;\n    sidesButton: Button;\n\n    constructor(game: GameEngine) {\n        this.game = game;\n\n        this.orderButton = Button.imageButton(game, 102, 694, \"./assets/button/Order_Button.JPG\", () => this.game.sceneManager.loadScene(\"order\"));\n        this.riceButton = Button.imageButton(game, 318, 694, \"./assets/button/Rice_Button.JPG\", () => this.game.sceneManager.loadScene(\"rice\"));\n        this.rollButton = Button.imageButton(game, 534, 694, \"./assets/button/Roll_Button.JPG\", () => this.game.sceneManager.loadScene(\"roll\"));\n        this.sidesButton = Button.imageButton(game, 750, 694, \"./assets/button/Side_Button.JPG\", () => this.game.sceneManager.loadScene(\"sides\"));\n\n        game.addEntity(this.orderButton);\n        game.addEntity(this.riceButton);\n        game.addEntity(this.rollButton);\n        game.addEntity(this.sidesButton);\n    }\n\n    update() {}\n\n    draw(ctx: CanvasRenderingContext2D) {}\n}","import GameEngine from \"./gameEngine\";\n\nexport default class RollManager {\n    game: GameEngine;\n    activeIngredients: any[];\n    isComplete: boolean;\n\n    constructor(game: GameEngine) {\n        this.game = game;\n        this.activeIngredients = [];\n        this.isComplete = false;\n    }\n\n    addIngredient(ingredient: any) {\n        this.activeIngredients.push(ingredient);\n        console.log(ingredient);\n    }\n\n    getRolls() {\n        return this.activeIngredients;\n    }\n\n    completeRoll() {\n        this.isComplete = true;\n    }\n\n    update() {};\n    draw(ctx: CanvasRenderingContext2D) {}; \n}","import AssetManager from \"./assetManager.js\";\nimport GameEngine from \"./gameEngine.js\";\nimport OrderManager from \"./orderManager.js\";\nimport SceneManager from \"./sceneManager.js\";\nimport StationSwitcher from \"./stationSwitcher.js\";\nimport RollManager from \"./rollManager.js\";\nimport CustomerManager from \"./customerManager.js\";\n\n\n\nexport const ASSET_MANAGER = new AssetManager();\nlet sceneManage, orderManage, rollManage, customerManage;\n\n// sprites\n\n// backgrounds\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Rice_Background.JPG\");\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Roll_Background.JPG\");\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Order_Background.png\");\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Order_Foreground.png\");\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Station_Background.png\");\nASSET_MANAGER.queueDownload(\"./assets/backgrounds/Minigame_Background.png\");\n\n// rice station\nASSET_MANAGER.queueDownload(\"./assets/objects/RiceCooker.png\");\nASSET_MANAGER.queueDownload(\"./assets/objects/BambooMat.png\");\nASSET_MANAGER.queueDownload(\"./assets/objects/Rice_Cooked.png\");\nASSET_MANAGER.queueDownload(\"./assets/objects/Nori.png\");\nASSET_MANAGER.queueDownload(\"./assets/objects/Nori_Source.png\");\n\n// buttons\nASSET_MANAGER.queueDownload(\"./assets/button/Rice_Button.JPG\");\nASSET_MANAGER.queueDownload(\"./assets/button/Roll_Button.JPG\");\nASSET_MANAGER.queueDownload(\"./assets/button/Side_Button.JPG\");\nASSET_MANAGER.queueDownload(\"./assets/button/Order_Button.JPG\");\n\n//sushi assembly\nASSET_MANAGER.queueDownload(\"./assets/assembly/case.jpg\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/tray.jpg\");\n\n//Wash that rice\nASSET_MANAGER.queueDownload('./assets/hand.png');\nASSET_MANAGER.queueDownload('./assets/pot_top.png');\nASSET_MANAGER.queueDownload('./assets/pot_top_outside.png');\nASSET_MANAGER.queueDownload('./assets/rotate.png');\nASSET_MANAGER.queueDownload('./assets/checkmark.png');\n\n// fill the pot\nASSET_MANAGER.queueDownload('./assets/objects/Faucet_Off.png');\nASSET_MANAGER.queueDownload('./assets/objects/Faucet_On.png');\nASSET_MANAGER.queueDownload('./assets/objects/Pot_Animation.png');\nASSET_MANAGER.queueDownload('./assets/backgrounds/FillThePot_Background.png');\n\n// Don't burn the rice.\nASSET_MANAGER.queueDownload('./assets/objects/RiceCooker_On.png');\nASSET_MANAGER.queueDownload('./assets/objects/RiceCooker_Off.png');\n\n\nASSET_MANAGER.queueDownload('./assets/sounds/jingle.mp3');\n\n// Swat the flies\nASSET_MANAGER.queueDownload(\"./assets/flies.png\");\nASSET_MANAGER.queueDownload(\"./assets/swatter.png\");\n\n//Counter\nASSET_MANAGER.queueDownload(\"./assets/characters/dummy.png\");\n\n// Food bits\nASSET_MANAGER.queueDownload(\"./assets/assembly/crab.png\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/cucumber.png\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/tuna.png\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/avocado.png\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/salmon.png\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/uni.png\");\nASSET_MANAGER.queueDownload(\"./assets/assembly/tamago.png\");\n\n \nASSET_MANAGER.downloadAll(() => {\n    const gameEngine = new GameEngine({\n        debugging: false,\n    });\n\n\tconst canvas = document.getElementById(\"gameWorld\") as HTMLCanvasElement;\n    if (!canvas) {\n        throw new Error(\"Canvas element not found\");\n    }\n\tconst ctx = canvas.getContext(\"2d\");\n    if (!ctx) {\n        throw new Error(\"Canvas context not found\");\n    }\n    \n\tgameEngine.init(ctx);\n\n    sceneManage = new SceneManager(gameEngine);\n\tgameEngine.addEntity(sceneManage);\n    gameEngine.sceneManager = sceneManage;\n\n    orderManage = new OrderManager(gameEngine);\n    rollManage = new RollManager(gameEngine);\n    customerManage  = new CustomerManager(gameEngine);\n\n    gameEngine.addEntity(orderManage);\n    gameEngine.addEntity(rollManage)\n\n\tgameEngine.addEntity(new StationSwitcher(gameEngine));\n\n\tgameEngine.start();\n\n});\n\n/** Creates an alias for requestAnimationFrame for backwards compatibility */\n//@ts-expect-error\nwindow.requestAnimFrame = (() => {\n    return window.requestAnimationFrame || // @ts-expect-error\n        window.webkitRequestAnimationFrame || // @ts-expect-error\n        window.mozRequestAnimationFrame || // @ts-expect-error\n        window.oRequestAnimationFrame || // @ts-expect-error\n        window.msRequestAnimationFrame ||\n        /**\n         * Compatibility for requesting animation frames in older browsers\n         * @param {Function} callback Function\n         * @param {DOM} element DOM ELEMENT\n         */\n        ((callback: TimerHandler, element: any) => {\n            window.setTimeout(callback, 1000 / 60);\n        });\n})();\nexport { sceneManage, orderManage, rollManage, customerManage };"],"names":["AssetManager","__publicField","path","callback","i","that","ext","img","aud","audio","bak","mute","key","asset","volume","Timer","current","delta","gameDelta","GameObject","game","id","persistent","data","ctx","e","Faucet","pot","currentData","newAmount","ASSET_MANAGER","mouseX","mouseY","GameEngine","options","gameLoop","getXandY","x","y","entity","event","entitiesCount","diff","defaultValue","value","gameObject","Button","onClick","image","button","width","height","text","DnDButton","dnd","color","OrderManager","order","o","length","placement","yOffset","sprite","ProgressBar","randomIntRange","start","end","getDistance","p1","p2","PotTop","avgPos","acc","curr","avgDist","PotTopOutside","COLORS","RiceGrain","angle","distance","centerX","centerY","RotateIcon","Hand","Checkmark","Scene","obj","WIDTH","HEIGHT","POT_RADIUS","WashThatRiceScene","Background","amountOfGrains","rice","TimerBar","gameEngine","totalTime","progressWidth","perfectStartX","perfectEndX","timerBar","off","on","DontBurnRiceScene","timeBar","riceCooker","RiceCooker","Pot","FillThePotScene","spritesheet","Order","ingredients","sides","Ingredient","type","Wrap","Side","WRAP","INGREDIENTS","CONDIMENTS","SIDES","Customer","intervalID","orderManage","getRandomElements","array","count","numWrap","numIngredients","numCondiments","numSides","selectedWraps","selectedIngredients","selectedCondiments","selectedSides","CounterScene","RiceStationScene","BambooMat","nori","Nori","minigame","sceneManage","element","rollManage","RiceAssemblyScene","FoodBottom","binWidth","binHeight","foods","curFood","foodBin","FoodBin","SceneUpdater","food","bottomWidth","bottomHeight","xOffset","xCount","xSpace","yCount","ySpace","row","col","ROLLED_HEIGHT","pos","index","cutWidth","bambooMatImg","spacing","scene","SceneManager","StationSwitcher","RollManager","ingredient","canvas"],"mappings":"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"}